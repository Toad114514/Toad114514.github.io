[{"title":"一篇文章上手 Termux","url":"http://toad114514.github.io/2024/08/20/termux-all/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>termux，一个让你在手机上运行类 linux 终端的工具。本以为他会和终端模拟器那样，需要root。其实不然<br>termux 特地为此封装了无数需要在 linux 中才可运行的包并毫无意外的在安卓里稳定运行。<br>于是在包管理器它支持了 apt 和 dpkg<br>在开发环境它支持了 python 等语言<br>在黑客上面它支持了 nmap 和 metasploit<br>在 root 方面它支持了 tsu 和 proot<br>在服务器方面它支持 apache 等服务器<br>在运行其他 linux 发行版上面有 proot-distro<br>我愿称之为安卓上目前最他🐴强的开源高级免root终端<br>最近一段时间在 GitHub 上，突然发现停更三年的 termux 更新了0.118.1！于是下载回来了<br>个人也是用了几年的termux了，也是直接开写给大家分享一波</p>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>本文章事例的termux为0.118.1，较老的版本一般情况下安装步骤相同，但无法保证稳定性和其他bug</p>\n<h1 id=\"安装-termux\"><a href=\"#安装-termux\" class=\"headerlink\" title=\"安装 termux\"></a>安装 termux</h1><p>文档📃<br><a href=\"https://termux.com/\">termux 官网</a><br><a href=\"https://github.com/termux/termux-app\">Github 仓库</a><br>下载链接🔗<br><a href=\"https://f-droid.org/packages/com.termux/\">F-Droid</a><br><a href=\"https://play.google.com/store/apps/details?id=com.termux\">Google Play（需要外网）</a></p>\n<h1 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h1><p>初始化时，termux需要从<a href=\"http://termux.net/bootstrap/\">http://termux.net/bootstrap/</a>获取文件。<br>可惜这服务器放在国外，于是：<br><img src=\"https://image.3001.net/images/20200418/15871943464391.png\" alt=\"https://image.3001.net/images/20200418/15871943464391.png\"><br>上述问题只会在部分网络出现。<br>解决办法也不是没有，就是翻墙，大概率都能成功的。</p>\n<h1 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h1><p>基本操作是得学的，大大增加效率</p>\n<h2 id=\"缩放文本\"><a href=\"#缩放文本\" class=\"headerlink\" title=\"缩放文本\"></a>缩放文本</h2><p>双指放大&#x2F;缩小用于调整文本大小</p>\n<h2 id=\"菜单项\"><a href=\"#菜单项\" class=\"headerlink\" title=\"菜单项\"></a>菜单项</h2><p>长按终端将弹出菜单项<br>目前菜单项如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">菜单项</span><br><span class=\"line\">├── COPY:    # 复制</span><br><span class=\"line\">├── PASTE:   # 粘贴</span><br><span class=\"line\">├── More:    # 更多</span><br><span class=\"line\">   ├── Select URL:       # 提取屏幕所有网址</span><br><span class=\"line\">   └── Share transcipt:    # 分享命令脚本</span><br><span class=\"line\">   └── Reset:             # 重置</span><br><span class=\"line\">   └── Kill process:      # 杀掉当前会话进程</span><br><span class=\"line\">   └── Style:             # 风格配色 需要自行安装</span><br><span class=\"line\">   └── Keep screen on:    # 保持屏幕常亮</span><br><span class=\"line\">   └── Help:              # 帮助文档</span><br></pre></td></tr></table></figure>\n<h2 id=\"会话\"><a href=\"#会话\" class=\"headerlink\" title=\"会话\"></a>会话</h2><p>从屏幕最左边往右滑动可打开会话管理，你可以在此新建会话<code>NEW SESSION</code>、切换会话、重命名会话和启动软键盘<code>KEYBOARD</code><br>你也可以在你的通知栏查看termux目前运行的会话数量（前提是为termux授予通知权限）</p>\n<h2 id=\"常用按键\"><a href=\"#常用按键\" class=\"headerlink\" title=\"常用按键\"></a>常用按键</h2><p>在linux及大多数pc上，常用的ESC、Tab、CTRL等，这些常用按键在安卓下是无法使用的。但termux给了我们一个可以使用它们的机会，使得日后使用更加方便。<br>打开或隐藏常用按键有如下方法：</p>\n<h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h3><p>从屏幕最左边往右滑动打开会话管理，长按左下方的<code>KEYBOARD</code>按钮</p>\n<h3 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2\"></a>方法2</h3><p>使用快捷键：<code>音量+</code>+<code>Q</code>或者<code>音量+</code>+K</p>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><p>在终端上，<code>CTRL</code>是终端用户常用的按键<br>在termux中，开发团队将<code>CTRL</code>键设置在了<code>音量减小按钮</code>以此模拟<code>CTRL</code><br>以下是快捷键表：</p>\n<table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>对应功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Ctrl+A</code></td>\n<td>将光标移到行首</td>\n</tr>\n<tr>\n<td><code>Ctrl+C</code></td>\n<td>终止进程</td>\n</tr>\n<tr>\n<td><code>Ctrl+D</code></td>\n<td>注销当前会话</td>\n</tr>\n<tr>\n<td><code>Ctrl+E</code></td>\n<td>将光标移到行尾</td>\n</tr>\n<tr>\n<td><code>Ctrl+K</code></td>\n<td>将光标删除到行尾</td>\n</tr>\n<tr>\n<td><code>Ctrl+U</code></td>\n<td>将光标删除到行首</td>\n</tr>\n<tr>\n<td><code>Ctrl+L</code></td>\n<td>清除终端文本</td>\n</tr>\n<tr>\n<td><code>Ctrl+Z</code></td>\n<td>挂起当前进程</td>\n</tr>\n<tr>\n<td><code>Ctrl+ALT+C</code></td>\n<td>创建新会话</td>\n</tr>\n</tbody></table>\n<div class=\"note danger simple\"><p>创建新会话的快捷键需要黑客键盘应用，本应用的链接请移到 其他 - 黑客键盘 一节</p>\n</div>\n<div class=\"note warning simple\"><p>由于上述已经标明了<code>音量-</code>模拟<code>CTRL</code>，如果需要清楚当前文本（<code>CTRL+L</code>）则按下<code>音量-</code>+<code>L</code>即可实现清屏。其他也是如此</p>\n</div>\n<p>当然，<code>音量+</code>也可以产生特定输入的<code>特殊键</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">音量加 + E -&gt; Esc键</span><br><span class=\"line\">音量加 + T -&gt; Tab键</span><br><span class=\"line\">音量加 + 1 -&gt; F1（音量增加 + 2 → F2…以此类推）</span><br><span class=\"line\">音量加 + 0 -&gt; F10</span><br><span class=\"line\">音量加 + B -&gt; Alt + B，使用readline时返回一个单词</span><br><span class=\"line\">音量加 + F -&gt; Alt + F，使用readline时转发一个单词</span><br><span class=\"line\">音量加 + X -&gt; Alt+X</span><br><span class=\"line\">音量加 + W -&gt; 向上箭头键</span><br><span class=\"line\">音量加 + A -&gt; 向左箭头键</span><br><span class=\"line\">音量加 + S -&gt; 向下箭头键</span><br><span class=\"line\">音量加 + D -&gt; 向右箭头键</span><br><span class=\"line\">音量加 + L -&gt; | （管道字符）</span><br><span class=\"line\">音量加 + H -&gt; 〜（波浪号字符）</span><br><span class=\"line\">音量加 + U -&gt; _ (下划线字符)</span><br><span class=\"line\">音量加 + P -&gt; 上一页</span><br><span class=\"line\">音量加 + N -&gt; 下一页</span><br><span class=\"line\">音量加 + . -&gt; Ctrl + \\（SIGQUIT）</span><br><span class=\"line\">音量加 + V -&gt; 显示音量控制</span><br><span class=\"line\">音量加 + Q -&gt; 切换显示的功能键视</span><br><span class=\"line\">音量加 + K -&gt; 切换显示的功能键视图</span><br></pre></td></tr></table></figure>\n<h1 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h1><h2 id=\"包管理器\"><a href=\"#包管理器\" class=\"headerlink\" title=\"包管理器\"></a>包管理器</h2><p>termux不仅支持<code>apt</code>，同时也在此基础上封装了<code>pkg</code>，其指令向下兼容<code>apt</code>。如下为<code>pkg</code>指令的使用方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg search &lt;query&gt; <span class=\"comment\"># 搜索包</span></span><br><span class=\"line\">pkg install &lt;package&gt; <span class=\"comment\"># 安装包</span></span><br><span class=\"line\">pkg uninstall &lt;package&gt; <span class=\"comment\"># 卸载包</span></span><br><span class=\"line\">pkg update <span class=\"comment\"># 更新源</span></span><br><span class=\"line\">pkg upgrade <span class=\"comment\"># 更新包</span></span><br><span class=\"line\">pkg list-all <span class=\"comment\"># 列出所有包</span></span><br><span class=\"line\">pkg list-installed <span class=\"comment\"># 列出已安装的包</span></span><br><span class=\"line\">pkg show &lt;package&gt; <span class=\"comment\"># 显示该包的详细信息</span></span><br><span class=\"line\">pkg files &lt;package&gt; <span class=\"comment\"># 显示该包的相关文件夹路径</span></span><br></pre></td></tr></table></figure>\n<div class=\"note info simple\"><p>建议使用 <code>pkg</code> 命令安装包<br>因为每次使用 <code>pkg</code> 安装包前，会自动执行<code>apt update</code>命令更新源，会比较方便</p>\n</div>\n<h2 id=\"deb包管理器\"><a href=\"#deb包管理器\" class=\"headerlink\" title=\"deb包管理器\"></a>deb包管理器</h2><p>除开上述的<code>pkg</code>外，如果某个牢底给你发来了一个deb软件包文件或者有deb软件包文件，可以通过<code>dpkg</code>安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dpkg -i &lt;deb文件名&gt; <span class=\"comment\"># 安装deb包</span></span><br><span class=\"line\">dpkg remove &lt;软件包名字&gt; <span class=\"comment\"># 卸载软件包</span></span><br><span class=\"line\">dpkg -l <span class=\"comment\"># 查看已安装的包</span></span><br><span class=\"line\">man dpkg <span class=\"comment\"># 查看 dpkg 包文档</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"路径\"><a href=\"#路径\" class=\"headerlink\" title=\"路径\"></a>路径</h2><p>下面都是 termux 提供的特殊变量，用于脚本制作和开发等</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$HOME</span></span><br><span class=\"line\">/data/data/com.termux/files/home</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$PREFIX</span></span><br><span class=\"line\">/data/data/com.termux/files/usr</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$TMPPREFIX</span></span><br><span class=\"line\">/data/data/com.termux/files/usr/tmp/zsh</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看端口\"><a href=\"#查看端口\" class=\"headerlink\" title=\"查看端口\"></a>查看端口</h2><h3 id=\"Android-10-以下版本\"><a href=\"#Android-10-以下版本\" class=\"headerlink\" title=\"Android 10 以下版本\"></a>Android 10 以下版本</h3><p>Android 10 以下版本可通过<code>netstat</code>查看端口</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -an <span class=\"comment\"># 查看本机的所有端口</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Android-10-以上版本\"><a href=\"#Android-10-以上版本\" class=\"headerlink\" title=\"Android 10 以上版本\"></a>Android 10 以上版本</h3><p>由于未知原因，Android 10 以上版本无法使用<code>netstat -an</code>，唯一的解决办法则是<code>nmap</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install nmap <span class=\"comment\"># 安装端口扫描工具</span></span><br><span class=\"line\">nmap 127.0.0.1 <span class=\"comment\"># 扫描本地端口</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"配置termux\"><a href=\"#配置termux\" class=\"headerlink\" title=\"配置termux\"></a>配置termux</h1><p>要是你配置配不好那你termux还没用就成答辩了是不是</p>\n<h2 id=\"更新源\"><a href=\"#更新源\" class=\"headerlink\" title=\"更新源\"></a>更新源</h2><p>termux官方源在国外，运行<code>pkg update</code>时，由于更新源速度慢而导致红温，那不是得爆装备<br>所以接下来我们得换源：</p>\n<h3 id=\"termux-change-repo（360度无死角推荐）\"><a href=\"#termux-change-repo（360度无死角推荐）\" class=\"headerlink\" title=\"termux-change-repo（360度无死角推荐）\"></a>termux-change-repo（360度无死角推荐）</h3><p>在终端输入<code>termux-change-repo</code>进入一个神奇的TUI界面：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌────────termux-change-repo──────────────┐</span><br><span class=\"line\">│ Do you want to choose a mirror group or a </span><br><span class=\"line\">  single mirror? Select with space.                   │</span><br><span class=\"line\">│ ┌─────────────────────────────────────┐ │</span><br><span class=\"line\">│ │(*) Main Repository  xxxxxxxxxxxxxxxxxxxxx    │ │</span><br><span class=\"line\">│ │                                                    │ │</span><br><span class=\"line\">│ │                                                    │ │</span><br><span class=\"line\">│ │                                                    │ │</span><br><span class=\"line\">│ └──────────────────────────────────┘ │</span><br><span class=\"line\">├─────────────────────────────────────┤</span><br><span class=\"line\">│           &lt;  OK  &gt;          &lt;Cancel&gt;                 │</span><br><span class=\"line\">└─────────────────────────────────────┘</span><br></pre></td></tr></table></figure>\n<p>差不多长这吊样<br>将光标移到<code>Main Repository</code>然后按下空格再回车计入到下一个界面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| mirrors.tuna.tsing | Mirror by Tsinghua University TUNA Assoc |</span><br></pre></td></tr></table></figure>\n<p>找到上面所示的选项，将光标移动到上面，点击空格选择，然后回车换源<br>就这样，你的<code>pkg</code>源就换好了<br>换源完成后，请第一时间更新包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg update</span><br><span class=\"line\">pkg upgrade -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"自动替换\"><a href=\"#自动替换\" class=\"headerlink\" title=\"自动替换\"></a>自动替换</h3><p>输入下方命令自动替换为 TUNA 镜像源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i <span class=\"string\">&#x27;s@^\\(deb.*stable main\\)$@#\\1\\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&#x27;</span> <span class=\"variable\">$PREFIX</span>/etc/apt/sources.list</span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s@^\\(deb.*games stable\\)$@#\\1\\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@&#x27;</span> <span class=\"variable\">$PREFIX</span>/etc/apt/sources.list.d/game.list</span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s@^\\(deb.*science stable\\)$@#\\1\\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable@&#x27;</span> <span class=\"variable\">$PREFIX</span>/etc/apt/sources.list.d/science.list</span><br><span class=\"line\">pkg update</span><br></pre></td></tr></table></figure>\n<div class=\"note warning simple\"><p>孩子，在执行<code>pkg update</code>的时候，中间会卡住不动，那他🐴叫你是选择是否覆盖文件，记得回车！</p>\n</div>\n<p>换源完了之后就包爽的了</p>\n<h2 id=\"安装基础工具\"><a href=\"#安装基础工具\" class=\"headerlink\" title=\"安装基础工具\"></a>安装基础工具</h2><p>termux自带的命令工具都很少，毕竟体积也是不大的，得自己安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg update</span><br><span class=\"line\">pkg install vim curl wget git -y</span><br></pre></td></tr></table></figure>\n<h2 id=\"termux-setup-storage\"><a href=\"#termux-setup-storage\" class=\"headerlink\" title=\"termux-setup-storage\"></a>termux-setup-storage</h2><p>我们的 termux 现在没有可以访问外部文件的权限，我们得搞的哇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">termux-setup-storage</span><br></pre></td></tr></table></figure>\n<p>执行完该指令后，Android 6 以上的手机会弹出访问权限的请求，允许即可<br>你要是点拒绝了，可以重新输入命令再来一次</p>\n<h2 id=\"oh-my-zsh\"><a href=\"#oh-my-zsh\" class=\"headerlink\" title=\"oh-my-zsh\"></a>oh-my-zsh</h2><p>给你的终端美化一波，包靓的孩子<br><strong>脚本项目地址：</strong><a href=\"https://github.com/Cabbagec/termux-ohmyzsh/\">https://github.com/Cabbagec/termux-ohmyzsh/</a><br>脚本使用了<code>zsh</code>替换原<code>bash</code>作为默认shell，支持替换字体、主题和添加插件</p>\n<div class=\"note warning simple\"><p>执行下方命令前，看你的那个<code>curl</code>命令装好没哇</p>\n</div>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<p>某些low炮用不了，爆出来个<code>port 443: Connection refused</code>网络超时，可以用国光迁移到国内的地址：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://html.sqlsec.com/termux-install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<p>执行脚本中间会弹出配置设置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Enter a number, leave blank to not to change: 17</span><br><span class=\"line\">Enter a number, leave blank to not to change: 6</span><br></pre></td></tr></table></figure>\n<p>这两个分别是<code>终端色彩配置</code>和<code>字体样式配置</code>，在你输入完成这两个鬼东西之后，termux将关闭<br>再次进入termux将生效</p>\n<h3 id=\"修改配置方案\"><a href=\"#修改配置方案\" class=\"headerlink\" title=\"修改配置方案\"></a>修改配置方案</h3><p>你觉得不行？可以重新配置方案</p>\n<h4 id=\"设置色彩方案\"><a href=\"#设置色彩方案\" class=\"headerlink\" title=\"设置色彩方案\"></a>设置色彩方案</h4><p>运行<code>chcolor</code>设置色彩方案</p>\n<h4 id=\"设置字体\"><a href=\"#设置字体\" class=\"headerlink\" title=\"设置字体\"></a>设置字体</h4><p>运行<code>chfont</code>设置字体</p>\n<h3 id=\"zsh-主题\"><a href=\"#zsh-主题\" class=\"headerlink\" title=\"zsh 主题\"></a>zsh 主题</h3><p>使用 vim 编辑</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zshrc</span><br></pre></td></tr></table></figure>\n<p>这是zsh的配置，你会看见第一行是</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZSH_THEME=<span class=\"string\">&quot;agnoster&quot;</span></span><br></pre></td></tr></table></figure>\n<p>安装好zsh之后，默认使用<code>agnoster</code>主题<br>个人觉得这主题在oppo a5上面运行有点慢，当然这主题也是特别好的了<br>当然你也可以换<br>输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.oh-my-zsh/themes</span><br></pre></td></tr></table></figure>\n<p>这里面都是oh-my-zsh自带的所有主题，你都可以试一试，直到找到你喜欢的<br>toad目前用的是<code>gnzh</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ~/.zshrc#1</span></span><br><span class=\"line\">ZSH_THEME=<span class=\"string\">&quot;gnzh&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 差不多长这样</span></span><br><span class=\"line\"><span class=\"comment\"># ╭─u0_a442@localhost ~</span></span><br><span class=\"line\"><span class=\"comment\"># ╰─➤</span></span><br></pre></td></tr></table></figure>\n<p>如果你是🐴牛逼，可以试试<code>random</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZSH_THEME=<span class=\"string\">&quot;random&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h3><p>oh-my-zsh的star为何如此之高，不仅仅是主题，还有插件</p>\n<h4 id=\"zsh-users-zsh-autosuggestions\"><a href=\"#zsh-users-zsh-autosuggestions\" class=\"headerlink\" title=\"zsh-users&#x2F;zsh-autosuggestions\"></a>zsh-users&#x2F;zsh-autosuggestions</h4><p>这个插件将根据你的使用习惯去补全代码提高效率</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以下为安装命令</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class=\"variable\">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions</span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"><span class=\"comment\"># 以下为 ~/.zshrc 配置</span></span><br><span class=\"line\"><span class=\"comment\"># 找到下方行</span></span><br><span class=\"line\">plugins=(git)</span><br><span class=\"line\"><span class=\"comment\"># 改成这样</span></span><br><span class=\"line\">plugins=(&lt;其他插件名&gt; zsh-autosuggestions)</span><br><span class=\"line\"><span class=\"comment\"># 例如</span></span><br><span class=\"line\">plugins=(git zsh-autosuggestions)</span><br></pre></td></tr></table></figure>\n<p>然后输入<code>:wq</code>退出即可<br>接下来可以尝试补全命令了，输入你之前输入过的命令，会出现补全提示<br>这时只需要按下<code>右方向键</code>或快捷键<code>音量加+D</code>即可补全</p>\n<h2 id=\"设置软链接\"><a href=\"#设置软链接\" class=\"headerlink\" title=\"设置软链接\"></a>设置软链接</h2><p>手机是都是用<code>QQ</code>传文件<br>如果你已经授予了termux存储权限，那么会在 HOME 目录生成 storage 文件并生成诺干个软链接，都指向你手机存储卡的链接<br>为了方便传输，可以使用软链接指向到 QQ</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cd 到 Home 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\"><span class=\"comment\"># 用QQ的使用下方命令</span></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /data/data/com.termux/files/home/storage/shared/tencent/QQfile_recv QQ</span><br><span class=\"line\"><span class=\"comment\"># 用TIM的使用下方命令</span></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /data/data/com.termux/files/home/storage/shared/tencent/TIMfile_recv TIM</span><br></pre></td></tr></table></figure>\n<p>这样将可以从 <code>Home 目录</code>直接访问 <code>QQ</code> 文件夹，提升文件操作效率</p>\n<h2 id=\"termux-properties\"><a href=\"#termux-properties\" class=\"headerlink\" title=\"termux.properties\"></a>termux.properties</h2><p>termux的0.66及之后版本，termux可以通过<code>~/.termux/termux.properties</code>文件来配置termux的更多设置</p>\n<h3 id=\"自定义常用按键\"><a href=\"#自定义常用按键\" class=\"headerlink\" title=\"自定义常用按键\"></a>自定义常用按键</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.termux/termux.properties</span><br></pre></td></tr></table></figure>\n<p>在文件最底部添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extra-keys = [ \\</span><br><span class=\"line\"> [<span class=\"string\">&#x27;ESC&#x27;</span>,<span class=\"string\">&#x27;|&#x27;</span>,<span class=\"string\">&#x27;/&#x27;</span>,<span class=\"string\">&#x27;HOME&#x27;</span>,<span class=\"string\">&#x27;UP&#x27;</span>,<span class=\"string\">&#x27;END&#x27;</span>,<span class=\"string\">&#x27;PGUP&#x27;</span>,<span class=\"string\">&#x27;DEL&#x27;</span>], \\</span><br><span class=\"line\"> [<span class=\"string\">&#x27;TAB&#x27;</span>,<span class=\"string\">&#x27;CTRL&#x27;</span>,<span class=\"string\">&#x27;ALT&#x27;</span>,<span class=\"string\">&#x27;LEFT&#x27;</span>,<span class=\"string\">&#x27;DOWN&#x27;</span>,<span class=\"string\">&#x27;RIGHT&#x27;</span>,<span class=\"string\">&#x27;PGDN&#x27;</span>,<span class=\"string\">&#x27;BKSP&#x27;</span>] \\</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>这两行，就可以自定义常用按键了<br>以下为常用按键对照表</p>\n<table>\n<thead>\n<tr>\n<th>CTRL</th>\n<th><code>特殊按键</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ALT</td>\n<td><code>特殊按键</code></td>\n</tr>\n<tr>\n<td>FN</td>\n<td><code>特殊按键</code></td>\n</tr>\n<tr>\n<td>ESC</td>\n<td>退出</td>\n</tr>\n<tr>\n<td>TAB</td>\n<td>表格键</td>\n</tr>\n<tr>\n<td>HOME</td>\n<td>原位</td>\n</tr>\n<tr>\n<td>END</td>\n<td>结尾</td>\n</tr>\n<tr>\n<td>PGUP</td>\n<td>上翻页</td>\n</tr>\n<tr>\n<td>PGDN</td>\n<td>下翻页</td>\n</tr>\n<tr>\n<td>INS</td>\n<td>插入</td>\n</tr>\n<tr>\n<td>DEL</td>\n<td>删除</td>\n</tr>\n<tr>\n<td>BKSP</td>\n<td>退格</td>\n</tr>\n<tr>\n<td>UP</td>\n<td>上</td>\n</tr>\n<tr>\n<td>DOWN</td>\n<td>下</td>\n</tr>\n<tr>\n<td>LEFT</td>\n<td>左</td>\n</tr>\n<tr>\n<td>RIGHT</td>\n<td>右</td>\n</tr>\n<tr>\n<td>BACKSLASH</td>\n<td>反斜杠</td>\n</tr>\n<tr>\n<td>QUOTE</td>\n<td>双引号</td>\n</tr>\n<tr>\n<td>APOSTROPHE</td>\n<td>单引号</td>\n</tr>\n<tr>\n<td>F1~F12</td>\n<td>F1~F12键</td>\n</tr>\n</tbody></table>\n<div class=\"note danger simple\"><p>上述标有<code>特殊按键</code>最多只能在常用按键里出现一次，否则报错</p>\n</div>\n<p>Toad114514个人设置的常用按键配置如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extra-keys = [[<span class=\"string\">&#x27;ESC&#x27;</span>,<span class=\"string\">&#x27;/&#x27;</span>,<span class=\"string\">&#x27;-&#x27;</span>,<span class=\"string\">&#x27;`&#x27;</span>,<span class=\"string\">&#x27;UP&#x27;</span>,<span class=\"string\">&#x27;QUOTE&#x27;</span>,<span class=\"string\">&#x27;APOSTROPHE&#x27;</span>,<span class=\"string\">&#x27;PGUP&#x27;</span>], \\</span><br><span class=\"line\">             [<span class=\"string\">&#x27;TAB&#x27;</span>,<span class=\"string\">&#x27;CTRL&#x27;</span>,<span class=\"string\">&#x27;~&#x27;</span>,<span class=\"string\">&#x27;LEFT&#x27;</span>,<span class=\"string\">&#x27;DOWN&#x27;</span>,<span class=\"string\">&#x27;RIGHT&#x27;</span>,<span class=\"string\">&#x27;ENTER&#x27;</span>,<span class=\"string\">&#x27;PGDN&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动问候语\"><a href=\"#启动问候语\" class=\"headerlink\" title=\"启动问候语\"></a>启动问候语</h2><p>默认的问候语对于初学者来讲有帮助<br>但随着你的termux经验越来越多，我们就会觉得这个玩意太low炮了<br>于是你得改！</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"variable\">$PERFIX</span>/etc/motd</span><br></pre></td></tr></table></figure>\n<p>编辑问候语文件可直接修改启动语，改完后就可以长这样：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_____</span><br><span class=\"line\">|_   _|__ _ __ _ __ ___  _   ___  __</span><br><span class=\"line\">  | |/ _ \\ <span class=\"string\">&#x27;__| &#x27;</span>_ ` _ \\| | | \\ \\/ /</span><br><span class=\"line\">  | |  __/ |  | | | | | | |_| |&gt;  &lt;</span><br><span class=\"line\">  |_|\\___|_|  |_| |_| |_|\\__,_/_/\\_\\</span><br><span class=\"line\"></span><br><span class=\"line\">Termux v0.118.1 /localhost</span><br><span class=\"line\">Welcome,zhanghao not penis!!!!!!!!</span><br><span class=\"line\">╭─u0_a442@localhost ~</span><br><span class=\"line\">╰─➤</span><br></pre></td></tr></table></figure>\n<p><code>zhanghao not penis</code>是张浩没只因的意思<br>另外你可以把上面的 Termux 复制过来放到你的启动语里面</p>\n<h2 id=\"Root\"><a href=\"#Root\" class=\"headerlink\" title=\"Root\"></a>Root</h2><p>孩子们，这鬼东西无需root也能玩出花样<br>但还是能用的</p>\n<h3 id=\"Rootless\"><a href=\"#Rootless\" class=\"headerlink\" title=\"Rootless\"></a>Rootless</h3><p>可以安装 <code>proot</code> 模拟 linux 文件系统布局模拟</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install proot</span><br><span class=\"line\">termux-chroot</span><br></pre></td></tr></table></figure>\n<p>这鬼东西可以模拟root，但不是真的root<br>输入<code>exit</code>退出</p>\n<h3 id=\"Rooted\"><a href=\"#Rooted\" class=\"headerlink\" title=\"Rooted\"></a>Rooted</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install tsu</span><br></pre></td></tr></table></figure>\n<p>安装<code>tsu</code>，这是termux的专属<code>su</code><br>输入<code>tsu</code>可以为termux授予root权限<br>输入<code>exit</code>回到普通用户</p>\n<div class=\"note danger simple\"><p>如果操作不慎很可能会让你的手机变成板砖只能盖房子，谨慎使用</p>\n</div>\n<h2 id=\"备份和恢复\"><a href=\"#备份和恢复\" class=\"headerlink\" title=\"备份和恢复\"></a>备份和恢复</h2><p>有些low炮搞termux怕自己一不小心搞坏了是吧，也是直接出个备份教程<br>确保获取了外部存储权限，没有就</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">termux-setup-storage</span><br></pre></td></tr></table></figure>\n<h3 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /data/data/com.termux/files <span class=\"comment\"># 转到termux根目录</span></span><br><span class=\"line\">tar -zcf /sdcard/termux-backup.tar.gz home usr <span class=\"comment\"># 压缩成 tar.gz 文件做备份</span></span><br></pre></td></tr></table></figure>\n<p>备份就完成了</p>\n<div class=\"note danger simple\"><p>千万不要将备份文件放置在 termux 的私有目录里！<br>当通过设置清除数据输入或者卸载 termux 时，这些私有目录内的文件也会删掉（等同于你把备份文件放C盘但你要重装一个道理）<br>这些私有目录看上去类似如下的目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/data/data/com.termux </span><br><span class=\"line\">/sdcard/Android/data/com.termux</span><br><span class=\"line\">/storage/XXXX-XXXX/Android/data/com.termux</span><br><span class=\"line\"><span class=\"variable\">$&#123;HOME&#125;</span>/storage/external-1</span><br></pre></td></tr></table></figure>\n<p>请不要把备份文件放在这些地方，远离它们！</p>\n</div>\n<h3 id=\"恢复\"><a href=\"#恢复\" class=\"headerlink\" title=\"恢复\"></a>恢复</h3><p>这里假设您已将 Termux 之前备份的 home 和 usr 目录备份到同一个备份文件中。请注意，在此过程中所有文件都将被覆盖现有的配置：<br>首先确保获取了外部存储权限，没有就<code>termux-setup-storage</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /data/data/com.termux/files <span class=\"comment\"># 转到termux根目录</span></span><br><span class=\"line\">tar -zxf /sdcard/termux-backup.tar.gz --recursive-unlink --preserve-permissions <span class=\"comment\"># 解压备份文件并覆盖之前的文件，同时删除备份</span></span><br></pre></td></tr></table></figure>\n<p>这样就恢复完成了</p>\n<h2 id=\"pkg-仓库源\"><a href=\"#pkg-仓库源\" class=\"headerlink\" title=\"pkg 仓库源\"></a>pkg 仓库源</h2><p>termux开发者提供了三个仓库源，可通过 <code>pkg</code> 添加</p>\n<h3 id=\"x11-repo\"><a href=\"#x11-repo\" class=\"headerlink\" title=\"x11-repo\"></a>x11-repo</h3><p>如果你想要在termux上面安装桌面环境<code>(例如xfce)</code>，则执行下面代码添加x11仓库源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install x11-repo</span><br></pre></td></tr></table></figure>\n<h3 id=\"root-repo\"><a href=\"#root-repo\" class=\"headerlink\" title=\"root-repo\"></a>root-repo</h3><p>如果你想在termux上面搞点root才能做到的东西，可以执行下面代码添加root仓库源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install root-repo</span><br></pre></td></tr></table></figure>\n<h3 id=\"tur-repo\"><a href=\"#tur-repo\" class=\"headerlink\" title=\"tur-repo\"></a>tur-repo</h3><p>全称 <code>Termux User Repository</code>，都是别人封装上传的东西，<code>code-server</code>也在该源里面<br>如果你想在termux上面搞点其他的东西（例如安装<code>code-server</code>），可以执行下面代码添加tur仓库源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install tur-repo</span><br></pre></td></tr></table></figure>\n<h2 id=\"自启动\"><a href=\"#自启动\" class=\"headerlink\" title=\"自启动\"></a>自启动</h2><h3 id=\"etc目录\"><a href=\"#etc目录\" class=\"headerlink\" title=\"etc目录\"></a>etc目录</h3><p>进入<code>$PREFIX/etc</code>目录，输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim termux-login.sh</span><br></pre></td></tr></table></figure>\n<p>这个文件是每次 Termux 启动时自动执行的</p>\n<h3 id=\"home目录\"><a href=\"#home目录\" class=\"headerlink\" title=\"home目录\"></a>home目录</h3><p>来到<code>$HOME</code>目录，输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .bashrc</span><br></pre></td></tr></table></figure>\n<p>这个也是termux会使用的自启动文件，每次登陆时都会执行它</p>\n<h3 id=\"oh-my-zsh-1\"><a href=\"#oh-my-zsh-1\" class=\"headerlink\" title=\"oh-my-zsh\"></a>oh-my-zsh</h3><p>安装了 oh-my-zsh 的，可以使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .zshrc</span><br></pre></td></tr></table></figure>\n<p>也是自启动，与上面两个不同的是，该文件是到 oh-my-zsh 启动前会执行的</p>\n<h2 id=\"短命令\"><a href=\"#短命令\" class=\"headerlink\" title=\"短命令\"></a>短命令</h2><p>如果发现某些情况下容易掉服务，可以参考本节<br>这里使用短命令形式<code>alias</code>，可做到挂掉时快速通过短命令启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> &lt;短命令名字&gt;=&lt;具体执行的命令&gt;</span><br></pre></td></tr></table></figure>\n<p>定义短命令后，之后便可输入该短命令名字就可以运行其对应的长命令<br>可以与上面的自启动一起使用</p>\n<h2 id=\"挂载\"><a href=\"#挂载\" class=\"headerlink\" title=\"挂载\"></a>挂载</h2><p>termux 可通过自带文件夹进行挂载并允许其他应用访问 <code>$HOME</code> 目录<br>以mt管理器为例：</p>\n<ol>\n<li>打开mt管理器</li>\n<li>点击菜单 -&gt; 右上角三个点 -&gt; 添加本地存储</li>\n<li>在弹出的文件夹管理器中，点击右上角菜单 -&gt; Termux -&gt; 选择</li>\n<li>termux 的文件夹便挂载在了mt管理器里，mt管理器可随意访问termux的<code>$HOME</code>目录<div class=\"note warning simple\"><p>注意：由于 Android 限制，在设置挂载存储前和访问挂载存储时，必须在后台启动termux并挂在后台</p>\n</div></li>\n</ol>\n<h2 id=\"配置完成\"><a href=\"#配置完成\" class=\"headerlink\" title=\"配置完成\"></a>配置完成</h2><p>我们的termux配置完成了，是不是非常不错？<br>接下来就可以开始我们的其他配置了！<br>是不是特别激动！<br>你可以从右边的目录栏中选择一项去导航到你需要的！</p>\n<h1 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h1><p>首先从开发环境开始！<br>termux支持的开发环境可🐮13了，python、c、java、ruby、nodejs等等</p>\n<h2 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h2><p>在我们开始快乐写代码前，先选一个编辑器罢</p>\n<h3 id=\"Nano\"><a href=\"#Nano\" class=\"headerlink\" title=\"Nano\"></a>Nano</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install nano</span><br></pre></td></tr></table></figure>\n<p>支持打开多个文件，每行滚动，撤消&#x2F;重做，语法着色，行编号等功能</p>\n<h3 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install vim</span><br></pre></td></tr></table></figure>\n<p>编辑器之神，是个玩linux的都喜欢用这东西，每个linux发行版没有他都是一大坨</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install vim-python</span><br></pre></td></tr></table></figure>\n<p>termux开发者为此还封装了一个<code>vim-python</code>，支持更多有关于python的功能及优化</p>\n<h4 id=\"中文乱码问题修复\"><a href=\"#中文乱码问题修复\" class=\"headerlink\" title=\"中文乱码问题修复\"></a>中文乱码问题修复</h4><p>如果你的vim打开中文乱码的话，可以查看下方代码修复一波</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/</span><br><span class=\"line\">vim .vimrc</span><br></pre></td></tr></table></figure>\n<p>输入上方代码在<code>Home</code>目录创建一个vim配置文件<br>添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1</span><br><span class=\"line\"><span class=\"built_in\">set</span> enc=utf8</span><br><span class=\"line\"><span class=\"built_in\">set</span> fencs=utf8,gbk,gb2312,gb18030</span><br></pre></td></tr></table></figure>\n<p>输入<code>:wq</code>保存并退出<br>然后<code>source</code>一波</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> .vimrc</span><br></pre></td></tr></table></figure>\n<p>修复完成</p>\n<h4 id=\"高亮配色\"><a href=\"#高亮配色\" class=\"headerlink\" title=\"高亮配色\"></a>高亮配色</h4><p>输入<code>ls /data/data/com.termux/files/usr/share/vim/vim82/colors</code>查看自带的高亮配色文件<br>打开<code>~/.vimrc</code>，添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> nu               </span><br><span class=\"line\">colorscheme desert</span><br><span class=\"line\">syntax on</span><br></pre></td></tr></table></figure>\n<p>上面三行对应<code>显示行号</code>、<code>设置主题</code>和<code>启动高亮</code><br>这些主题你都可以试一试</p>\n<h4 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h4><p>大家刚入手vim肯定没基础，简单教几个知识吧</p>\n<h5 id=\"编辑文件\"><a href=\"#编辑文件\" class=\"headerlink\" title=\"编辑文件\"></a>编辑文件</h5><p>输入<code>vim &lt;文件名&gt;</code>便可通过 <code>vim</code> 打开文件</p>\n<h5 id=\"模式\"><a href=\"#模式\" class=\"headerlink\" title=\"模式\"></a>模式</h5><p>进入<code>vim</code>编辑文件时，可以看见termux终端左下角有一个 <code>Normal Mode</code><br><code>vim</code>总共有三个模式：</p>\n<ul>\n<li><code>Normal Mode</code> 普通模式，在该模式下可以输入vim代码</li>\n<li><code>Insert Mode</code> 输入模式，在该模式下可以随意删除或添加文字</li>\n<li><code>Visual Mode</code> 可视模式，在该模式下可选择文字并执行操作<br>在<code>Normal Mode</code>下，按下<code>i</code>键进入<code>Insert Mode</code>，按下<code>v</code>键进入<code>Visual Mode</code><br>在<code>Insert Mode</code>或<code>Visual Mode</code>下，按下<code>Ctrl+C</code>返回到<code>Normal Mode</code></li>\n</ul>\n<h5 id=\"普通模式基础\"><a href=\"#普通模式基础\" class=\"headerlink\" title=\"普通模式基础\"></a>普通模式基础</h5><p>这里教简单的一些东西就行了，这些东西下面你会用的上的</p>\n<ul>\n<li><code>:wq</code> 保存文件并退出</li>\n<li><code>:q!</code> 不保存文件直接退出</li>\n<li><code>:w</code> 保存文件但不退出</li>\n<li>按下<code>/</code>按键进入查找模式，按下<code>/</code>键后，输入要找的关键字，接着回车进行查找。查找时按下<code>n</code>(小写n)查找上一个，按下<code>N</code>(大写n)查找下一个。找到了便再按下回车完成查找。</li>\n</ul>\n<h2 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install python</span><br><span class=\"line\">python -v</span><br><span class=\"line\">clang -v</span><br><span class=\"line\">pip -v</span><br></pre></td></tr></table></figure>\n<p>python 默认自带 clang</p>\n<h3 id=\"升级-pip3\"><a href=\"#升级-pip3\" class=\"headerlink\" title=\"升级 pip3\"></a>升级 pip3</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple some-package</span><br></pre></td></tr></table></figure>\n<p>此时pip3执行将没有用，需要执行如下操作：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> /data/data/com.termux/files/usr/bin|grep pip</span><br><span class=\"line\">pip</span><br><span class=\"line\">pip3.8</span><br></pre></td></tr></table></figure>\n<p>接着查看所有版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip -v</span><br><span class=\"line\">pip3.8 -v</span><br></pre></td></tr></table></figure>\n<p>这不就完事了</p>\n<h3 id=\"IPython\"><a href=\"#IPython\" class=\"headerlink\" title=\"IPython\"></a>IPython</h3><p>python的增强交互式shell，支持自动补全变量、自动缩进和shell命令执行，同时内置各种功能和有用的函数</p>\n<div class=\"note danger simple\"><p>如果没有安装<code>clang</code>，那么ipython安装完成后将无法启动。建议先<code>pkg install clang</code></p>\n</div>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install ipython -i https://pypi.tuna.tsinghua.edu.cn/simple some-package</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipython -V</span><br></pre></td></tr></table></figure>\n<h3 id=\"jupyter-notebook\"><a href=\"#jupyter-notebook\" class=\"headerlink\" title=\"jupyter notebook\"></a>jupyter notebook</h3><p>与ipython共用一个内核的强大Web交互式提供程序<br>这喜仔需要的依赖有点多，孩子们还是在python3上搞吧<br>记得pip换国内镜像源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg update <span class=\"comment\"># 更新源</span></span><br><span class=\"line\">termux-chroot <span class=\"comment\"># 切 chroot</span></span><br><span class=\"line\">pkg install libclang <span class=\"comment\"># 安装clang</span></span><br><span class=\"line\">pip3 install jupyter -i https://pypi.tuna.tsinghua.edu.cn/simple some-package <span class=\"comment\"># 安装jupyter</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span> <span class=\"comment\"># 退出 chroot</span></span><br><span class=\"line\">pip3 install jupyterlab -i https://pypi.tuna.tsinghua.edu.cn/simple some-package <span class=\"comment\"># 安装jupyterlab</span></span><br><span class=\"line\">jupyter --version <span class=\"comment\">#查看jupyter版本</span></span><br></pre></td></tr></table></figure>\n<p>这东西拥有极其强大的功能，可以百度或必应一波</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jupyter notebook</span><br></pre></td></tr></table></figure>\n<p>输入上面命令启动notebook<br>然后看到输出的日志，复制里面的Url放浏览器里访问<br>在termux里输入<code>CTRL+C</code>终止jupyter进程</p>\n<h2 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C\"></a>C</h2><p>termux 开发者封装了 Clang，简简单单安装一波</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install clang</span><br></pre></td></tr></table></figure>\n<h3 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h3><p>可以去看看网上的 clang 编译教程，这里先拿 HelloWorld 做事例</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>完成保存退出后，使用以下方法编译成可执行文件并执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clang helloworld.c -o helloworld</span><br><span class=\"line\">./helloworld</span><br></pre></td></tr></table></figure>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h3 id=\"openjdk-17\"><a href=\"#openjdk-17\" class=\"headerlink\" title=\"openjdk-17\"></a>openjdk-17</h3><p>termux目前封装了<code>openjdk-17</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install openjdk-17</span><br></pre></td></tr></table></figure>\n<p>但是该包不稳定，可以到termux的仓库issues一波</p>\n<h3 id=\"ecj\"><a href=\"#ecj\" class=\"headerlink\" title=\"ecj\"></a>ecj</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install ecj dx -y</span><br></pre></td></tr></table></figure>\n<h4 id=\"编译-1\"><a href=\"#编译-1\" class=\"headerlink\" title=\"编译\"></a>编译</h4><p>这里写一个<code>hello.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">hello</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译生成 class</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ecj hello.java</span><br></pre></td></tr></table></figure>\n<p>编译生成 dex</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dx --dex --output=hello.dex hello.class</span><br></pre></td></tr></table></figure>\n<p>使用 dalvikvm 运行它</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dalvikvm -<span class=\"built_in\">cp</span> hello.dex hello</span><br></pre></td></tr></table></figure>\n<h2 id=\"Apache\"><a href=\"#Apache\" class=\"headerlink\" title=\"Apache\"></a>Apache</h2><p>依靠安全性和跨平台性而闻名的服务器，也是最流行的 Web 服务器</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install apache2</span><br></pre></td></tr></table></figure>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apachectl start</span><br></pre></td></tr></table></figure>\n<p>通过浏览器访问 <code>http://127.0.0.1:8080</code> 访问 apache 是否运行成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apachectl stop <span class=\"comment\"># 停止运行</span></span><br><span class=\"line\">apachectl restart <span class=\"comment\"># 重启apache</span></span><br></pre></td></tr></table></figure>\n<p>termux下的apache网站根目录为<code>$PREFIX/share/apache2/default-site/htdocs/</code></p>\n<h3 id=\"apache-php\"><a href=\"#apache-php\" class=\"headerlink\" title=\"apache-php\"></a>apache-php</h3><p>请转到 开发环境 - PHP - apache-php 这一小节查看</p>\n<h2 id=\"MariaDB\"><a href=\"#MariaDB\" class=\"headerlink\" title=\"MariaDB\"></a>MariaDB</h2><p>甲骨文后面收购了 MySQL，大家都怕这个老野把 MySQL 闭源，所以大家搞了个 MariaDB 为了避这个老野闭源 MySQL<br>本质上 MariaDB 和 MySQL 是一个样子的孩子，你就装吧</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install mariadb</span><br></pre></td></tr></table></figure>\n<p>开发者把 mariadb 也封装了，安装特别方便</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql --version <span class=\"comment\"># 安装完成后查看版本号</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"启动-MySQL\"><a href=\"#启动-MySQL\" class=\"headerlink\" title=\"启动 MySQL\"></a>启动 MySQL</h3><p>正常启动完成后，你将会发现这会话一直存在，看着心痒痒，<code>Ctrl+C</code>也杀不掉，怎么办呢</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">nohup</span> mysqld &amp;</span><br></pre></td></tr></table></figure>\n<p>丢到后台不就得了孩子</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux|gerp mysql</span><br></pre></td></tr></table></figure>\n<p>这个命令用于查看 mysql 进程 PID</p>\n<h3 id=\"关闭-MySQL\"><a href=\"#关闭-MySQL\" class=\"headerlink\" title=\"关闭 MySQL\"></a>关闭 MySQL</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">kill</span> -9 `pgrep mysql`</span><br></pre></td></tr></table></figure>\n<p>这样就优雅的关掉了</p>\n<h3 id=\"默认用户\"><a href=\"#默认用户\" class=\"headerlink\" title=\"默认用户\"></a>默认用户</h3><p>安装完之后，将会爆出两个用户，一个是<code>root</code>，访问不了，另一个用户是<code>termux用户名</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u $(<span class=\"built_in\">whoami</span>)</span><br></pre></td></tr></table></figure>\n<p>登录另一个可以登录的用户，密码<code>啥也没有</code>就是<code>空</code><br>可以顺利执行<code>MySQL</code>语句</p>\n<h3 id=\"改-Root-用户的密码\"><a href=\"#改-Root-用户的密码\" class=\"headerlink\" title=\"改 Root 用户的密码\"></a>改 Root 用户的密码</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 登录 MySQL</span></span><br><span class=\"line\">mysql -u $(<span class=\"built_in\">whoami</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用MySQL语句</span></span><br><span class=\"line\">use mysql;</span><br><span class=\"line\"><span class=\"comment\"># 设置 Root 用户密码</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> password <span class=\"keyword\">for</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> = password(<span class=\"string\">&#x27;你的密码&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新权限</span></span><br><span class=\"line\">flush privileges;</span><br><span class=\"line\"><span class=\"comment\"># 退出</span></span><br><span class=\"line\">quit;</span><br></pre></td></tr></table></figure>\n<p>ok了孩子们，可以登录了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">Enter Password: xxxxxxxxxx(你的密码)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><p>高性能的Web反向代理服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install nginx</span><br><span class=\"line\">nginx -v <span class=\"comment\"># 查看版本号</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -t</span><br></pre></td></tr></table></figure>\n<p>该命令用于测试nginx的配置检测</p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx</span><br></pre></td></tr></table></figure>\n<p>直接启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgrep nginx</span><br></pre></td></tr></table></figure>\n<p>检查 nginx 的 PID<br>一般测试也是 8080 端口，浏览器输入<code>127.0.0.1:8080</code> 查看工作情况</p>\n<h3 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s reload</span><br></pre></td></tr></table></figure>\n<p>每次配置完nginx之后都需要重启，重启输入上述命令重启</p>\n<h3 id=\"停止运行\"><a href=\"#停止运行\" class=\"headerlink\" title=\"停止运行\"></a>停止运行</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s quit <span class=\"comment\"># 先处理完所有请求再停止</span></span><br><span class=\"line\">nginx -s stop <span class=\"comment\"># 立即停止，无论什么请求</span></span><br></pre></td></tr></table></figure>\n<p>上述都是停止服务，他们的不同点都已经做好了注释</p>\n<h3 id=\"php-fpm\"><a href=\"#php-fpm\" class=\"headerlink\" title=\"php-fpm\"></a>php-fpm</h3><p>详情请转到 开发环境 - php - php-fpm 查看</p>\n<h2 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h2><p>动态页面解释器，目前动态页面最好的解释器，也是CMS和网站框架的归宿</p>\n<h3 id=\"主要环境\"><a href=\"#主要环境\" class=\"headerlink\" title=\"主要环境\"></a>主要环境</h3><p>安装php，termux开发者已经封装好了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install php</span><br><span class=\"line\">php --version <span class=\"comment\"># 查看 php 版本</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"快速测试\"><a href=\"#快速测试\" class=\"headerlink\" title=\"快速测试\"></a>快速测试</h3><p>php5.4 版本之后，内嵌了一个简易的 Web 服务端，可以快速的测试php文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> ~/www <span class=\"comment\"># 在家目录新建一个 www 文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span> &gt; ~/www/index.php <span class=\"comment\"># 在该目录创建一个 php 文件</span></span><br></pre></td></tr></table></figure>\n<p>接下来就可以测试了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">php -S 0.0.0.0:1145 -t www/</span><br></pre></td></tr></table></figure>\n<p>进入浏览器访问<code>127.0.0.1:1145</code>，如果看到<code>php版本信息</code>就对了</p>\n<h3 id=\"apache-php-1\"><a href=\"#apache-php-1\" class=\"headerlink\" title=\"apache-php\"></a>apache-php</h3><p>本小节用于apache</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install apache-php</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /data/data/com.termux/files/usr/etc/apache2/httpd.conf</span><br></pre></td></tr></table></figure>\n<p>进入配置文件<br>添加php7模块</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LoadModule php7_module /data/data/com.termux/files/usr/libexec/apache2/libphp7.so</span><br></pre></td></tr></table></figure>\n<p>并在下方添加php解释器</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">FilesMatch</span> \\<span class=\"attr\">.php</span>$&gt;</span></span><br><span class=\"line\">  SetHandler application/x-httpd-php</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">FilesMatch</span>&gt;</span> </span><br></pre></td></tr></table></figure>\n<p>往下找到设置默认首页规则的地方，改成</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">IfModule</span> <span class=\"attr\">dir_module</span>&gt;</span></span><br><span class=\"line\">  DirectoryIndex index.php index.html</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">IfModule</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样就添加了php7模块、php解释器和默认首页（index.php）<br>现在可以重启了<code>apachectl restart</code></p>\n<h4 id=\"AH00003-问题解决\"><a href=\"#AH00003-问题解决\" class=\"headerlink\" title=\"AH00003 问题解决\"></a>AH00003 问题解决</h4><p>找到</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LoadModule mpm_worker_module libexec/apache2/mod_mpm_worker.so</span><br></pre></td></tr></table></figure>\n<p>给前面加上<code>#</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#LoadModule mpm_worker_module libexec/apache2/mod_mpm_worker.so</span></span><br></pre></td></tr></table></figure>\n<p>接着找到</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#LoadModule mpm_prefork_module libexec/apache2/mod_mpm_prefork.so</span></span><br></pre></td></tr></table></figure>\n<p>去除注释</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LoadModule mpm_prefork_module libexec/apache2/mod_mpm_prefork.so</span><br></pre></td></tr></table></figure>\n<p>最后<code>apachectl restart</code>重启即可</p>\n<h4 id=\"解析测试\"><a href=\"#解析测试\" class=\"headerlink\" title=\"解析测试\"></a>解析测试</h4><p>在apache网站根目录下创建一个index.php</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;&lt;?php phpinfo(); ?&gt;&#x27;</span> &gt; <span class=\"variable\">$PREFIX</span>/share/apache2/default-site/htdocs/index.php</span><br></pre></td></tr></table></figure>\n<p>浏览器登陆<code>127.0.0.1:8080/index.php</code>，如果看到php信息就对了</p>\n<h3 id=\"php-fpm-1\"><a href=\"#php-fpm-1\" class=\"headerlink\" title=\"php-fpm\"></a>php-fpm</h3><p>本小节用于nginx</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install php-fpm</span><br><span class=\"line\">php-fpm -v <span class=\"comment\">#查看 php-fpm 信息</span></span><br></pre></td></tr></table></figure>\n<p>输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"variable\">$PREFIX</span>/etc/php-fpm.d/www.conf</span><br></pre></td></tr></table></figure>\n<p>定位搜索<code>listen=</code>改成</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listen = 127.0.0.1:9000</span><br></pre></td></tr></table></figure>\n<p>转到nginx配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"variable\">$PREFIX</span>/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>\n<ol>\n<li>定位到默认首页规则，添加<code>index.php</code></li>\n<li>取消 <code>location ~\\.php$</code> 里面的所有注释</li>\n</ol>\n<h4 id=\"解析测试-1\"><a href=\"#解析测试-1\" class=\"headerlink\" title=\"解析测试\"></a>解析测试</h4><p>创建一个<code>info.php</code>用于测试解析</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;&lt;?php phpinfo(); ?&gt;&#x27;</span> &gt; <span class=\"variable\">$PREFIX</span>/share/nginx/html/info.php</span><br></pre></td></tr></table></figure>\n<h4 id=\"带php的nginx服务启动\"><a href=\"#带php的nginx服务启动\" class=\"headerlink\" title=\"带php的nginx服务启动\"></a>带php的nginx服务启动</h4><p>先启动 <code>php-fpm</code> 然后再启动 <code>nginx</code><br>然后进入浏览器输入 <code>127.0.0.1:8080/info.php</code> 启动</p>\n<h2 id=\"Nodejs\"><a href=\"#Nodejs\" class=\"headerlink\" title=\"Nodejs\"></a>Nodejs</h2><p>Node.js 是能够在服务器端运行 JavaScript 的开放源代码、跨平台 JavaScript 运行环境</p>\n<h3 id=\"nodejs-lts\"><a href=\"#nodejs-lts\" class=\"headerlink\" title=\"nodejs-lts\"></a>nodejs-lts</h3><p>长期版本的包 <code>nodejs-lts</code> 更有性价比，既稳定又有长期支持</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install nodejs-lts</span><br><span class=\"line\">node -V</span><br><span class=\"line\">npm -V</span><br></pre></td></tr></table></figure>\n<h4 id=\"HelloWorld\"><a href=\"#HelloWorld\" class=\"headerlink\" title=\"HelloWorld\"></a>HelloWorld</h4><p>创建 <code>hello.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;HelloWorld&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>启动脚本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node hello.js</span><br><span class=\"line\">HelloWorld</span><br></pre></td></tr></table></figure>\n<h1 id=\"服务器部署\"><a href=\"#服务器部署\" class=\"headerlink\" title=\"服务器部署\"></a>服务器部署</h1><p>来到了服务器部署，看看又有什么鬼东西</p>\n<h2 id=\"DVWA\"><a href=\"#DVWA\" class=\"headerlink\" title=\"DVWA\"></a>DVWA</h2><p>一个为 Web 安全从业者提供的练习靶场，用于学习基础漏洞原理及其和修复<br>如果你不是 Web 安全从业者，请跳过该小节</p>\n<h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><p>由于 DVWA 靶场使用 php，所以需要提前进行环境准备<br>环境准备请参考本文章的小节：</p>\n<ul>\n<li>开发环境 - Nginx</li>\n<li>开发环境 - MariaDB</li>\n<li>开发环境 - PHP</li>\n<li>开发环境 - PHP - php-fpm</li>\n</ul>\n<h3 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/ethicalhack3r/DVWA/archive/master.zip</span><br><span class=\"line\"><span class=\"comment\"># 速度慢可以使用下方链接</span></span><br><span class=\"line\">wget https://hub.fastgit.org/ethicalhack3r/DVWA/archive/master.zip</span><br></pre></td></tr></table></figure>\n<p>解压文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip master.zip -d <span class=\"variable\">$PREFIX</span>/share/nginx/html/</span><br></pre></td></tr></table></figure>\n<p>重命名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$PREFIX</span>/share/nginx/html/</span><br><span class=\"line\"><span class=\"built_in\">mv</span> DVWA-master dvwa</span><br></pre></td></tr></table></figure>\n<p>在 MySQL 新建数据库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p*** -e<span class=\"string\">&quot;create database dvwa;show databases;&quot;</span></span><br></pre></td></tr></table></figure>\n<p><code>***</code>为mysql密码</p>\n<h3 id=\"配置-dvwa\"><a href=\"#配置-dvwa\" class=\"headerlink\" title=\"配置 dvwa\"></a>配置 dvwa</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#还原 config.inc 文件为php后缀</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$PREFIX</span>/share/nginx/html/dvwa/config</span><br><span class=\"line\"><span class=\"built_in\">mv</span> config.inc.php.dist config.inc.php</span><br><span class=\"line\"><span class=\"comment\">#编辑配置文件</span></span><br><span class=\"line\">vim config.inc.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#定位搜索到这里，根据变量名修改即可</span></span><br><span class=\"line\">--------------config.inc.php<span class=\"comment\">#16~22------------------</span></span><br><span class=\"line\"> ​<span class=\"comment\">#   See README.md for more information on this.  </span></span><br><span class=\"line\"> ​<span class=\"variable\">$_DVWA</span> = array();  </span><br><span class=\"line\"> ​<span class=\"variable\">$_DVWA</span>[ <span class=\"string\">&#x27;db_server&#x27;</span> ]   = getenv(<span class=\"string\">&#x27;DB_SERVER&#x27;</span>) ?: <span class=\"string\">&#x27;127.0.0.1&#x27;</span>;  </span><br><span class=\"line\"> ​<span class=\"variable\">$_DVWA</span>[ <span class=\"string\">&#x27;db_database&#x27;</span> ] = <span class=\"string\">&#x27;dvwa&#x27;</span>;  </span><br><span class=\"line\"> ​<span class=\"variable\">$_DVWA</span>[ <span class=\"string\">&#x27;db_user&#x27;</span> ]     = <span class=\"string\">&#x27;dvwa&#x27;</span>;  </span><br><span class=\"line\"> ​<span class=\"variable\">$_DVWA</span>[ <span class=\"string\">&#x27;db_password&#x27;</span> ] = <span class=\"string\">&#x27;p@ssw0rd&#x27;</span>;  </span><br><span class=\"line\"> ​<span class=\"variable\">$_DVWA</span>[ <span class=\"string\">&#x27;db_port&#x27;</span>]      = <span class=\"string\">&#x27;3306&#x27;</span>; </span><br></pre></td></tr></table></figure>\n<h3 id=\"测试-1\"><a href=\"#测试-1\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>登录 <code>http://127.0.0.1:8080/dvwa/setup.php</code> 进行初步测试<br><img src=\"https://image.3001.net/images/20200421/15874587489432.jpg\" alt=\"https://image.3001.net/images/20200421/15874587489432.jpg\"><br>如图，php的<code>allow_url_include</code>没有开启，需要开启一波<br>但是这个选项只有2boy才会开启，正常人不会开启它，这很危险<br>但你再想想，这是靶场，只有你能访问。有些漏洞就是依靠<code>PHP</code>配置不当造成的，你就开吧！！！</p>\n<h3 id=\"allow-url-include-配置\"><a href=\"#allow-url-include-配置\" class=\"headerlink\" title=\"allow_url_include 配置\"></a>allow_url_include 配置</h3><p>termux实际上没有<code>php.ini</code>，得自己造</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;allow_url_include = On&#x27;</span> &gt; <span class=\"variable\">$PREFIX</span>/lib/php.ini</span><br></pre></td></tr></table></figure>\n<p>上面这行代码会新建一个<code>php.ini</code>文件，并在里面写入<code>allow_url_include</code>打开的配置</p>\n<div class=\"note danger simple\"><p>这是不安全的配置，这里是<code>dvwa</code>靶场，只是为了配合本地黑客模拟攻击用</p>\n</div>\n<p>配置完成后必须重启<code>php-fpm</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">kill</span> -9 `pgrep fpm`</span><br><span class=\"line\">php-fpm</span><br></pre></td></tr></table></figure>\n<h3 id=\"初步设置\"><a href=\"#初步设置\" class=\"headerlink\" title=\"初步设置\"></a>初步设置</h3><p>再次使用浏览器登陆 <code>http://127.0.0.1:8080/dvwa/setup.php</code>，<code>allow_url_include</code>已经打开了<br>直接划到最下面，点击 <code>Create/Reset Database</code>初始化数据库就完成了<br>接着转到登录界面，dvwa的用户有五个，这里用经典的admin，密码password登录</p>\n<h2 id=\"KodExplorer\"><a href=\"#KodExplorer\" class=\"headerlink\" title=\"KodExplorer\"></a>KodExplorer</h2><p>开源的远程文件资源管理器，在termux上也可以正常搭建</p>\n<h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><p>环境准备请参考本文章的小节：</p>\n<ul>\n<li>开发环境 - Nginx</li>\n<li>开发环境 - MariaDB</li>\n<li>开发环境 - PHP</li>\n<li>开发环境 - PHP - php-fpm</li>\n</ul>\n<h3 id=\"安装-2\"><a href=\"#安装-2\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://static.kodcloud.com/update/download/kodexplorer4.40.zip</span><br><span class=\"line\">unzip kodexplorer4.40.zip -d <span class=\"variable\">$PREFIX</span>/share/nginx/html/kod</span><br></pre></td></tr></table></figure>\n<h3 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h3><p>通过 <code>127.0.0.1:8080/kod</code> 访问 <code>Kod</code><br>同一局域网内，不同设备可以共享文件，传输目的也就达成了</p>\n<h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h2><p>用 Nodejs 编写的静态博客生成网站，通常与github pages一起使用<br>hexo使用了markdown解析文章，可以快速生成所需要的文章<br>大多数博客包括我自己的toadsblog，都使用了hexo</p>\n<h3 id=\"环境准备-1\"><a href=\"#环境准备-1\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><p>环境准备请参考本文章的小节：</p>\n<ul>\n<li>开发环境 - Nodejs</li>\n</ul>\n<h3 id=\"安装-3\"><a href=\"#安装-3\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">hexo -v 查看版本号信息</span><br></pre></td></tr></table></figure>\n<h3 id=\"基础配置\"><a href=\"#基础配置\" class=\"headerlink\" title=\"基础配置\"></a>基础配置</h3><p>我们需要一个hexo的根文件夹，初始文件夹如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n<p>初始完成，你的博客根文件便是 home 目录的 blog 文件夹，可以改下名字</p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他东西\"><a href=\"#其他东西\" class=\"headerlink\" title=\"其他东西\"></a>其他东西</h3><p>有关于 hexo 的其他东西，可以去查看hexo官方文档。</p>\n<h2 id=\"code-server\"><a href=\"#code-server\" class=\"headerlink\" title=\"code-server\"></a>code-server</h2><p>网页版 VSCode</p>\n<div class=\"note warning simple\"><p>24&#x2F;09&#x2F;11<br>安装<code>code-server</code>时，部分依赖在清华源上不存在。<br>安装前必须切换到 grimler 源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">termux-change-repo</span><br></pre></td></tr></table></figure>\n<p>执行完后，选择<code>Single Mirror</code>并在下面的源列表中选择含有<code>Mirrors by Grimler</code>的源并回车替换。<br><code>code-server</code>安装完成后，再替换回到清华源。替换步骤可看<code>配置termux - 更新源</code>这一节</p>\n</div>\n<div class=\"note warning simple\"><p>安装<code>code-server</code>前，必须添加<code>tur-repo</code>源。因为<code>code-server</code>封装在<code>tur-repo</code>仓库源中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install tur-repo</span><br><span class=\"line\">pkg update</span><br></pre></td></tr></table></figure>\n<p>如果先前已经添加，可忽略该步</p>\n</div>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install code-server</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code-server</span><br></pre></td></tr></table></figure>\n<p>第一次启动后将自动生成<code>~/.config/code-server/config.yaml</code>，按下<code>Ctrl+C</code>退出并执行<code>vim ~/.config/code-server/config.yaml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">bind-addr:</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">:&lt;port&gt;</span></span><br><span class=\"line\"><span class=\"attr\">auth:</span> <span class=\"string\">password</span></span><br><span class=\"line\"><span class=\"attr\">password:</span> <span class=\"string\">&lt;password&gt;</span></span><br><span class=\"line\"><span class=\"attr\">cert:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p><code>ip地址</code>默认0.0.0.0<br><code>&lt;port&gt;</code> 填入要监听的端口<br><code>&lt;password&gt;</code> 填入登录 <code>code-server</code> 页面的密码</p>\n<h3 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>配置完成后就是启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code-server</span><br></pre></td></tr></table></figure>\n<p>执行完后，浏览器输入<code>&lt;termux设备的ip地址&gt;:&lt;port&gt;</code>即可登录<code>code-server</code>后台</p>\n<h3 id=\"插件安装\"><a href=\"#插件安装\" class=\"headerlink\" title=\"插件安装\"></a>插件安装</h3><p>目前 <code>code-server</code> 的插件可通过如下方法安装：<br>下方两种方法选择其中一个，先使用后者。因为tur-repo上封装的<code>code-server</code>版本较老，已考察为<code>1.89.1</code>。后者完成后，如果其他需要的插件无法安装，则使用前者</p>\n<h4 id=\"平台覆盖\"><a href=\"#平台覆盖\" class=\"headerlink\" title=\"平台覆盖\"></a>平台覆盖</h4><p>新建一个脚本<code>and2linux.js</code>，并填入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(process, <span class=\"string\">&quot;platform&quot;</span>, &#123;</span><br><span class=\"line\">  <span class=\"title function_\">get</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;linux&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>然后使用 Node 的选项来确保它在启动之前被加载</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NODE_OPTIONS=<span class=\"string\">&quot;--require /path/to/android-as-linux.js&quot;</span> code-server</span><br></pre></td></tr></table></figure>\n<p>本方法并非100%兼容 linux 插件，有概率可能导致机子爆炸</p>\n<h4 id=\"老版本插件安装\"><a href=\"#老版本插件安装\" class=\"headerlink\" title=\"老版本插件安装\"></a>老版本插件安装</h4><div class=\"note warning simple\"><p>使用该方法前，请检查<code>code</code>版本（依次点击左上的三条横线、Help、About 查看 Code 版本）</p>\n</div>\n<ol>\n<li>打开 <a href=\"https://open-vsx.org/g\">open-vsx</a> 并查找需要的插件（以简体中文插件包为例）</li>\n<li>打开插件页面，找到左边的Version，选择旧版本，此处使用<code>1.89.0</code></li>\n<li>点击右边<code>Download</code>下载到本地</li>\n<li>切换到 <code>code-server</code> 页面并登录</li>\n<li>打开拓展（Extensions）界面 &#x2F; Ctrl+Shift+X</li>\n<li>点击展开右上角 View and More Actions 的三个圆点并选择 Install from VSIX</li>\n<li>在弹出的窗口中选择最右侧的 Show Local</li>\n<li>在弹出的窗口中选择最右侧的 Open Files</li>\n<li>选择之前下载的文件并重启即可</li>\n</ol>\n<h2 id=\"游戏服务器\"><a href=\"#游戏服务器\" class=\"headerlink\" title=\"游戏服务器\"></a>游戏服务器</h2><p>这是个 termux，是个小型的树莓派，我曾在我的树莓派上面运行过基岩版服务器，很好，还把龙给屠了，但就是没人跟我玩，我没q搞内网穿透(必须找我朋友爆爆金币)</p>\n<h3 id=\"proot-distro-box64\"><a href=\"#proot-distro-box64\" class=\"headerlink\" title=\"proot-distro + box64\"></a>proot-distro + box64</h3><p>这东西首先需要 proot 容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 proot-distro</span></span><br><span class=\"line\">pkg install proot-distro</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装容器</span></span><br><span class=\"line\">proot-distro install ubuntu</span><br><span class=\"line\"><span class=\"comment\"># 进入容器</span></span><br><span class=\"line\">proot-distro sh ubuntu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在容器里换源以及安装依赖</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s@//ports.ubuntu.com@//mirrors.ustc.edu.cn@g&#x27;</span> /etc/apt/sources.list</span><br><span class=\"line\">apt update &amp;&amp; apt install wget curl ca-certificates gnupg nano unzip</span><br></pre></td></tr></table></figure>\n<p>接下来安装 box64，这个东西用于转译架构</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加存储库</span></span><br><span class=\"line\">wget https://ryanfortner.github.io/box64-debs/box64.list -O /etc/apt/sources.list.d/box64.list</span><br><span class=\"line\">wget -qO- https://ryanfortner.github.io/box64-debs/KEY.gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/box64-debs-archive-keyring.gpg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新源</span></span><br><span class=\"line\">apt update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 box64</span></span><br><span class=\"line\">apt install box64-android</span><br></pre></td></tr></table></figure>\n<p>接下来就是安装对应的游戏服务器了</p>\n<h3 id=\"Minecraft-基岩版服务器-BDS\"><a href=\"#Minecraft-基岩版服务器-BDS\" class=\"headerlink\" title=\"Minecraft 基岩版服务器 (BDS)\"></a>Minecraft 基岩版服务器 (BDS)</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 创建一个 mc 文件夹在 home 目录并cd到该目录</span><br><span class=\"line\">mkdir ~/mc &amp;&amp; cd mc</span><br><span class=\"line\"></span><br><span class=\"line\"># 下载服务器</span><br><span class=\"line\"># wget https://minecraft.azureedge.net/bin-linux/bedrock-server-&lt;版本号&gt;.zip -O server.zip</span><br><span class=\"line\"># 其中版本号改成你需要的版本号，版本号与你玩的基岩版版本一致。作者玩的是1.21.0.03，所以下面的命令如下：</span><br><span class=\"line\">wget https://minecraft.azureedge.net/bin-linux/bedrock-server-1.21.0.03.zip -O server.zip</span><br><span class=\"line\"></span><br><span class=\"line\"># 解压并删除 zip 文件</span><br><span class=\"line\">unzip server.zip &amp;&amp; rm server.zip</span><br></pre></td></tr></table></figure>\n<p>修改配置文件时执行<code>nano server.properties</code>，配置修改教程请百度，修改完成后按下<code>CTRL+X</code>并按<code>y</code>退出<br><strong>启动</strong><br>接下来是启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 授予执行权限</span></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> +x bedrock-server</span><br><span class=\"line\"><span class=\"comment\"># 启动服务器</span></span><br><span class=\"line\">LD_LIBRARY_PATH=. box64 ./bedrock_server</span><br></pre></td></tr></table></figure>\n<p>第一次启动时，由于文件夹内没有世界存储，请耐心等待生成世界<br>测试时，启动你的Minecraft，依次点击 游戏 -&gt; 服务器 -&gt; 添加服务器，地址输入<code>0.0.0.0</code>，端口输入你在配置中设置的，接着保存就可以进入服务器了（但前提需要登录微软账号）<br>停止时只需在命令行中输入<code>stop</code>并回车即可停止服务器</p>\n<h3 id=\"泰拉瑞亚服务器\"><a href=\"#泰拉瑞亚服务器\" class=\"headerlink\" title=\"泰拉瑞亚服务器\"></a>泰拉瑞亚服务器</h3><p>（未研究）</p>\n<h1 id=\"linux发行版\"><a href=\"#linux发行版\" class=\"headerlink\" title=\"linux发行版\"></a>linux发行版</h1><p>termux 支持安装多款 linux 发行版本的安装</p>\n<h2 id=\"Kali-Nethunter\"><a href=\"#Kali-Nethunter\" class=\"headerlink\" title=\"Kali Nethunter\"></a>Kali Nethunter</h2><p>基于 kali 的免费开源安卓移动设备渗透平台，安全从业者或者有兴趣的可以试一试</p>\n<h3 id=\"安装-4\"><a href=\"#安装-4\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"Kali-官网提供的脚本安装\"><a href=\"#Kali-官网提供的脚本安装\" class=\"headerlink\" title=\"Kali 官网提供的脚本安装\"></a>Kali 官网提供的脚本安装</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载 安装脚本</span></span><br><span class=\"line\">wget -O install-nethunter-termux https://offs.ec/2MceZWr </span><br><span class=\"line\"><span class=\"comment\"># 给脚本执行权限</span></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> +x install-nethunter-termux </span><br><span class=\"line\"><span class=\"comment\"># 运行安装脚本</span></span><br><span class=\"line\">./install-nethunter-termux</span><br></pre></td></tr></table></figure>\n<div class=\"note info simple\"><p>执行脚本前请挂代理！这它🐴<code>1GB+</code>的数据包！</p>\n</div>\n<h4 id=\"数据包安装\"><a href=\"#数据包安装\" class=\"headerlink\" title=\"数据包安装\"></a>数据包安装</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://images.kali.org/nethunter/kalifs-arm64-full.tar.xz</span><br></pre></td></tr></table></figure>\n<p>上面是kali官方提供的nethunter<code>1GB+</code>的数据包<br>使用迅雷下载后，拷贝到<code>termux 安装的脚本</code>同级目录下即可<br>以下为安装成功效果图：<br><img src=\"https://image.3001.net/images/20200421/15874521922608.jpg\" alt=\"https://image.3001.net/images/20200421/15874521922608.jpg\"></p>\n<h3 id=\"nethunter-基础指令\"><a href=\"#nethunter-基础指令\" class=\"headerlink\" title=\"nethunter 基础指令\"></a>nethunter 基础指令</h3><ul>\n<li>nethunter 启动 nethunter 会话</li>\n<li>nethunter kex passwd 配置 KeX 密码</li>\n<li>nethunter kex &amp; 启动 KeX 会话</li>\n<li>nethunter kex stop 停止 KeX 会话</li>\n</ul>\n<h2 id=\"proot\"><a href=\"#proot\" class=\"headerlink\" title=\"proot\"></a>proot</h2><p>proot可以帮助你在termux上面运行各种各样的linux发行版</p>\n<h3 id=\"proot-distro\"><a href=\"#proot-distro\" class=\"headerlink\" title=\"proot-distro\"></a>proot-distro</h3><p>termux官方出的基于<code>proot</code>的快速安装脚本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install proot-distro</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装发行版\"><a href=\"#安装发行版\" class=\"headerlink\" title=\"安装发行版\"></a>安装发行版</h4><p>首先查看目前可安装的发行版列表</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proot-distro <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n<p>输出如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Supported distributions:</span><br><span class=\"line\"></span><br><span class=\"line\">  * Alpine Linux</span><br><span class=\"line\"></span><br><span class=\"line\">    Alias: alpine</span><br><span class=\"line\">    Installed: no</span><br><span class=\"line\">    Comment: Rolling release branch (edge).</span><br><span class=\"line\"></span><br><span class=\"line\">  * Arch Linux</span><br><span class=\"line\"></span><br><span class=\"line\">    Alias: archlinux</span><br><span class=\"line\">    Installed: no</span><br><span class=\"line\">    Comment: Currently available only AArch64 and ARM ports.</span><br><span class=\"line\"></span><br><span class=\"line\">  * Artix Linux</span><br><span class=\"line\"></span><br><span class=\"line\">    Alias: artix</span><br><span class=\"line\">    Installed: no</span><br><span class=\"line\">    Comment: Currently available only <span class=\"keyword\">for</span> AArch64.</span><br><span class=\"line\"></span><br><span class=\"line\">  * Debian (bookworm)</span><br><span class=\"line\"></span><br><span class=\"line\">    Alias: debian</span><br><span class=\"line\">    Installed: no</span><br><span class=\"line\">    Comment: Stable release.</span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure>\n<p>找到你需要的发行版，在其中找到 Alias 这一栏，记住它<br>接着输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proot-distro install &lt;<span class=\"built_in\">alias</span>&gt;</span><br><span class=\"line\"><span class=\"comment\"># 例如 proot-distro install debian</span></span><br></pre></td></tr></table></figure>\n<p>开始安装发行版<br>等一会，接着到最后输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proot-distro sh &lt;<span class=\"built_in\">alias</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>用上面方法进入proot容器<br>当然了，退出只需在容器里输入<code>exit</code>即可</p>\n<h1 id=\"虚拟机-容器\"><a href=\"#虚拟机-容器\" class=\"headerlink\" title=\"虚拟机&#x2F;容器\"></a>虚拟机&#x2F;容器</h1><p>termux 支持虚拟机以及一系列容器</p>\n<h2 id=\"Qemu\"><a href=\"#Qemu\" class=\"headerlink\" title=\"Qemu\"></a>Qemu</h2><p>老牌开源的虚拟机，支持 KVM&#x2F;Xen、VNC和多种架构模拟等功能<br>目前安卓上常用的Windows模拟器，Limbo、termux和bochs<br>Limbo是安卓qemu的前端<br>termux配合qemu运行模拟器<br>bochs它🐴是基于qemu<br>可见其厉害之处</p>\n<h3 id=\"安装-5\"><a href=\"#安装-5\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果要安装 32 位系统（如98/2k），执行下面指令</span></span><br><span class=\"line\">pkg install qemu-system-i386-headless qemu-utils</span><br><span class=\"line\"><span class=\"comment\"># 如果要安装 64 位系统（如7/8/10/11），执行下面指令</span></span><br><span class=\"line\">pkg install qemu-system-x86-64-headless qemu-utils</span><br></pre></td></tr></table></figure>\n<h3 id=\"准备系统镜像\"><a href=\"#准备系统镜像\" class=\"headerlink\" title=\"准备系统镜像\"></a>准备系统镜像</h3><p>可以去下方各种贴吧寻找系统镜像<br><a href=\"https://tieba.baidu.com/f?kw=qemu\">QEMU吧</a><br>上面提到了bochs基于qemu，所以可以去下面贴吧找镜像<br><a href=\"http://tieba.baidu.com/p/5822419828\">Bochs吧</a><br>limbo是qemu前端，其实还是qemu，所以：<br><a href=\"https://tieba.baidu.com/p/3256889059\">Limbo吧</a></p>\n<h3 id=\"启动-2\"><a href=\"#启动-2\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>将下载好的镜像移动到<code>termux</code>的<code>Home</code>目录，举例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># mv 格式：mv &lt;文件路径&gt; &lt;要移到的文件夹路径&gt;</span></span><br><span class=\"line\"><span class=\"built_in\">mv</span> /sdcard/Download/winxp-img.qcow2 ~/</span><br></pre></td></tr></table></figure>\n<p>接着<code>cd</code>到<code>Home</code>目录，直接启动qemu，如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 虚拟机为 64 位系统</span></span><br><span class=\"line\">qemu-system-x86_64 -hda winxp-img.qcow2 -m 1024 -netdev user,<span class=\"built_in\">id</span>=user.0 -device rtl8139,netdev=user.0 -vga vmware</span><br><span class=\"line\"><span class=\"comment\"># 虚拟机为 32 位系统</span></span><br><span class=\"line\">qemu-system-i386 -hda winxp-img.qcow2 -m 1024 -netdev user,<span class=\"built_in\">id</span>=user.0 -device rtl8139,netdev=user.0 -vga vmware</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动参数解析\"><a href=\"#启动参数解析\" class=\"headerlink\" title=\"启动参数解析\"></a>启动参数解析</h3><p><code>-hda winxp-img.qcow2</code> 设置第一个虚拟磁盘，同时也是qemu启动时的磁盘，此处的虚拟磁盘为<code>winxp-img.qcow2</code><br><code>-m 1024</code> 设置虚拟机内存大小，单位默认为<code>M</code>，可在数字后面输入<code>K,M,G,T,E</code><br><code>-netdev user,id=user.0</code> 创建网络，模式为User，id为user.0<br><code>-device rtl8139,netdev=user.0</code> 设置网卡，使用rtl8139，连接user.0<br><code>-vga vmware</code> 设置显卡，这里使用vmware</p>\n<h2 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h2><div class=\"note simple warning flat\"><p>注意：<br>原生运行 Docker 需要Root以及编译好的安卓内核！<br>有关于编译安卓内核的内容请参考 <a href=\"https://zhuanlan.zhihu.com/p/603323625\">本篇文章</a><br>家里没电脑的或者不想给自己的手机 Root 的，请跳过该节！</p>\n</div>\n<p>检测安卓内核功能查看进入 <a href=\"https://github.com/moby/moby/blob/master/contrib/check-config.sh\">本链接</a> 下载文件到termux目录中，然后使用<code>sh check-config.sh</code>检测你的安卓内核有哪些未开启<br>在编译完安卓内核系统的手机上运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install root-repo</span><br><span class=\"line\">pkg install docker</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"折腾\"><a href=\"#折腾\" class=\"headerlink\" title=\"折腾\"></a>折腾</h1><p>这个区域用于你折腾，随便搞去吧</p>\n<h2 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h2><p>经典的远程终端运行工具</p>\n<h3 id=\"启动-3\"><a href=\"#启动-3\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>没错，termux官方把这东西预装到里面了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sshd</span><br></pre></td></tr></table></figure>\n<h3 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h3><h4 id=\"终端\"><a href=\"#终端\" class=\"headerlink\" title=\"终端\"></a>终端</h4><p>sshd 监听8022端口，可不是22端口，因此输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh localhost -p 8022</span><br></pre></td></tr></table></figure>\n<h4 id=\"JuiceSSH\"><a href=\"#JuiceSSH\" class=\"headerlink\" title=\"JuiceSSH\"></a>JuiceSSH</h4><p>安卓端可加插件的远程终端连接工具，它🐴居然要收费<br>由于本人使用汉化版本，连接如下：<br>点击<code>连接 -&gt; 右下角加号</code>新建一个连接<br><code>昵称</code>随便填<br><code>地址</code>为运行termux的设备的ip地址，如果是本机则输入127.0.0.1<br><code>端口</code>填<code>8022</code><br>其他无需领会，直接点击右上角的勾✓将回到上一个页面<br>最后点击你刚创建好的连接就可以了</p>\n<h3 id=\"公钥-密钥连接\"><a href=\"#公钥-密钥连接\" class=\"headerlink\" title=\"公钥&#x2F;密钥连接\"></a>公钥&#x2F;密钥连接</h3><p>此处准备两个设备，一台客户端（用于连接到termux）和一台termux设备<br>首先在客户端生成密钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen</span><br></pre></td></tr></table></figure>\n<p>执行后一直回车使用默认配置，完成生成后会在<code>~/.ssh</code>中生成三个文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id_rsa   id_rsa.pub   known_hosts</span><br></pre></td></tr></table></figure>\n<p><code>id_rsa.pub</code> 为公钥文件<br>将在客户端中生成的公钥文件放置在termux设备中的<code>/data/data/com.termux/files/home/.ssh</code>中<br>回到termux设备，<code>cd ~/.ssh</code>后，把公钥拷贝到验证文件中，即</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> id_rsa.pub &gt; authorized_keys</span><br></pre></td></tr></table></figure>\n<p>最后关闭密码验证</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"variable\">$PREFIX</span>/etc/ssh/sshd_config</span><br><span class=\"line\"><span class=\"comment\"># 接着找到 PasswordAuthentication yes</span></span><br><span class=\"line\"><span class=\"comment\"># 改成 PasswordAuthentication no</span></span><br><span class=\"line\"><span class=\"comment\"># :wq 保存并退出</span></span><br></pre></td></tr></table></figure>\n<p>接着重启一下sshd<code>pkill sshd &amp;&amp; sshd</code></p>\n<h2 id=\"aria2\"><a href=\"#aria2\" class=\"headerlink\" title=\"aria2\"></a>aria2</h2><p>一个很牛x的开源终端下载器，支持 http 链接、BitTorrent 种子、磁力链接等下载</p>\n<h3 id=\"Aria2-Termux\"><a href=\"#Aria2-Termux\" class=\"headerlink\" title=\"Aria2-Termux\"></a>Aria2-Termux</h3><p>脚本仓库：<a href=\"https://github.com/RimuruW/Aria2-Termux\">Aria2-Termux</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -L https://raw.githubusercontent.com/RimuruW/Aria2-Termux/master/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<p>执行上方命令后，根据脚本进行操作即可<br>通过脚本安装完成后，之后都可输入<code>atm</code>进入脚本<br>脚本允许配置 Aria2 和 RPC 选项，所以通过安装脚本的可以跳过下方的配置一节</p>\n<h3 id=\"键盘纯撸\"><a href=\"#键盘纯撸\" class=\"headerlink\" title=\"键盘纯撸\"></a>键盘纯撸</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install aria2</span><br></pre></td></tr></table></figure>\n<p>完事了</p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>Aria2 更多是用于作为服务器一直挂在终端的，允许任何的局域网设备去执行 Aria2 终端<br>Aria2 有一个本地网络浏览器后台，这就是 <code>ziahamza/webui-aria2</code> 了，这个后面会说它的安装方法</p>\n<h3 id=\"配置-1\"><a href=\"#配置-1\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>在 <code>~/.config/aria2</code> 中新建三个文件，没有就<code>mkdir ~/.config/aria2</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">touch</span> aria2.conf</span><br><span class=\"line\"><span class=\"built_in\">touch</span> aria2.log</span><br><span class=\"line\"><span class=\"built_in\">touch</span> aria2.session</span><br></pre></td></tr></table></figure>\n<p>接着用 <code>vim aria2.conf</code> 编辑该文件，将下方配置文件粘贴到本配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##===================================##</span><br><span class=\"line\">## 文件保存相关 ##</span><br><span class=\"line\">##===================================##</span><br><span class=\"line\"></span><br><span class=\"line\"># 文件保存目录</span><br><span class=\"line\">dir=&lt;下载位置目录&gt;</span><br><span class=\"line\"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</span><br><span class=\"line\">disk-cache=16M</span><br><span class=\"line\"># 断点续传</span><br><span class=\"line\">continue=true</span><br><span class=\"line\">#日志保存</span><br><span class=\"line\">log=&quot;~/.config/aria2/aria2.log&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span><br><span class=\"line\"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</span><br><span class=\"line\"># falloc和trunc则需要文件系统和内核支持</span><br><span class=\"line\"># NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项</span><br><span class=\"line\">file-allocation=prealloc</span><br><span class=\"line\"></span><br><span class=\"line\">##===================================##</span><br><span class=\"line\">## 下载连接相关 ##</span><br><span class=\"line\">##===================================##</span><br><span class=\"line\"></span><br><span class=\"line\"># 最大同时下载任务数, 运行时可修改, 默认:5</span><br><span class=\"line\">max-concurrent-downloads=10</span><br><span class=\"line\"># 同一服务器连接数, 添加时可指定, 默认:1</span><br><span class=\"line\"># 官方的aria2最高设置为16, 如果需要设置任意数值请重新编译aria2</span><br><span class=\"line\">max-connection-per-server=16</span><br><span class=\"line\"></span><br><span class=\"line\"># 整体下载速度限制, 运行时可修改, 默认:0（不限制）</span><br><span class=\"line\">max-overall-download-limit=0</span><br><span class=\"line\"># 单个任务下载速度限制, 默认:0（不限制）</span><br><span class=\"line\">max-download-limit=0</span><br><span class=\"line\"># 整体上传速度限制, 运行时可修改, 默认:0（不限制）</span><br><span class=\"line\">max-overall-upload-limit=0</span><br><span class=\"line\"># 单个任务上传速度限制, 默认:0（不限制）</span><br><span class=\"line\">max-upload-limit=0</span><br><span class=\"line\"></span><br><span class=\"line\"># 禁用IPv6, 默认:false</span><br><span class=\"line\">disable-ipv6=false</span><br><span class=\"line\"></span><br><span class=\"line\"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span><br><span class=\"line\"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span><br><span class=\"line\">min-split-size=10M</span><br><span class=\"line\"></span><br><span class=\"line\"># 单个任务最大线程数, 添加时可指定, 默认:5</span><br><span class=\"line\"># 建议同max-connection-per-server设置为相同值</span><br><span class=\"line\">split=16</span><br><span class=\"line\"></span><br><span class=\"line\">##===================================##</span><br><span class=\"line\">## 进度保存相关 ##</span><br><span class=\"line\">##===================================##</span><br><span class=\"line\"></span><br><span class=\"line\"># 从会话文件中读取下载任务</span><br><span class=\"line\">input-file=&quot;~/.config/aria2/aria2.session&quot;</span><br><span class=\"line\"># 在Aria2退出时保存错误的、未完成的下载任务到会话文件</span><br><span class=\"line\">save-session=&quot;~/.config/aria2/aria2.session&quot;</span><br><span class=\"line\"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span><br><span class=\"line\">save-session-interval=60</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##===================================##</span><br><span class=\"line\">## RPC相关设置 ##</span><br><span class=\"line\">##此部分必须启用，否则无法使用WebUI</span><br><span class=\"line\">##===================================##</span><br><span class=\"line\"></span><br><span class=\"line\"># 启用RPC, 默认:false</span><br><span class=\"line\">enable-rpc=true</span><br><span class=\"line\"># 允许所有来源, 默认:false</span><br><span class=\"line\">rpc-allow-origin-all=true</span><br><span class=\"line\"># 允许外部访问, 默认:false</span><br><span class=\"line\">rpc-listen-all=true</span><br><span class=\"line\"># RPC端口, 仅当默认端口被占用时修改</span><br><span class=\"line\"></span><br><span class=\"line\">rpc-listen-port=6800</span><br><span class=\"line\"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span><br><span class=\"line\">#rpc-secret=</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span><br><span class=\"line\">#rpc-user=</span><br><span class=\"line\"># 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span><br><span class=\"line\">#rpc-passwd=</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动SSL</span><br><span class=\"line\"># rpc-secure=true</span><br><span class=\"line\"># 证书文件, 如果启用SSL则需要配置证书文件, 例如用https连接aria2</span><br><span class=\"line\"># rpc-certificate=</span><br><span class=\"line\"># rpc-private-key=</span><br><span class=\"line\"></span><br><span class=\"line\">##===================================##</span><br><span class=\"line\">## BT/PT下载相关 ##</span><br><span class=\"line\">##===================================##</span><br><span class=\"line\"></span><br><span class=\"line\"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span><br><span class=\"line\">follow-torrent=true</span><br><span class=\"line\"># BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</span><br><span class=\"line\">listen-port=51413</span><br><span class=\"line\"># 单个种子最大连接数, 默认:55</span><br><span class=\"line\">#bt-max-peers=55</span><br><span class=\"line\"># 打开DHT功能, PT需要禁用, 默认:true</span><br><span class=\"line\">enable-dht=true</span><br><span class=\"line\"># 打开IPv6 DHT功能, PT需要禁用</span><br><span class=\"line\">enable-dht6=true</span><br><span class=\"line\"># DHT网络监听端口, 默认:6881-6999</span><br><span class=\"line\">dht-listen-port=6881-6999</span><br><span class=\"line\"></span><br><span class=\"line\"># 本地节点查找, PT需要禁用, 默认:false</span><br><span class=\"line\">bt-enable-lpd=true</span><br><span class=\"line\"># 种子交换, PT需要禁用, 默认:true</span><br><span class=\"line\">enable-peer-exchange=true</span><br><span class=\"line\"># 每个种子限速, 对少种的PT很有用, 默认:50K</span><br><span class=\"line\">bt-request-peer-speed-limit=50K</span><br><span class=\"line\"></span><br><span class=\"line\"># 客户端伪装, PT需要</span><br><span class=\"line\">peer-id-prefix=-TR2770-</span><br><span class=\"line\">user-agent=Transmission/2.77</span><br><span class=\"line\"></span><br><span class=\"line\"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span><br><span class=\"line\">seed-ratio=0</span><br><span class=\"line\"># 强制保存会话, 即使任务已经完成, 默认:false</span><br><span class=\"line\"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span><br><span class=\"line\">force-save=true</span><br><span class=\"line\"># BT校验相关, 默认:true</span><br><span class=\"line\">#bt-hash-check-seed=true</span><br><span class=\"line\"># 继续之前的BT任务时, 无需再次校验, 默认:false</span><br><span class=\"line\">bt-seed-unverified=true</span><br><span class=\"line\"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span><br><span class=\"line\">bt-save-metadata=true</span><br><span class=\"line\"># 单个种子最大连接数, 默认:55 0表示不限制</span><br><span class=\"line\">bt-max-peers=0</span><br><span class=\"line\"># 最小做种时间, 单位:分</span><br><span class=\"line\"># seed-time = 60</span><br><span class=\"line\"># 分离做种任务</span><br><span class=\"line\">bt-detach-seed-only=true</span><br><span class=\"line\">#BT Tracker List ;下载地址：https://cdn.jsdelivr.net/gh/XIU2/TrackersListCollection/best_aria2.txt</span><br><span class=\"line\">#页面地址：https://github.com/XIU2/TrackersListCollection/blob/master/README-ZH.md</span><br><span class=\"line\">bt-tracker= &lt;BT-tracker 列表内容&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动服务器\"><a href=\"#启动服务器\" class=\"headerlink\" title=\"启动服务器\"></a>启动服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aria2c --conf-path=<span class=\"string\">&quot;~/.config/aria2/aria2.conf&quot;</span> -D</span><br></pre></td></tr></table></figure>\n<p>此时 Aria2 将挂在后台运行<br>如果出现运行中途挂掉的情况，那么可以设置好<code>alias</code>短命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> start-aria2c=<span class=\"string\">&#x27;aria2c --conf-path=&quot;~/.config/aria2/aria2.conf] -D&#x27;</span></span><br><span class=\"line\">start-aria2c</span><br></pre></td></tr></table></figure>\n<p>开启自启动与挂掉快速启动可以参考<code>配置termux - 自启动</code>和<code>配置termux - 短命令</code>这两节</p>\n<h3 id=\"webui-aria2\"><a href=\"#webui-aria2\" class=\"headerlink\" title=\"webui-aria2\"></a>webui-aria2</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\">pkg install nodejs-lts git</span><br><span class=\"line\"><span class=\"comment\"># 克隆仓库</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/ziahamza/webui-aria2.git</span><br><span class=\"line\"><span class=\"comment\"># cd 到仓库</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> webui-aria2</span><br><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">node node-server.js</span><br></pre></td></tr></table></figure>\n<p>执行上述指令后，将在局域网内启动一个 Aria2 浏览器后台<br>浏览器输入<code>http://&lt;手机ip&gt;:8888</code>便可进入后台</p>\n<h1 id=\"黑客\"><a href=\"#黑客\" class=\"headerlink\" title=\"黑客\"></a>黑客</h1><p>你想当黑客吗？<br>上文提到的 <code>linux发行版 - Kali Nethunter</code> 可以帮助你在手机上面装一个完整的 Kali Linux<br>但termux本身支持<code>python</code>，所以基于python的一些黑客工具可以在其上面运行！<br>让我们来试一试吧</p>\n<h2 id=\"注意-1\"><a href=\"#注意-1\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>由于国外的社交媒体平台有太多的脚本小子了，所以termux的源移除了<code>hashcat</code> <code>hydra</code> <code>metasploit</code>和<code>sqlmap</code>这四个包的封装。所以目前情况下想要安装这些只能自行编译或者拉取git</p>\n<h2 id=\"Metasploit\"><a href=\"#Metasploit\" class=\"headerlink\" title=\"Metasploit\"></a>Metasploit</h2><p>全球公认 10 大黑客常用的设备渗透工具，安全从业者的第一选择</p>\n<h3 id=\"m-wiz-脚本\"><a href=\"#m-wiz-脚本\" class=\"headerlink\" title=\"m-wiz 脚本\"></a>m-wiz 脚本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/noob-hackers/m-wiz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> m-wiz &amp;&amp; bash m-wiz.sh</span><br></pre></td></tr></table></figure>\n<p>进入脚本菜单后按下<code>1</code>安装<br>安装过程漫长，因为metasploit需要很多的依赖，请慢慢等待<br>最后安装完成会自动启动 metasploit</p>\n<h3 id=\"快速启动\"><a href=\"#快速启动\" class=\"headerlink\" title=\"快速启动\"></a>快速启动</h3><p>此处创建软连接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span> -s <span class=\"variable\">$HOME</span>/metasploit-framework/msfconsole <span class=\"variable\">$PREFIX</span>/bin/msfconsole</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s <span class=\"variable\">$HOME</span>/metasploit-framework/msfd <span class=\"variable\">$PREFIX</span>/bin/msfd</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s <span class=\"variable\">$HOME</span>/metasploit-framework/msfdb <span class=\"variable\">$PREFIX</span>/bin/msfdb</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s <span class=\"variable\">$HOME</span>/metasploit-framework/msfrpc <span class=\"variable\">$PREFIX</span>/bin/msfrpc</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s <span class=\"variable\">$HOME</span>/metasploit-framework/msfupdate <span class=\"variable\">$PREFIX</span>/bin/msfupdate</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s <span class=\"variable\">$HOME</span>/metasploit-framework/msfvenom <span class=\"variable\">$PREFIX</span>/bin/msfvenom</span><br></pre></td></tr></table></figure>\n<p>创建完成后，便可直接使用<code>msfconsole</code>等命令</p>\n<h2 id=\"Nmap\"><a href=\"#Nmap\" class=\"headerlink\" title=\"Nmap\"></a>Nmap</h2><p>端口扫描工具，上文有展示过 nmap 的安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install nmap</span><br></pre></td></tr></table></figure>\n<h2 id=\"Netcat\"><a href=\"#Netcat\" class=\"headerlink\" title=\"Netcat\"></a>Netcat</h2><p>网络安全界的瑞士军刀，简单有用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">pkg install nmap-ncat</span><br><span class=\"line\"><span class=\"comment\"># 查版本</span></span><br><span class=\"line\">ncat --version</span><br><span class=\"line\">Ncat: Version 7.95 ( https://nmap.org/ncat )</span><br></pre></td></tr></table></figure>\n<p>目前已集成到<code>nmap</code>，如果安装了<code>nmap</code>就无需进行安装了</p>\n<h2 id=\"Hashcat\"><a href=\"#Hashcat\" class=\"headerlink\" title=\"Hashcat\"></a>Hashcat</h2><p>世界最快的密码破解速通工具，支持多平台和多算法</p>\n<h3 id=\"编译安装\"><a href=\"#编译安装\" class=\"headerlink\" title=\"编译安装\"></a>编译安装</h3><div class=\"note info simple\"><p>之前仍可通过 <code>unstable-repo</code> 安装 hashcat，但 termux 后面将 <code>unstable-repo</code> 丢掉了，将其包替换成了<code>apt</code>。所以只能自己编译</p>\n</div>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉取仓库</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/hashcat/hashcat --depth=1</span><br><span class=\"line\"><span class=\"comment\"># 安装编译依赖</span></span><br><span class=\"line\">pkg install binutils libllvm make</span><br><span class=\"line\"><span class=\"comment\"># cd 到 hashcat 仓库</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> hashcat</span><br></pre></td></tr></table></figure>\n<p>接下来需要进行修改文件<br><strong>src&#x2F;affinity.c</strong> 第174行<br><code>pthread_setaffinity_np</code> 修改成 <code>sched_setaffinity</code><br><strong>deps&#x2F;unrar&#x2F;ulinks.cpp</strong> 第39行<br><code>lutimes</code> 修改成 <code>utimes</code><br><strong>src&#x2F;Makefile</strong><br>在第324行之后添加一行 <code>LFLAGS_NATIVE += -liconv</code><br>修改完成，接下来进行编译安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 编译</span></span><br><span class=\"line\">make -j8</span><br><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<h2 id=\"Hydra\"><a href=\"#Hydra\" class=\"headerlink\" title=\"Hydra\"></a>Hydra</h2><p>黑客组织 THC 的开源暴力破解工具</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 克隆项目</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/vanhauser-thc/thc-hydra</span><br><span class=\"line\"><span class=\"comment\"># 编译/安装</span></span><br><span class=\"line\">./configure --prefix=<span class=\"variable\">$PREFIX</span></span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br><span class=\"line\"><span class=\"comment\"># 查版本</span></span><br><span class=\"line\">./hydra -h</span><br></pre></td></tr></table></figure>\n<h2 id=\"SQLmap\"><a href=\"#SQLmap\" class=\"headerlink\" title=\"SQLmap\"></a>SQLmap</h2><p>经典的 SQL 数据库检测和注入漏洞的开源工具<br>目前sqlmap支持<code>pip</code>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install sqlmap</span><br><span class=\"line\"><span class=\"comment\"># 运行 sqlmap</span></span><br><span class=\"line\">sqlmap</span><br></pre></td></tr></table></figure>\n<h2 id=\"Exiftool\"><a href=\"#Exiftool\" class=\"headerlink\" title=\"Exiftool\"></a>Exiftool</h2><p>图片元数据修改和查看工具<br>其实你的自拍在拍下来之后，会在元数据里保存你的GPS位置，这个可以看到你的GPS位置（即经纬度和位置）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install exiftool</span><br></pre></td></tr></table></figure>\n<p>使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exiftool &lt;你要查看元数据的图片路径&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"应用-插件\"><a href=\"#应用-插件\" class=\"headerlink\" title=\"应用&#x2F;插件\"></a>应用&#x2F;插件</h1><h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h1 id=\"无聊\"><a href=\"#无聊\" class=\"headerlink\" title=\"无聊\"></a>无聊</h1><p>发🐔温的时候可以来这里看看</p>\n<h2 id=\"Hollywood\"><a href=\"#Hollywood\" class=\"headerlink\" title=\"Hollywood\"></a>Hollywood</h2><p>一个没啥用纯装b的仪表盘</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install hollywood</span><br></pre></td></tr></table></figure>\n<h2 id=\"cmatrix\"><a href=\"#cmatrix\" class=\"headerlink\" title=\"cmatrix\"></a>cmatrix</h2><p>《黑客帝国》同款代码雨</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install cmatrix</span><br><span class=\"line\"><span class=\"comment\"># 代码雨</span></span><br><span class=\"line\">cmatrix</span><br></pre></td></tr></table></figure>\n<h2 id=\"cowsay\"><a href=\"#cowsay\" class=\"headerlink\" title=\"cowsay\"></a>cowsay</h2><p>让动物说话</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install cowsay</span><br></pre></td></tr></table></figure>\n<p>列出所有动物名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cowsay -l</span><br><span class=\"line\">Cow files <span class=\"keyword\">in</span> /data/data/com.termux/files/usr/share/cowsay/cows:</span><br><span class=\"line\">alpaca beavis.zen blowfish bong bud-frogs bunny cheese cower cupcake daemon</span><br><span class=\"line\">default dragon dragon-and-cow elephant elephant-in-snake eyes flaming-sheep</span><br><span class=\"line\">fox ghostbusters head-in hellokitty kiss kitty koala kosh llama luke-koala</span><br><span class=\"line\">mech-and-cow meow milk moofasa moose mutilated ren sheep skeleton small</span><br><span class=\"line\">stegosaurus stimpy supermilker surgery three-eyes turkey turtle tux udder</span><br><span class=\"line\">vader vader-koala www</span><br></pre></td></tr></table></figure>\n<p>简单的让牛说话</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cowsay <span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\">_______</span><br><span class=\"line\">&lt; hello &gt;</span><br><span class=\"line\"> -------</span><br><span class=\"line\">        \\   ^__^</span><br><span class=\"line\">         \\  (oo)\\_______</span><br><span class=\"line\">            (__)\\       )\\/\\</span><br><span class=\"line\">                ||----w |</span><br><span class=\"line\">                ||     ||</span><br></pre></td></tr></table></figure>\n<p>一整条命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cowsay -f &lt;动物名&gt; &lt;要说的话&gt;</span><br></pre></td></tr></table></figure>\n<p>配合 fortune<br>执行下面命令前请先安装<code>fortune</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fortune|cowsay -f dragon</span><br></pre></td></tr></table></figure>\n<h2 id=\"fortune\"><a href=\"#fortune\" class=\"headerlink\" title=\"fortune\"></a>fortune</h2><p>随机一条文案或者tips</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install fortune</span><br></pre></td></tr></table></figure>\n<p>执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fortune</span><br></pre></td></tr></table></figure>\n<p>自然就会有一条新的文案或者tips随机出现</p>\n<h2 id=\"toilet\"><a href=\"#toilet\" class=\"headerlink\" title=\"toilet\"></a>toilet</h2><p>一个输出 ascii 文字的程序</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install toilet</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">toilet &lt;文字&gt; <span class=\"comment\"># 正常输出</span></span><br><span class=\"line\">toilet --<span class=\"built_in\">help</span> <span class=\"comment\"># 帮助</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"neofetch\"><a href=\"#neofetch\" class=\"headerlink\" title=\"neofetch\"></a>neofetch</h2><p>简单也有用的命令行设备信息查看工具</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install neofetch</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">neofetch</span><br><span class=\"line\">-o          o-            u0_a442@localhost</span><br><span class=\"line\">          +hydNNNNdyh+             -----------------</span><br><span class=\"line\">        +mMMMMMMMMMMMMm+           OS: Android 8.1.0 aarch64</span><br><span class=\"line\">      `dMMm:NMMMMMMN:mMMd`         Host: OPPO PBAM00</span><br><span class=\"line\">      hMMMMMMMMMMMMMMMMMMh         Kernel: 4.9.82-perf+</span><br><span class=\"line\">  ..  yyyyyyyyyyyyyyyyyyyy  ..     Uptime: 64 days, 3 hours, 6 mins</span><br><span class=\"line\">.mMMm`MMMMMMMMMMMMMMMMMMMM`mMMm.   Packages: 365 (dpkg), 1 (pkg)</span><br><span class=\"line\">:MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:   Shell: zsh 5.9</span><br><span class=\"line\">:MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:   Terminal: com.termux</span><br><span class=\"line\">:MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:   CPU: Qualcomm SDM450 (8) @ 1.804GH</span><br><span class=\"line\">:MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:   Memory: 2189MiB / 3568MiB</span><br><span class=\"line\">-MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM-</span><br><span class=\"line\"> +yy+ MMMMMMMMMMMMMMMMMMMM +yy+</span><br><span class=\"line\">      mMMMMMMMMMMMMMMMMMMm</span><br><span class=\"line\">      `/++MMMMh++hMMMM++/`</span><br><span class=\"line\">          MMMMo  oMMMM</span><br><span class=\"line\">          MMMMo  oMMMM</span><br><span class=\"line\">          oNMm-  -mMNs</span><br></pre></td></tr></table></figure>\n<p>手持战神a5（</p>\n<h2 id=\"nyancat\"><a href=\"#nyancat\" class=\"headerlink\" title=\"nyancat\"></a>nyancat</h2><p>彩虹猫  🐱🌈</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install nyancat</span><br><span class=\"line\"><span class=\"comment\"># 彩虹猫启动</span></span><br><span class=\"line\">nyancat</span><br></pre></td></tr></table></figure>\n<p>按下<code>Ctrl+C</code>退出彩虹猫</p>\n<h2 id=\"sl\"><a href=\"#sl\" class=\"headerlink\" title=\"sl\"></a>sl</h2><p>有时候打<code>ls</code>一不小心打了个<code>sl</code>，于是你可以装个<code>sl</code>来娱乐一波</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install sl</span><br></pre></td></tr></table></figure>\n<p>直接执行<code>sl</code>后，会出来个移动的火车</p>\n<h2 id=\"二维码\"><a href=\"#二维码\" class=\"headerlink\" title=\"二维码\"></a>二维码</h2><p>终端二维🐴，核心<code>qrenco.de</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;&lt;url链接&gt;&quot;</span> |curl -F-=\\&lt;- qrenco.de</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"其他页面\"><a href=\"#其他页面\" class=\"headerlink\" title=\"其他页面\"></a>其他页面</h1><p>有关于<code>termux</code>的一些文章会放在此处并跳转，如果你对部分内容感兴趣，可以点击下面的链接跳转到相对应的页面<br>以下链接跳转的文章部分教程适用于<code>linux</code>，但基本操作一致</p>\n<h2 id=\"termux-全局-整合\"><a href=\"#termux-全局-整合\" class=\"headerlink\" title=\"termux 全局&#x2F;整合\"></a>termux 全局&#x2F;整合</h2><p><a href=\"https://www.sqlsec.com/2018/05/termux.html\">Termux 高级终端安装使用配置教程 | 国光</a><br><a href=\"https://wiki.termux.com/wiki/Main_Page\">Termux Wiki</a><br>本文大部分参考了上面两个页面<br><a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/termux/\">termux | 镜像站使用帮助 | 清华大学开源软件镜像站</a></p>\n<h2 id=\"Vim-1\"><a href=\"#Vim-1\" class=\"headerlink\" title=\"Vim\"></a>Vim</h2><p><a href=\"https://www.runoob.com/linux/linux-vim.html\">Linux vi&#x2F;vim - 菜鸟教程</a><br><a href=\"https://blog.csdn.net/weixin_58849785/article/details/137153298\">Vim编辑器使用教程</a></p>\n<h2 id=\"Nano-1\"><a href=\"#Nano-1\" class=\"headerlink\" title=\"Nano\"></a>Nano</h2><p><a href=\"https://blog.csdn.net/xiao_yi_xiao/article/details/117747319\">Linux 之 nano 编辑器的使用详细 - CSDN博客</a></p>\n<h2 id=\"发行版\"><a href=\"#发行版\" class=\"headerlink\" title=\"发行版\"></a>发行版</h2><p><a href=\"https://www.kali.org/docs/nethunter/nethunter-rootless/\">Nethunter Rootless | Kali Linux Documents</a><br><a href=\"https://www.cnblogs.com/wangxiang2023122/p/18189252\">移动端termux安装kali - 王翔9980 - 博客园</a><br><a href=\"https://blog.csdn.net/m0_75196987/article/details/137704117\">Termux:从0到1安装桌面系统(proot-distro) </a></p>\n<h2 id=\"开发环境-1\"><a href=\"#开发环境-1\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h2><p><a href=\"https://wiki.termux.com/wiki/Development_Environments\">Development Environments - Termux Wiki</a><br><a href=\"https://www.runoob.com/\">菜鸟教程 - 学的不仅是技术,更是梦想!</a><br><a href=\"https://zhuanlan.zhihu.com/p/106298311\">Termux安装Node.JS及网页版文档查看与修改器wcode - 知乎</a></p>\n<h2 id=\"网站环境\"><a href=\"#网站环境\" class=\"headerlink\" title=\"网站环境\"></a>网站环境</h2><p><a href=\"https://m.bilibili.com/opus/867813045727920208\">termux一键安装nginx和ui面板</a><br><a href=\"https://blog.csdn.net/m0_46415203/article/details/134734837\">手机端做服务器部署nginx搭建前端网站</a><br><a href=\"https://download.csdn.net/blog/column/9659061/133467964\">安卓Termux搭建Web服务器【公网远程手机Android服务器】</a><br><a href=\"https://blog.csdn.net/xnllc/article/details/122942442\">最小termux的nginx+php配置</a><br><a href=\"https://sworker.gitlab.io/2019/05/06/mysql-on-termux/\">在termux上运行mysql | SWorker</a><br><a href=\"https://cycxtit.github.io/2021/10/07/tm-hexo/\">【建网】Termux部署Hexo - 程源の小站</a></p>\n<h2 id=\"折腾-1\"><a href=\"#折腾-1\" class=\"headerlink\" title=\"折腾\"></a>折腾</h2><p><a href=\"https://wiki.termux.com/wiki/Remote_Access\">Remote Access - Termux Wiki</a><br><a href=\"https://zhuanlan.zhihu.com/p/226393968\">Termux 上运行SSH Server - 知乎</a><br><a href=\"https://blog.linioi.com/posts/aria2-for-termux/\">Android 一键安装配置 Aria2 - 清絮的博客</a><br><a href=\"https://coder.com/docs/code-server/termux\">Termux - code-server Docs</a><br><a href=\"https://zhuanlan.zhihu.com/p/399098337\">只需一部安卓手机，让全功能VSCode登陆iPad - 知乎</a><br><a href=\"https://www.bilibili.com/read/cv14844783/\">一篇利用box64和termux在安卓手机上游玩矮人要塞的教程</a><br><a href=\"https://blog.iamsjy.com/2023/07/11/install-mc-bds-on-android-phone-with-no-cost/\">使用安卓手机无成本搭建 Minecraft 基岩版服务器（BDS）</a><br><a href=\"https://studylessshape.github.io/post/note/alist-install-for-android/\">安卓手机安卓Alist以及配置 – 学少何Blog - GitHub Pages</a></p>\n<h1 id=\"文章总结\"><a href=\"#文章总结\" class=\"headerlink\" title=\"文章总结\"></a>文章总结</h1><p>（本文章未完成）<br>相对来讲，国外的termux交流氛围比我们这里国内的termux交流氛围是特别好的了。发个 youtube 就火了<br>这篇文章我自己也是一时兴起，只是<code>1.118.1</code>版本更新才有的兴趣写的<br>最后，感谢你仔细阅读该文章！<br>希望通过该文章可以帮助完善你的termux！</p>\n","categories":["科技与狠活"],"tags":["termux","科技"]},{"title":"你好逝界","url":"http://toad114514.github.io/2024/08/16/hello-world/","content":"<p>欢迎来到 <a href=\"https://hexo.io/\">Hexo</a>! 这是你的最早的文章。 点击 <a href=\"https://hexo.io/docs/\">文档</a> 查看更多信息. 如果你在使用 Hexo 时出现了 Bugsssssssssss, 你可以在 <a href=\"https://hexo.io/docs/troubleshooting.html\">这里</a> 找到解决方案或者去 <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a> 提交 issues.</p>\n<h2 id=\"快速失败（不是\"><a href=\"#快速失败（不是\" class=\"headerlink\" title=\"快速失败（不是\"></a>快速失败（不是</h2><h3 id=\"新建文章\"><a href=\"#新建文章\" class=\"headerlink\" title=\"新建文章\"></a>新建文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>更多信息请看 <a href=\"https://hexo.io/docs/writing.html\">写作</a></p>\n<h3 id=\"运行服务坤\"><a href=\"#运行服务坤\" class=\"headerlink\" title=\"运行服务坤\"></a>运行服务坤</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>更多信息请看: <a href=\"https://hexo.io/docs/server.html\">服务器</a></p>\n<h3 id=\"创建静态页面\"><a href=\"#创建静态页面\" class=\"headerlink\" title=\"创建静态页面\"></a>创建静态页面</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>更多信息请看: <a href=\"https://hexo.io/docs/generating.html\">创建静态页面</a></p>\n<h3 id=\"部署到网站\"><a href=\"#部署到网站\" class=\"headerlink\" title=\"部署到网站\"></a>部署到网站</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>更多请看: <a href=\"https://hexo.io/docs/one-command-deployment.html\">部署</a></p>\n","categories":[],"tags":[]},{"title":"Apache2 完整安装指导","url":"http://toad114514.github.io/2024/05/26/apache2-ins/","content":"<div class=\"note simple info flat\"><p>本教程适用于termux和linux发行版本，请根据代码注释选择合适的代码</p>\n</div>\n\n<h1 id=\"了解-Apache\"><a href=\"#了解-Apache\" class=\"headerlink\" title=\"了解 Apache\"></a>了解 Apache</h1><p>Apache，像羽毛一样的图标，全球服务器使用量第一的服务器软件，扩展高，安全高都是对Apache最好的标志。<br>在termux proot容器中，直接安装好编译的nginx是无法登陆的，所以apache便成了替代品。<br>apache的1.3版本早已占领上世纪90年代的服务器，所以现在apache便成了第一<br>2.x更是比1.3强劲更多<br>apache还是debian系发行版的最好搭配<br>好了不说了，直接开始安装好吧</p>\n<h1 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h1><p>考虑到源码安装方式在termux、proot环境和旧服务器中编译缓慢，这里优先考虑deb安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在termux上</span></span><br><span class=\"line\">pkg install apache2</span><br><span class=\"line\"><span class=\"comment\"># 在debian系发行版和termux proot上(proot仅debian系发行版)</span></span><br><span class=\"line\">apt install apache2</span><br></pre></td></tr></table></figure>\n<p>安装好上述功能后就要开始配置了</p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"在-termux-上\"><a href=\"#在-termux-上\" class=\"headerlink\" title=\"在 termux 上\"></a>在 termux 上</h2><p>在termux上，你无需做任何配置。因为你只知道一个文件夹</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/data/data/com.termux/files/usr/share/apache2/default-site/htdocs/</span><br></pre></td></tr></table></figure>\n<p>这个文件夹是网站文件的根目录，你只需要获得访问权限并使用cp命令将你在的文件复制到这里即可<br>如果你仍然要在手机存储的某个目录作为apache的文件夹的话，那么请等一等，因为明天是周一我要回学校，我得早睡，写完这个文章后便没时间更正了，不然明天在学校睡觉直接被真实。</p>\n<h2 id=\"在-debian-系发行版和termux-proot上\"><a href=\"#在-debian-系发行版和termux-proot上\" class=\"headerlink\" title=\"在 debian 系发行版和termux proot上\"></a>在 debian 系发行版和termux proot上</h2><h3 id=\"apache-配置文件夹\"><a href=\"#apache-配置文件夹\" class=\"headerlink\" title=\"apache 配置文件夹\"></a>apache 配置文件夹</h3><p>使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/apache2</span><br></pre></td></tr></table></figure>\n<p>移步到该文件夹，这里便是apache的配置文件。</p>\n<h3 id=\"关于默认配置文件的描述\"><a href=\"#关于默认配置文件的描述\" class=\"headerlink\" title=\"关于默认配置文件的描述\"></a>关于默认配置文件的描述</h3><ol>\n<li>&#x2F;etc&#x2F;apache2&#x2F;apache2.conf</li>\n</ol>\n<ul>\n<li>主要配置文件，在该文件末尾include了其他的配置文件</li>\n</ul>\n<ol start=\"2\">\n<li>&#x2F;etc&#x2F;apache2&#x2F;ports.conf</li>\n</ol>\n<ul>\n<li>与主配置一个文件夹，用于配置端口，默认都需要重新配置，termux proot下必须重新配置</li>\n</ul>\n<ol start=\"3\">\n<li>&#x2F;etc&#x2F;apache2&#x2F;envvars</li>\n</ol>\n<ul>\n<li>定义apaxhe用户的配置文件，默认为www-data</li>\n</ul>\n<ol start=\"4\">\n<li>&#x2F;etc&#x2F;apache2&#x2F;mods-enabled&#x2F;dir.conf</li>\n</ol>\n<ul>\n<li>默认主页的配置文件</li>\n</ul>\n<ol start=\"5\">\n<li>&#x2F;etc&#x2F;apache2&#x2F;site-enabled&#x2F;000-default.conf</li>\n</ol>\n<ul>\n<li>默认的主机配置文件</li>\n</ul>\n<h3 id=\"主要配置\"><a href=\"#主要配置\" class=\"headerlink\" title=\"主要配置\"></a>主要配置</h3><p>首先重新配置配置端口<br><em>Vim，启动</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/apache2/ports.conf </span><br></pre></td></tr></table></figure>\n<p>先在ports.conf修改监听端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># If you just change the port or add more ports here, you will likely also</span><br><span class=\"line\"># have to change the VirtualHost statement in</span><br><span class=\"line\"># /etc/apache2/sites-enabled/000-default.conf</span><br><span class=\"line\"></span><br><span class=\"line\">Listen 80 # 在这里修改监听端口号，这里记住了后面要考</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;IfModule ssl_module&gt;</span><br><span class=\"line\">        Listen 443</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;IfModule mod_gnutls.c&gt;</span><br><span class=\"line\">        Listen 443</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"># vim: syntax=apache ts=4 sw=4 sts=4 sr noet</span><br></pre></td></tr></table></figure>\n<p>然后修改主机端口</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/apache2/site-available/000-default.conf</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:80&gt; # 把这里面的80换成刚才在 ports.conf 里输入的端口号</span><br><span class=\"line\">        # The ServerName directive sets the request scheme, hostname and port that</span><br><span class=\"line\">        # the server uses to identify itself. This is used when creating</span><br><span class=\"line\">        # redirection URLs. In the context of virtual hosts, the ServerName</span><br><span class=\"line\">        # specifies what hostname must appear in the request&#x27;s Host: header to</span><br><span class=\"line\">        # match this virtual host. For the default virtual host (this file) this</span><br><span class=\"line\">        # value is not decisive as it is used as a last resort host regardless.</span><br><span class=\"line\">        # However, you must set it for any further virtual host explicitly.</span><br><span class=\"line\">        #ServerName www.example.com</span><br><span class=\"line\"></span><br><span class=\"line\">        ServerAdmin xiaolan2332021@163.com</span><br></pre></td></tr></table></figure>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><h2 id=\"termux\"><a href=\"#termux\" class=\"headerlink\" title=\"termux\"></a>termux</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">apachectl</span><br><span class=\"line\"><span class=\"comment\"># 关闭</span></span><br><span class=\"line\">pkill -9 apache2</span><br></pre></td></tr></table></figure>\n<h2 id=\"debian系发行版和proot\"><a href=\"#debian系发行版和proot\" class=\"headerlink\" title=\"debian系发行版和proot\"></a>debian系发行版和proot</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">/etc/init.d/apache2 start</span><br><span class=\"line\"><span class=\"comment\"># 查看状态</span></span><br><span class=\"line\">/etc/init.d/apache2 status</span><br><span class=\"line\"><span class=\"comment\"># 关闭</span></span><br><span class=\"line\">/etc/init.d/apache2 stop</span><br></pre></td></tr></table></figure>\n<p>查看状态时，如果提前运行了启动指令，则显示</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* apache2 is running</span><br></pre></td></tr></table></figure>\n<h1 id=\"查看运行结果\"><a href=\"#查看运行结果\" class=\"headerlink\" title=\"查看运行结果\"></a>查看运行结果</h1><p>打开任意浏览器，然后输入 localhost: 加在ports.conf里输入的端口号 (localhost后面的冒号要带上)，无任何问题时应显示：<br><img src=\"https://img2.imgtp.com/2024/05/26/9vx5cD1w.jpg\" alt=\"运行结果\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>nginx的替代品<br>如果deb包安装不行的话就去网上找源码安装罢<br>还要想要试试nginx的可以去看<a href=\"https://toad114514.github.io/2024/01/12/termux-nginx/\">这篇文章</a><br>不想折腾就备个ksweb罢<br>到时候给大家整个php安装并在apache上运行</p>\n","categories":["科技与狠活"],"tags":["服务器","termux","Apache"]},{"title":"体验纯汇编系统 KolibriOS","url":"http://toad114514.github.io/2024/05/24/kolibrios-try/","content":"<p>在纯汇编系统领域上，MenuetOS属于是最早的。MenuetOS出来后，过了一段时间，便从MenuetOS上剥离了一个新的系统，<strong>KolibriOS</strong></p>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p><a href=\"www.kolibrios.org/en/download\">KolibriOS</a><br>登陆该地址后，选择 LiveCD Image 的 English 版本<br>等待一会便可下载完成<br>通过7z将解压出来kolibrios.iso文件</p>\n<h1 id=\"准备环境\"><a href=\"#准备环境\" class=\"headerlink\" title=\"准备环境\"></a>准备环境</h1><p>termux+qemu<br>aqemu配置：</p>\n<h1 id=\"尝试\"><a href=\"#尝试\" class=\"headerlink\" title=\"尝试\"></a>尝试</h1><h2 id=\"文件管理器\"><a href=\"#文件管理器\" class=\"headerlink\" title=\"文件管理器\"></a>文件管理器</h2><p>总共有三个文件管理器，KFM2、EFM和Far<br>三个文件管理器的风格不同<br>KFM2类似于Far的样式，EFM是winxp的风格，Far应该是dos的移植版本</p>\n<h2 id=\"移植应用\"><a href=\"#移植应用\" class=\"headerlink\" title=\"移植应用\"></a>移植应用</h2><p>这些应用要不是开源修改，要不就是在DOS上移植过来了</p>\n<p>毕竟他们的开发者也是有移植的力量的<br>这里面熟悉的应该只有dosbox罢</p>\n<h2 id=\"图片管理器-图片编辑\"><a href=\"#图片管理器-图片编辑\" class=\"headerlink\" title=\"图片管理器&#x2F;图片编辑\"></a>图片管理器&#x2F;图片编辑</h2><p>两个图片管理器，zSea 和 KIV<br>感觉zSea比KIV比较好</p>\n<p>ANIMAGE 简易的画图工具<br>当然，Kolibrios里面的画图工具有好几个</p>\n<p>还有配色器</p>\n<h2 id=\"游戏\"><a href=\"#游戏\" class=\"headerlink\" title=\"游戏\"></a>游戏</h2><p>kolibrios的开发者们也是直接塞了3 多款的游戏，大部分都是益智游戏，小游戏和移植的DOS大型游戏(在纯汇编系统里属于是大型游戏)</p>\n<p>分成了怀旧类、Arcade、大型游戏和益智游戏四个大类，其中大型游戏也是塞了四个，这四个游戏也是移植来的</p>\n<p>体验不错，大部分游戏基本也是比较好玩的</p>\n<h2 id=\"互联网\"><a href=\"#互联网\" class=\"headerlink\" title=\"互联网\"></a>互联网</h2><p>还有互联网，这浏览器也是比较nb<br>唯一缺点是不能访问https网站</p>\n<p>包括各种客户端(IRC、FTP、VNC等)、网络实用工具、全文字浏览器和一个FTP服务器</p>\n<h2 id=\"系统设置\"><a href=\"#系统设置\" class=\"headerlink\" title=\"系统设置\"></a>系统设置</h2><p>在系统设置里面，不仅拥有各种的基础设置，还有各种的监测工具和硬件测试工具。</p>\n<p>这个就不多说</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>整体上看，比menuetos好很多，menuetos已经停更很久了。<br>kolibrios在应用生态还是很好的<br>下次给大家试一下menuetos</p>\n","categories":["科技与狠活"],"tags":["系统","操作系统","kolibrios"]},{"title":"HTML 模板语言 pug 基础语法","url":"http://toad114514.github.io/2024/05/15/pug-tuorist/","content":"<div class=\"note info simple\"><p><strong>如果你想要对Hexo主题进行深度美化，且你要进行深度美化的主题模板引擎使用的就是pug(如butterfly)，则该文章将帮助到你</strong></p>\n</div>\n\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>给你的博客美化是博客建站中感觉重要但又可以丢掉的一点，大部分人会给自己的网站添加细节。但网上的Hexo美化还要分主题美化，一些你想要的美化功能只能在其他主题上使用，或者网上的这些美化你不喜欢，想自己整美化，那么本文章将帮助你初步了解pug，帮助你可以快速的在基于pug得主题上美化。</p>\n<h1 id=\"啥是Pug？\"><a href=\"#啥是Pug？\" class=\"headerlink\" title=\"啥是Pug？\"></a>啥是Pug？</h1><blockquote>\n<p>Pug 是一个用 JavaScript 实现的高性能的模板引擎，支持 Node.js 和浏览器运行环境，其灵感来自 Haml 项目。</p>\n</blockquote>\n<h1 id=\"判断主题是否使用pug\"><a href=\"#判断主题是否使用pug\" class=\"headerlink\" title=\"判断主题是否使用pug\"></a>判断主题是否使用pug</h1><p>在一些主题上会用到pug。但不是完全。<br>打开如下文件夹：<br>直接存放在themes文件夹</p>\n<blockquote>\n<p>博客根目录&#x2F;themes&#x2F;主题名&#x2F;layout<br>npm方式安装<br>博客根目录&#x2F;node_modules&#x2F;hexo-theme-主题名&#x2F;layout<br>如果发现该文件夹内文件后缀名为.pug，则该主题使用了pug。</p>\n</blockquote>\n<h1 id=\"安装pug\"><a href=\"#安装pug\" class=\"headerlink\" title=\"安装pug\"></a>安装pug</h1><p>npm</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install pug</span><br></pre></td></tr></table></figure>\n<p>pug 命令行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install pug-cli -g</span><br><span class=\"line\"><span class=\"comment\"># 查看安装情况</span></span><br><span class=\"line\"><span class=\"comment\"># 没找到命令请使用 npx pug --help</span></span><br><span class=\"line\">pug --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n\n<p>一般情况下，pug在安装主题时便已安装完成。</p>\n<h1 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h1><h2 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a(href=&quot;toad114514.github.io&quot;)</span><br><span class=\"line\">|</span><br><span class=\"line\">|</span><br><span class=\"line\">a(href=&quot;#&quot;)</span><br></pre></td></tr></table></figure>\n<p>标签属性和 html 类似，但其实是 js 的普通表达式。允许使用逗号作为属性分隔符，不加也可以。<br><strong>本页所有事例中包括管道符号”|”的行都用于控制空格上</strong><br>支持所有 js 表达式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//- 已登录</span><br><span class=\"line\">- var authenticated = true</span><br><span class=\"line\">body(class=authenticated ? &#x27;authed&#x27; : &#x27;anon&#x27;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iframe(</span><br><span class=\"line\">  scr=&quot;#&quot;</span><br><span class=\"line\">  width=&quot;150&quot;</span><br><span class=\"line\">  height=&quot;150&quot;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>pug允许把属性分多行编写。</p>\n<p>如果属性里有特殊字符，且和 js 语法产生冲突，则需要用 “” 或 ‘’ 括起来</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div(class=&quot;my-class&quot; &quot;(click)&quot;=&quot;get()&quot;)</span><br></pre></td></tr></table></figure>\n\n<p>如果想要在属性中使用变量，则可以使用js写属性</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- var url = &#x27;pug-test.html&#x27;;</span><br><span class=\"line\">a(href=&#x27;/&#x27; + url) 链接</span><br><span class=\"line\">|</span><br><span class=\"line\">|</span><br><span class=\"line\">- url = &#x27;https://example.com/&#x27;</span><br><span class=\"line\">a(href=url) 另一个链接</span><br></pre></td></tr></table></figure>\n<h2 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h2><p>case 属于 js 的 switch 缩写，接受如下形式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- var num = 5</span><br><span class=\"line\">case num</span><br><span class=\"line\">  when 3</span><br><span class=\"line\">    p 数字是5</span><br><span class=\"line\">  when 5</span><br><span class=\"line\">    p 数字是5</span><br><span class=\"line\">  default</span><br><span class=\"line\">    p 数字是 $(num)</span><br></pre></td></tr></table></figure>\n<p>可以像js一样使用分支传递</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">case num</span><br><span class=\"line\">  when 3</span><br><span class=\"line\">  when 5</span><br><span class=\"line\">    p 数字应该是3或5</span><br></pre></td></tr></table></figure>\n<p>不想输出任何东西，可以明确性的加上break语句</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">case num</span><br><span class=\"line\">  when 3</span><br><span class=\"line\">    - break</span><br></pre></td></tr></table></figure>\n<p>可以使用块展开的语法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- var num = 5</span><br><span class=\"line\">case num</span><br><span class=\"line\">  when 3: p 数字是3</span><br><span class=\"line\">  when 5: p 数字是5</span><br><span class=\"line\">  default: p 数字是 $(num)</span><br></pre></td></tr></table></figure>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>pug提供了在模板中嵌入js代码的可能<br>不输出的代码<br>使用 “-“ 开始一段不输出的代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- for (var i = 0; i &lt; 5; i++)</span><br><span class=\"line\">  li $(i)</span><br></pre></td></tr></table></figure>\n<p>带输出的代码<br>使用 “&#x3D;” 开始一段带输出的代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p</span><br><span class=\"line\">  = &quot;&lt;转义&gt; 的代码&quot;</span><br><span class=\"line\">// 行内形式</span><br><span class=\"line\">p= &quot;&lt;转义&gt; 的代码&quot;</span><br></pre></td></tr></table></figure>\n<p>不转义的带输出代码</p>\n<div class=\"note danger simple\"><p><strong>不安全警告</strong><br>未转义的字符输出<strong>是危险的</strong>，可能导致<strong>跨站脚本攻击</strong></p>\n</div>\n<p>用 “!&#x3D;” 开始一段未转义的带输出字符</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p </span><br><span class=\"line\"> != &quot;&lt;strong&gt;没转义&lt;/strong&gt;的代码&quot;</span><br><span class=\"line\">// 行内形式</span><br><span class=\"line\">p!= &quot;&lt;strong&gt;没转义&lt;/strong&gt;&quot; + &quot;的代码&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><p>带输出的注释和js注释一样，它们类似标签，能生成对应的html注释，而且必须单独一行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// legacy</span><br><span class=\"line\">p good</span><br><span class=\"line\">p 牢大我想你了</span><br></pre></td></tr></table></figure>\n<p>也有不输出的注释，在后期html渲染时不会出现对应的注释</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//- 仅存在于pug模板中的注释</span><br><span class=\"line\">p man</span><br><span class=\"line\">p whatcanisay</span><br><span class=\"line\">p manbaout</span><br></pre></td></tr></table></figure>\n<p>一个正常的块注释如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body</span><br><span class=\"line\">  //- </span><br><span class=\"line\">    这里注释后期</span><br><span class=\"line\">    不会生成对应的html注释</span><br><span class=\"line\">    写多少字都行</span><br><span class=\"line\">    凉屋赶紧加强黑骑</span><br><span class=\"line\">  //</span><br><span class=\"line\">    这里注释</span><br><span class=\"line\">    后期会生成对应的html注释</span><br><span class=\"line\">    怎么写都行</span><br><span class=\"line\">    张浩没只因</span><br></pre></td></tr></table></figure>\n<p>条件注释<br>用于分辨新老ie浏览器的特殊标识，允许直接写html风格的注释</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">doctype html</span><br><span class=\"line\">&lt;!--[if IE 8]&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot; class=&quot;lt-ie9&quot;&gt;</span><br><span class=\"line\">&lt;![endif]--&gt;</span><br><span class=\"line\">&lt;!--[if gt IE 8]&gt;&lt;!--&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;!--&lt;![endif]--&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h2><p>pug条件判断的一般形式的括号是可选的，所以其实可以省略开头的 “-“，效果完全相同，类似一个常规js语法形式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- var manba = ( msg: &quot;out&quot; )</span><br><span class=\"line\">- var uncomment = true</span><br><span class=\"line\">#user</span><br><span class=\"line\">  if manba.msg</span><br><span class=\"line\">    h2.yellow manba</span><br><span class=\"line\">    p.msg= manba.msg</span><br><span class=\"line\">  else if uncomment</span><br><span class=\"line\">    h2.blue 消息</span><br><span class=\"line\">    p.msg 没有添加消息</span><br><span class=\"line\">  else</span><br><span class=\"line\">    h2.red 消息</span><br><span class=\"line\">    没消息</span><br></pre></td></tr></table></figure>\n<p>oug同样提供反义版本 “unless”</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\\\\\\\\\\\\\\\\\\\ a.pug &lt;</span><br><span class=\"line\">unless user.isAnonymous</span><br><span class=\"line\">  p 您已经以 #&#123;user.name&#125; 的身份登录。</span><br><span class=\"line\">\\\\\\\\\\\\\\\\\\\\ b.pug &gt;</span><br><span class=\"line\">if !user.isAnonymous</span><br><span class=\"line\">  p 您已经以 #&#123;user.name&#125; 的身份登录。</span><br></pre></td></tr></table></figure>\n<h2 id=\"包含\"><a href=\"#包含\" class=\"headerlink\" title=\"包含\"></a>包含</h2><p>包含允许你把另外的内容插入进来<br>main.pug</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">  include inc/head.pug</span><br><span class=\"line\">  body</span><br><span class=\"line\">    p 欢迎</span><br><span class=\"line\">    p.manba 牢大我想你了</span><br><span class=\"line\">    include inc/manba.pug</span><br><span class=\"line\">    include inc/foot.pug</span><br></pre></td></tr></table></figure>\n<p>head.pug</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head</span><br><span class=\"line\">  title 扣1复活牢大</span><br><span class=\"line\">  script(src=&quot;/js/manba.js&quot;)</span><br></pre></td></tr></table></figure>\n<p>manba.pug</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img(src=&quot;/img/laoda.jpg&quot;)</span><br><span class=\"line\">p.red 肘击24次只为纪念牢大</span><br></pre></td></tr></table></figure>\n<p>foot.pug</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">footer</span><br><span class=\"line\">  p give my like star kobe branyt</span><br></pre></td></tr></table></figure>\n<h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><p>pug允许使用 block 和 extends 关键字进行模板继承<br>layout.pug 文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">  head</span><br><span class=\"line\">    title 我要把凉屋炸了</span><br><span class=\"line\">    block script</span><br><span class=\"line\">    script(src=&quot;js/liangwu.js&quot;)</span><br><span class=\"line\">  body</span><br><span class=\"line\">    block content</span><br><span class=\"line\">    block foot</span><br><span class=\"line\">      #footer</span><br><span class=\"line\">        p 炸凉屋时间！</span><br></pre></td></tr></table></figure>\n<p>扩展布局时，只需要在新的文件里使用 extends 指出被继承的模板路径即可<br>现在可以定义诺干个新块去覆盖父模板的父块<br>ext.pug 文件里面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extends layout.pug</span><br><span class=\"line\"></span><br><span class=\"line\">block script</span><br><span class=\"line\">  script(src=&quot;js/zha.js&quot;)</span><br><span class=\"line\">block content</span><br><span class=\"line\">   h1 炸</span><br><span class=\"line\">   p 炸凉屋</span><br><span class=\"line\">   - var ways = [&quot;小猫牢底&quot;, &quot;PS5&quot;, &quot;统帅力&quot;]</span><br><span class=\"line\">   p 你可以用以下方法来炸凉屋</span><br><span class=\"line\">   each waysnum in ways</span><br><span class=\"line\">     p= waysnum</span><br></pre></td></tr></table></figure>\n<p>如下例子，content暴露出了”zha”和”zhuka”两个新块用于扩展。当然，子模块也可以把整个content覆盖。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">block content</span><br><span class=\"line\">  .zha</span><br><span class=\"line\">    block zha</span><br><span class=\"line\">      p 没有任何东西</span><br><span class=\"line\">  .zhuka</span><br><span class=\"line\">    block zhuka</span><br><span class=\"line\">      i 把凉屋炸了</span><br></pre></td></tr></table></figure>\n<p>如果仅仅简单填一些东西上去而不是覆盖，这时便可使用 append &#x2F; prepend。<br>append 在尾部部添加内容<br>prepend 在头部添加内容<br>如果你想要额外添砖加瓦，而不是推平重来，则可以这样做</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">block append head</span><br><span class=\"line\">  sxript(src=&quot;zhuka.js&quot;)</span><br></pre></td></tr></table></figure>\n<p>在有 append 或 prepend 情况下，可以将 block 省略</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">append head</span><br><span class=\"line\">  script(src=&quot;zhuka.js&quot;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"嵌入\"><a href=\"#嵌入\" class=\"headerlink\" title=\"嵌入\"></a>嵌入</h2><p>pug提供多种嵌入方式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- var title = &quot;local boradcast 24.5.16&quot;</span><br><span class=\"line\">- var authon = &quot;fimright-lztv&quot;</span><br><span class=\"line\">- var zy = &quot;&lt;span&gt;温度 27 度&lt;/span&gt;&quot;</span><br><span class=\"line\">h1= title</span><br><span class=\"line\">p #(authon) 制作</span><br><span class=\"line\">p 今日 #(zy)</span><br></pre></td></tr></table></figure>\n<p>不仅可以嵌入js，也可以嵌入pug书写的标签</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p.</span><br><span class=\"line\">  这是一个很长很长而且还很无聊的段落，还没有结束，是的，非常非常地长。</span><br><span class=\"line\">  突然出现了一个 #[strong 充满力量感的单词]，这确实让人难以 #[em 忽视]。</span><br><span class=\"line\">p.</span><br><span class=\"line\">  使用带属性的嵌入标签的例子：</span><br><span class=\"line\">  #[q(lang=&quot;es&quot;) ¡Hola Mundo!]</span><br></pre></td></tr></table></figure>\n<h2 id=\"迭代-循环\"><a href=\"#迭代-循环\" class=\"headerlink\" title=\"迭代(循环)\"></a>迭代(循环)</h2><p>pug提供了两种迭代方案，each 和 while<br>each迭代<br>pug的头等迭代方式，让你在模板中迭代数据和对象更方便</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul</span><br><span class=\"line\">  each num in [1, 2, 3, 4, 5]</span><br><span class=\"line\">    li 第 #(num) 个 列表</span><br></pre></td></tr></table></figure>\n<p>允许在迭代是获得索引值</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul</span><br><span class=\"line\">  each num, index in [&quot;祖卡&quot;, &quot;分裂&quot;, &quot;美杜莎法袍&quot;]</span><br><span class=\"line\">    li= index + &quot;:&quot; + num</span><br></pre></td></tr></table></figure>\n<p>同时，也允许获取键值</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul</span><br><span class=\"line\">  each num, index in &#123;1:&quot;祖卡&quot;, 2:&quot;分裂&quot;, 3:&quot;美杜莎法袍&quot;&#125;</span><br><span class=\"line\">    li= index + &quot;:&quot; + num</span><br></pre></td></tr></table></figure>\n<p>while 循环<br>利用 while 创建一个循环</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- var i = 0</span><br><span class=\"line\">ul</span><br><span class=\"line\">  while i &lt; 4</span><br><span class=\"line\">    li= i++</span><br></pre></td></tr></table></figure>\n<h2 id=\"混入\"><a href=\"#混入\" class=\"headerlink\" title=\"混入\"></a>混入</h2><p>混用允许你在pug中重复使用一整个代码块的方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//-定义</span><br><span class=\"line\">mixin list</span><br><span class=\"line\">  ul </span><br><span class=\"line\">    li a</span><br><span class=\"line\">    li b</span><br><span class=\"line\">  p lioMessy</span><br><span class=\"line\">//- 使用</span><br><span class=\"line\">+list</span><br><span class=\"line\">p useItAgain</span><br><span class=\"line\">+list</span><br></pre></td></tr></table></figure>\n<p>允许传递函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mixin brofk(num)</span><br><span class=\"line\">  li.fk= &quot;fk&quot; + num</span><br><span class=\"line\">ul</span><br><span class=\"line\">  +brofk&#123;1&#125;</span><br><span class=\"line\">  +brofk(996)</span><br><span class=\"line\">  +brofk(114514)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h1><p>由于学业等问题，本文章并未写完。<br>本文章将会在1-2天内写完</p>\n<p>现在，你懂了吗？</p>\n","categories":["科技与狠活"],"tags":["pug","语言"]},{"title":"完善 Hexo 其他功能","url":"http://toad114514.github.io/2024/04/30/hexo-refine/","content":"<div class=\"note info simple\"><p>Hexo 博客建站一条龙 系列<br><a href=\"https://toad114514.github.io/2023/08/18/hexo-dep/\">Hexo 部署</a><br><a href=\"https://toad114514.github.io/2024/04/30/hexo-refine/\">Hexo 其他功能</a></p>\n</div>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>上次我成功的在 Termux 安装了 Hexo。<br><strong>本次我们将完善 Hexo 的其他功能</strong>。</p>\n<p>记得先cd到你博客的路径</p>\n<h1 id=\"网站地图\"><a href=\"#网站地图\" class=\"headerlink\" title=\"网站地图\"></a>网站地图</h1><p>安装 hexo-generator-sitemap 插件</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">hexo-generator-sitemap</span> <span class=\"string\">--save</span></span><br></pre></td></tr></table></figure>\n<p>然后部署到网站</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">hexo</span> <span class=\"string\">clean</span></span><br><span class=\"line\"><span class=\"string\">hexo</span> <span class=\"string\">g</span></span><br></pre></td></tr></table></figure>\n<p>此时可以在pubilc文件夹里找到 sitemap.xml，这样就创建完成了</p>\n<h1 id=\"SEO-自动提交\"><a href=\"#SEO-自动提交\" class=\"headerlink\" title=\"SEO 自动提交\"></a>SEO 自动提交</h1><p>安装 hexo-seo-autopush 插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-seo-autopush --save</span><br></pre></td></tr></table></figure>\n<p>打开 _config.yml 文件并加入如下代码</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">hexo_seo_autopush:</span></span><br><span class=\"line\">  <span class=\"attr\">cron:</span> <span class=\"number\">0</span> <span class=\"number\">4</span> <span class=\"string\">*</span> <span class=\"string\">*</span> <span class=\"string\">*</span></span><br><span class=\"line\">  <span class=\"comment\"># 百度提交配置</span></span><br><span class=\"line\">  <span class=\"attr\">baidu:</span></span><br><span class=\"line\">    <span class=\"comment\"># enable 开启关闭推送</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># 可选 创建日期(created)|更新日期(updated)</span></span><br><span class=\"line\">    <span class=\"attr\">date:</span> <span class=\"string\">created</span></span><br><span class=\"line\">    <span class=\"comment\"># 每次提交 &lt;count&gt; 篇文章，建议 10，0为全部提交</span></span><br><span class=\"line\">    <span class=\"attr\">count:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"comment\"># Bing 提交配置</span></span><br><span class=\"line\">  <span class=\"comment\"># 与百度提交配置注释一致</span></span><br><span class=\"line\">  <span class=\"attr\">bing:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">date:</span> <span class=\"string\">created</span></span><br><span class=\"line\">    <span class=\"attr\">count:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"comment\"># 谷歌提交配置</span></span><br><span class=\"line\">  <span class=\"comment\"># 与百度提交配置注释一致</span></span><br><span class=\"line\">  <span class=\"attr\">google:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">date:</span> <span class=\"string\">created</span></span><br><span class=\"line\">    <span class=\"attr\">count:</span> <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n<p>根据注释<strong>进行修改</strong></p>\n<p>由于生成的 actions 存放于博客根目录的 .github 文件夹里，属于隐藏文件夹，所以需要新增 ignore_hidden 配置</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/&lt;username&gt;/&lt;project&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">gh-pages</span></span><br><span class=\"line\">  <span class=\"attr\">ignore_hidden:</span> <span class=\"literal\">false</span> <span class=\"comment\"># 将隐藏文件也上传到 github 上</span></span><br></pre></td></tr></table></figure>\n\n<p>此处使用 Bing 推送。其他请看仓库 <a href=\"https://github.com/Lete114/Hexo-SEO-AutoPush\">hexo-seo-autopush</a><br>打开 <a href=\"https://www.bing.com/webmasters/home\">Bing 站长平台</a><br>接着点击右上角头像 -&gt; 旁边齿轮<br>依次点击 API 访问 -&gt; API 密钥 获得 API 密钥并复制<br><img src=\"https://user-images.githubusercontent.com/48512251/162598122-120851b9-65c3-42ee-b847-dbc5bc06abcd.png\" alt=\"操作\"><br>打开 Github -&gt; 你网站的仓库 -&gt; Setttings -&gt; Actions -&gt; 右上角 New repository secret 新建 Secret 字段<br>Name 字段输入 bing_apikey<br>Value 输入在 Bing 站长平台复制的 API 密钥</p>\n<p>部署 hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>验证只需 Star 您的仓库然后取消便可以成功启用<br>查看 Actions 查看结果</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 必应的</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;d&quot;</span><span class=\"punctuation\">:</span><span class=\"literal\"><span class=\"keyword\">null</span></span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>返回信息包含上面信息即可成功</p>\n","categories":["技术"],"tags":["博客","Hexo","科技"]},{"title":"元气骑士前传 S1 赛季 爬塔排行榜","url":"http://toad114514.github.io/2024/04/28/qz-s1-end-pt-md/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>你个写博客的怎么还写游戏是吧((<br>在元气骑士前传里，一个职业的强度，只有爬塔排行榜才能决定其强度。<br><strong>在这前传更新s2赛季的前 8 个小时前，赶紧炸裂写了个文章好吧</strong><br>本文章让你清楚什么才是现在所在的前传环境里最强</p>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><p>除前三名外，实时段位未显示的，则与下方配置等同<br>黄金 100 白银 60 精铜 30 青铜 10</p>\n<h1 id=\"排名\"><a href=\"#排名\" class=\"headerlink\" title=\"排名\"></a>排名</h1><h2 id=\"第-8-名\"><a href=\"#第-8-名\" class=\"headerlink\" title=\"第 8 名\"></a>第 8 名</h2><p><strong>风暴刺客</strong><br>最高爬塔 1200 层<br>实时段位<br><em>红玉</em> 204 层</p>\n<h2 id=\"第-7-名\"><a href=\"#第-7-名\" class=\"headerlink\" title=\"第 7 名\"></a>第 7 名</h2><p><strong>烈焰法师</strong><br>最高爬塔 1235 层<br>实时段位<br><em>红玉</em> 239 层</p>\n<h2 id=\"第-6-名\"><a href=\"#第-6-名\" class=\"headerlink\" title=\"第 6 名\"></a>第 6 名</h2><p><strong>游侠</strong><br>最高爬塔 1301 层<br>实时段位<br><em>红玉</em> 218 层</p>\n<h2 id=\"第-5-名\"><a href=\"#第-5-名\" class=\"headerlink\" title=\"第 5 名\"></a>第 5 名</h2><p><strong>领主</strong><br>最高爬塔 1400 层<br>实时段位<br><em>红玉</em> 211 层</p>\n<h2 id=\"第-4-名\"><a href=\"#第-4-名\" class=\"headerlink\" title=\"第 4 名\"></a>第 4 名</h2><p><strong>忍者</strong><br>最高爬塔 1555 层<br>实时段位<br><em>红玉</em> 295 层<br><em>黄金</em> 141 层<br><em>白银</em> 71 层<br><em>精铜</em> 35 层</p>\n<h2 id=\"第-3-名\"><a href=\"#第-3-名\" class=\"headerlink\" title=\"第 3 名\"></a>第 3 名</h2><p>前三大佬<br><strong>堡垒</strong><br>最高爬塔 1801 层<br>实时段位<br><em>红玉</em> 218 层<br><em>黄金</em> 100 层<br><em>白银</em> 60 层<br><em>精铜</em> 30 层<br><em>青铜</em> 10 层</p>\n<h2 id=\"第-2-名\"><a href=\"#第-2-名\" class=\"headerlink\" title=\"第 2 名\"></a>第 2 名</h2><p><strong>荒野战士</strong><br>最高爬塔 2112 层<br>实时段位<br><em>红玉</em> 309 层<br><em>黄金</em> 141 层<br><em>白银</em> 64 层<br><em>精铜</em> 30 层<br><em>青铜</em> 10 层</p>\n<h2 id=\"第-1-名\"><a href=\"#第-1-名\" class=\"headerlink\" title=\"第 1 名\"></a>第 1 名</h2><p>唯一真神 <strong>德鲁伊</strong><br>最高爬塔 4791 层<br>实时段位<br><em>红玉</em> 418 层<br><em>黄金</em> 274 层<br><em>白银</em> 148 层<br><em>精铜</em> 78 层<br><em>青铜</em> 30 层</p>\n","categories":["游戏"],"tags":["游戏","元气骑士前传"]},{"title":"新的 Toads Blog","url":"http://toad114514.github.io/2024/04/24/new-blog/","content":"<h1 id=\"三个月不见终于变力\"><a href=\"#三个月不见终于变力\" class=\"headerlink\" title=\"三个月不见终于变力\"></a>三个月不见终于变力</h1><p>本次的 Toads Blog 直接使用 butterfly 为主题。原因是fluid主题基本上不能很好的在termu上。</p>\n<h1 id=\"很多种看我的方式\"><a href=\"#很多种看我的方式\" class=\"headerlink\" title=\"很多种看我的方式\"></a>很多种看我的方式</h1><p>全平台同名toad114514，除开下面所列</p>\n<ul>\n<li>B站 狗头均</li>\n<li>抖音 保护狗头de阿巴阿巴鸭<br>当然还有我的 <a href=\"https://github.com/toad114514\">Github</a> 和 <a href=\"https://gitee.com/toadstool\">Gitee</a></li>\n</ul>\n<h1 id=\"尽量更新\"><a href=\"#尽量更新\" class=\"headerlink\" title=\"尽量更新\"></a>尽量更新</h1><p>基本保持每周一更，有学业的好吧，且不一定是科技类文章，还有可能是游戏工略等文章。暑假可以多更一点点。</p>\n<h1 id=\"说完了-睡觉\"><a href=\"#说完了-睡觉\" class=\"headerlink\" title=\"说完了 睡觉\"></a>说完了 睡觉</h1><p>sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…</p>\n","categories":[],"tags":["Hexo","科技"]},{"title":"Termux 搭建 nginx 服务器","url":"http://toad114514.github.io/2024/01/12/termux-nginx/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><img src=\"https://img2.imgtp.com/2024/04/24/gcb8msuW.png\" alt=\"菜鸟教程对 Nginx的描述\"><br>nginx的风还是吹到了，<strong>Termux!<strong>不是Termux没明星，而是</strong>Termux全明星</strong>“”(指装irc等服务器和python等)!不是Termux不出手，而是出手<strong>没对手</strong>！Termux大舞台，有才你就来(</p>\n<p>今天教你们怎么安装<strong>Ngnix</strong>！<br>不是ksweb用不起，而是真正的nginx有性价比！原先无root也可以使用的ksweb由于自由度有点差(不能装插件上去)，所以真正的nginx才能真正体验到nginx！</p>\n<p><img src=\"https://img2.imgtp.com/2024/04/24/Phd2jLC7.png\" alt=\"termux,启动！\"><br><img src=\"https://img2.imgtp.com/2024/04/24/SX26KvI9.png\" alt=\"作者手机配置及proot环境配置\"><br>以后都有这台”战神A5”来部署一些东西了。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"更简便的安装方法\"><a href=\"#更简便的安装方法\" class=\"headerlink\" title=\"更简便的安装方法\"></a>更简便的安装方法</h2><p>已经有<strong>更好更快的安装方法了</strong>，如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install gcc libpcre3-dev zlib1g-dev openssl nginx</span><br></pre></td></tr></table></figure>\n<p>本方法<strong>安装速度快但版本较老且稳定性未知</strong>，请<strong>谨慎使用</strong><br>使用 apt 安装的 nginx 后：<br><strong>html 文件存放于 &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html 里</strong><br><strong>配置存储文件放于 &#x2F;etc&#x2F;nginx&#x2F; 里的 nginx.conf</strong></p>\n<h2 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h2><p>准备一些依赖，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install gcc libpcre3-dev zlib1g-dev openssl</span><br></pre></td></tr></table></figure>\n<p>先装一些依赖，没有没有怎么部署nginx？<br>gcc是运行环境，pcre给nginx提供正则表达式，zlib依赖解压包<br>pcre用于http的正则表达式里<br><strong>别忘了你的openssl！</strong></p>\n<h2 id=\"下载nginx\"><a href=\"#下载nginx\" class=\"headerlink\" title=\"下载nginx\"></a>下载nginx</h2><p><strong>这一步我们一步完成，要慢慢来的请放Sweet Dreams，完成后再停止播放</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> /usr/local/nginx</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/nginx</span><br><span class=\"line\">wget https://nginx.org/download/nginx-1.24.0.tar.gz</span><br><span class=\"line\">tar -zxvf nginx-1.24.0.tar.gz</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装时间！\"><a href=\"#安装时间！\" class=\"headerlink\" title=\"安装时间！\"></a>安装时间！</h2><p>由于tar把文件解压到了nginx-1.24.0文件夹，所以<strong>要先进行cd</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.24.0</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<p>安装阶段，我的手机非常吃力，<strong>战神A5不行力</strong><br>也是特别的卡，我甚至一边装nginx一边听音乐<br>由于make原因，<strong>我tnnd也没办法</strong><br><img src=\"https://img2.imgtp.com/2024/04/24/gJ0xAa4t.png\" alt=\"完成 configure 后的终端\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">objs/src/http/modules/ngx_http_upstream_random_module.o \\</span><br><span class=\"line\">objs/src/http/modules/ngx_http_upstream_keepalive_module.o \\</span><br><span class=\"line\">objs/src/http/modules/ngx_http_upstream_zone_module.o \\</span><br><span class=\"line\">objs/ngx_modules.o \\</span><br><span class=\"line\">-lcrypt -lpcre2-8 -lz \\</span><br><span class=\"line\">-Wl,-E</span><br><span class=\"line\">sed -e <span class=\"string\">&quot;s|%%PREFIX%%|/usr/local/nginx|&quot;</span> \\</span><br><span class=\"line\">        -e <span class=\"string\">&quot;s|%%PID_PATH%%|/usr/local/nginx/logs/nginx.pid|&quot;</span> \\</span><br><span class=\"line\">        -e <span class=\"string\">&quot;s|%%CONF_PATH%%|/usr/local/nginx/conf/nginx.conf|&quot;</span> \\</span><br><span class=\"line\">        -e <span class=\"string\">&quot;s|%%ERROR_LOG_PATH%%|/usr/local/nginx/logs/error.log|&quot;</span> \\</span><br><span class=\"line\">        &lt; man/nginx.8 &gt; objs/nginx.8</span><br><span class=\"line\">make[1]: 离开目录“/usr/local/nginx/nginx-1.24.0”</span><br><span class=\"line\">root@localhost:/usr/local/nginx/nginx-1.24.0<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<p>make指令用了<strong>好几分钟力</strong>，还有make install，草<br>还好make install使用时间不多</p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"配置工具\"><a href=\"#配置工具\" class=\"headerlink\" title=\"配置工具\"></a>配置工具</h2><p>我们需要：</p>\n<ul>\n<li>一个终端进程</li>\n<li>Vim&#x2F;Vi&#x2F;Nano，没有就装</li>\n</ul>\n<h2 id=\"配置nginx\"><a href=\"#配置nginx\" class=\"headerlink\" title=\"配置nginx\"></a>配置nginx</h2><p>去吧，我的<em>Vim</em>！</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/local/nginx/conf/nginx.conf</span><br><span class=\"line\"><span class=\"comment\"># 如果前面使用 apt 安装了 nginx，请输入下面代码</span></span><br><span class=\"line\">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img2.imgtp.com/2024/04/24/MkdeYFhD.png\" alt=\"ngnx.conf\"><br>配置只需修改 listen 项和 server_name 即可。<br><strong>listen 输入要监听的端口，该项在部分机型必须修改，否则Permission denied</strong><br><strong>server_name 输入本机IP地址，可以不用改</strong><br>本机IP地址可以在 设置-&gt;WLAN-&gt;已连接WLAN最右边信息&#x2F;更多-&gt;IP地址 找到</p>\n<h1 id=\"Nginx，启动！\"><a href=\"#Nginx，启动！\" class=\"headerlink\" title=\"Nginx，启动！\"></a>Nginx，启动！</h1><h2 id=\"启动它\"><a href=\"#启动它\" class=\"headerlink\" title=\"启动它\"></a>启动它</h2><p>输入以下代码来 Nginx，启动！</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/nginx/sbin</span><br><span class=\"line\">./nginx</span><br><span class=\"line\"><span class=\"comment\"># 如果前面使用 apt 安装了 nginx，请使用 init.d 方式启动</span></span><br><span class=\"line\">/etc/init.d/nginx start</span><br></pre></td></tr></table></figure>\n<p>麻烦可以做个sh脚本然后直接放在自启动里</p>\n<p><strong>让我们来检查 Nginx 是否正常启动</strong><br>检查进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@localhost:/usr/local/nginx/sbin<span class=\"comment\"># ps -ef | grep nginx</span></span><br><span class=\"line\">10442    20535     1  0  2020 ?        00:00:00 nginx: master process ./nginx</span><br><span class=\"line\">10442    20536 20535  0  2020 ?        00:00:00 nginx: worker process</span><br><span class=\"line\">10442    20731  6689  0  2020 stdin    00:00:00 grep --color=auto nginx</span><br><span class=\"line\">root@localhost:/usr/local/nginx/sbin<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<p>浏览器<br>输入 ip或localhost+端口号 访问<br><img src=\"https://img2.imgtp.com/2024/04/24/nlp1QBW2.png\" alt=\"结果如图\"><br>Edge还给我调了个深色模式666</p>\n<h2 id=\"关闭Nginx\"><a href=\"#关闭Nginx\" class=\"headerlink\" title=\"关闭Nginx\"></a>关闭Nginx</h2><p>给Nginx进程一个黑手就行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkill -9 nginx</span><br><span class=\"line\"><span class=\"comment\"># 如果前面使用 apt 安装了 nginx，请用下方代码关闭 nginx</span></span><br><span class=\"line\">/etc/init.d/nginx stop</span><br></pre></td></tr></table></figure>\n<h1 id=\"补充说明\"><a href=\"#补充说明\" class=\"headerlink\" title=\"补充说明\"></a>补充说明</h1><h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>在Termux上安装并部署nginx与真linux的步骤基本一致，这是好的。但是像我这种…笑聋搞痛450和有点lj的配置在安装时确实有点慢…<br>虽然安装较慢，但是启动速度快，和隔壁ksweb有得一拼。<br>你如果要有更多的自由性，那么在termux安装nginx是最流畅最好的免root方案。但如果你不想折腾，那么集成式的ksweb更适合你。<br>写完了，可以睡觉了(明天星期五，喜)<br><img src=\"https://www.freeimg.cn/i/2024/01/12/65a020d54a40f.gif\" alt=\"摸李这停.gif\"></p>\n","categories":["科技与狠活"],"tags":["服务器","Termux","Nginx"]},{"title":"Termux 安装 Hexo 踩的dark坑","url":"http://toad114514.github.io/2024/01/03/ken/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>当我尝试在 Termux 中利用 Ubuntu22.04.3 发行版去安装 Hexo 时，我已经踩了非常多的坑。<br>我自己比较早的时候就已经试过了，把整个hexo的工作目录复制下来然后放在termux里面。没成功。<br>现在已经成功了，而且非常正常的在我的手机上运行了。<br>接下来我就要说说这tm坑到底有多少</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>其实跟<a href=\"https://toad114514.github.io/2023/08/18/hexo-dep/\">如何使用 Github Pages + Hexo 搭建博客服务器</a>差不多，但是要<strong>先在Termux安装一个装有Proot容器的Linux发行版</strong>，然后再在容器上安装npm、nodejs、git和hexo。当然 Termux 本体的终端也可以运行 npm 等程序，但不过将大大减少稳定性，且还有可能会整出太多的bugs。</p>\n<h2 id=\"安装-Termux\"><a href=\"#安装-Termux\" class=\"headerlink\" title=\"安装 Termux\"></a>安装 Termux</h2><p>先安装 <a href=\"https://github.com/termux/termux-app\">Termux</a> ，点击”termux”后安装最新发行版</p>\n<h2 id=\"安装-proot-容器\"><a href=\"#安装-proot-容器\" class=\"headerlink\" title=\"安装 proot 容器\"></a>安装 proot 容器</h2><p>进入 Termux，等待终端程序安装好后，进入终端，依次输入:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install proot-distro <span class=\"comment\"># 安装 proot-dsitro</span></span><br><span class=\"line\">proot-distro install ubuntu <span class=\"comment\"># 安装 ubuntu 在 proot 容器内</span></span><br><span class=\"line\">proot-distro login ubuntu <span class=\"comment\"># 登陆 proot 容器内的 ubuntu</span></span><br></pre></td></tr></table></figure>\n<p>此处使用的 proot-distro 方法后期安装比较不稳定，建议使用tmoe安装方案。<br>这样就可以进入ubuntu了。</p>\n<h2 id=\"后期补充\"><a href=\"#后期补充\" class=\"headerlink\" title=\"后期补充\"></a>后期补充</h2><p>不需要上面安装proot，只需要安装完成termux后：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">termux-setup-storage <span class=\"comment\"># 获取外部存储访问权限</span></span><br><span class=\"line\">termux-change-repo <span class=\"comment\"># 换源，使用 Tsinghua 或 BFSU</span></span><br><span class=\"line\">pkg update &amp;&amp; pkg upgrade -y <span class=\"comment\"># 升级自带软件包</span></span><br><span class=\"line\">pkg install nodejs-lts vim git -y <span class=\"comment\"># 安装 nodejs vim 和 git</span></span><br><span class=\"line\">npm config <span class=\"built_in\">set</span> registry http://registry.npm.taobao.org <span class=\"comment\"># 切 npm 镜像到淘宝源</span></span><br><span class=\"line\"><span class=\"comment\"># 然后你的环境就部署完成了牢底，可以滚到 https://toad114514.github.io/2023/08/18/hexo-dep/ 去安装 hexo 了</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"安装-hexo\"><a href=\"#安装-hexo\" class=\"headerlink\" title=\"安装 hexo\"></a>安装 hexo</h2><p>接下来的操作和 <a href=\"https://toad114514.github.io/2023/08/18/hexo-dep/\">如何使用 Github Pages + Hexo 搭建博客服务器</a>一致。</p>\n<h1 id=\"坑\"><a href=\"#坑\" class=\"headerlink\" title=\"坑\"></a>坑</h1><h2 id=\"ARM64-下《感人》的运行速度\"><a href=\"#ARM64-下《感人》的运行速度\" class=\"headerlink\" title=\"ARM64 下《感人》的运行速度\"></a>ARM64 下《感人》的运行速度</h2><p>要想和上面的图片输出结果一样，就是构建静态页面+上传到Github。<br>根据不知道哪位兄弟记载，对比了hexo和hugo两位生成静态页面的情况。hexo用时十几分钟，<em>这是在 真机 上的数据，且都是文章很多的</em>。<strong>如果是 Proot 容器，更慢</strong> <strong>(孩子们我不再proot上搞了)</strong><br>而且，如果遇到那种文章多的博客，<del>那么创建静态页面时长将可以够我把我的三大主科全部做完了(</del>我连nodevideo的导出时间我都能忍，还区区你这几分钟？</p>\n<h2 id=\"主题超级不兼容\"><a href=\"#主题超级不兼容\" class=\"headerlink\" title=\"主题超级不兼容\"></a>主题超级不兼容</h2><p>我已经踩了两个主题的坑了，给大家列出来罢<br>目前 landscape 疑似无问题<br>基本都是<strong>主题没事，我环境出事了</strong></p>\n<h3 id=\"fluid-主题\"><a href=\"#fluid-主题\" class=\"headerlink\" title=\"fluid 主题\"></a>fluid 主题</h3><p>有一些主题(包括现在用的fluid)，我本来想把主题文件放在themes里面，<strong>但是之后立马报错，不能部署不能创建。</strong>错误大概如下(英文地方已经翻译)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Warn Fluid 推荐你使用推荐设置 (地址)</span><br><span class=\"line\">ERR 有一个地方出现了错误，请查(地址)去修复该错误</span><br><span class=\"line\">错误于 /root/blog/node_modules/@abobe/css-tools/dist/index.mjs</span><br><span class=\"line\">不知道哪一行  option?.<span class=\"built_in\">source</span>), &#125;</span><br><span class=\"line\">错误 那个<span class=\"string\">&quot;.&quot;</span>有错误</span><br></pre></td></tr></table></figure>\n<p>我以为是这个依赖包的问题，后来不是。这是概率性问题。</p>\n<h3 id=\"butterfly-主题\"><a href=\"#butterfly-主题\" class=\"headerlink\" title=\"butterfly 主题\"></a>butterfly 主题</h3><p>本身直接安装后，不进行任何配置就没问题。<br>但<strong>不能修改如下数据</strong></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># wordcount (字數統計)</span></span><br><span class=\"line\"><span class=\"comment\"># see https://butterfly.js.org/posts/ceeb73f/#字數統計                wordcount:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span> <span class=\"comment\"># 这里不能修改为 true</span></span><br><span class=\"line\">  <span class=\"attr\">post_wordcount:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">min2read:</span> <span class=\"literal\">false</span> </span><br><span class=\"line\">  <span class=\"attr\">total_wordcount:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://toad114514.github.io/img/2404/ken-1.png\" alt=\"修改后报错如上\"><br>以及</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">card_webinfo:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span> <span class=\"comment\"># 这里不能改为 true</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://toad114514.github.io/img/2404/ken-2.png\" alt=\"修改后报错如上\"><br>虽然可以继续创建静态页面，<strong>但是本地预览和部署后主页会变空白</strong></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>可以是可是，但是又不可以。这玩意我踩了一堆坑才踩出来的经验。才在termux上面成功的运行了hexo。<br><strong>如果你有能力，建议直接在电脑上安装好了</strong>(像我这样没钱或者叫我爸妈买台电脑肯定藤条的或皮带的就别逝了罢)</p>\n<h1 id=\"Hexo-全文章链接\"><a href=\"#Hexo-全文章链接\" class=\"headerlink\" title=\"Hexo 全文章链接\"></a>Hexo 全文章链接</h1><div class=\"note info simple\"><p>Hexo 博客建站一条龙 系列<br><a href=\"https://toad114514.github.io/2023/08/18/hexo-dep/\">Hexo 部署</a><br><a href=\"https://toad114514.github.io/2024/04/30/hexo-refine/\">Hexo 其他功能</a></p>\n</div>\n","categories":["科技"],"tags":["termux","hexo"]},{"title":"张浩事情速览","url":"http://toad114514.github.io/2023/08/19/zh-1/","content":"<h1 id=\"张浩黑历史（确信\"><a href=\"#张浩黑历史（确信\" class=\"headerlink\" title=\"张浩黑历史（确信\"></a>张浩黑历史（确信</h1><p><strong>本文章的部分图片已失效。现在正在补图片</strong><br>让我们从上到下，浏览这些张浩的事情罢</p>\n<h2 id=\"2022年\"><a href=\"#2022年\" class=\"headerlink\" title=\"2022年\"></a>2022年</h2><p>11月左右，偷张浩penis出现<br><br>11月左右，张浩楼道崩溃。<br><br>12月初，张浩和王老虎打架<br><br>12月左右，张浩永远都不来了<br><br>12月底，张浩被3人围圈偷penis<br><br><img src=\"https://img1.imgtp.com/2023/08/19/670WvzAb.jpg\" alt=\"张浩看李这坤\"><br>12月底，张浩大摇大摆<br><br>12月底，张浩和如真瑞打爆小黑子被罚站<br><br><img src=\"https://img1.imgtp.com/2023/08/19/kHYlHXu5.jpg\" alt=\"张浩和如真瑞罚站\"></p>\n<h2 id=\"2023年\"><a href=\"#2023年\" class=\"headerlink\" title=\"2023年\"></a>2023年</h2><p>1月初，张浩Pages诞生<br><br>2月到3月多，张浩沉迷与玩手机<br><br>5月多，张浩帮助张郑与打牌<br><br><img src=\"https://img1.imgtp.com/2023/08/19/187JVuqv.jpg\" alt=\"张浩帮助张郑与打牌\"><br>5月左右，张浩参加里这停马拉松<br><img src=\"https://img1.imgtp.com/2023/08/19/b57pBJjq.jpg\" alt=\"张浩参加马拉松\"><br>5月左右，张浩把李这坤鸟语花香了<br><img src=\"https://img1.imgtp.com/2023/08/19/OA4LPuCf.jpg\" alt=\"被鸟语花香的李这坤和另外两位\"><br>5月中旬，张浩叛变，成为小黑子的一员<br><br>5月中旬，张浩在天悦湾附近休息<br><img src=\"https://img1.imgtp.com/2023/08/19/YELY4DDU.jpg\" alt=\"张浩和括号哥休息\"><br>5月中旬，张浩和两位大佬打牌<br><img src=\"https://img1.imgtp.com/2023/08/19/ozNT7IzP.jpg\" alt=\"张浩想不共牌，但是被大佬搞爆的张浩\"><br>5月底，张浩和如真瑞阻止趁着类偷李这坤penis<br><img src=\"https://img2.imgtp.com/2024/04/24/u0K0QRHt.png\" alt=\"张浩被如真瑞的答案而感到震惊\"><br>6月1号，张浩叛变<br><img src=\"https://img2.imgtp.com/2024/04/24/Fw351dQl.png\" alt=\"叛变的张浩和他的朋友\"><br>6月1号，张浩被吴子轩称为勇士总冠军<br><br>6月3号，张浩被李这坤偷penis<br><img src=\"https://img2.imgtp.com/2024/04/24/8D3Q3vqr.png\" alt=\"被偷penis的张浩\"><br>6月22号，张浩和李这坤一起找李这坤朋友<br><img src=\"https://img1.imgtp.com/2023/08/19/vGuI7dRT.jpg\" alt=\"张浩骑车\"><br>6月底，张浩和李这坤驱赶小孩回家<br><img src=\"https://img1.imgtp.com/2023/08/19/vuzm0E6o.jpg\" alt=\"被驱赶的其中一位，名闪电马老（粤语）\"><br>7月3号，张浩和李括号阻止陈这类偷李这坤penis<br><br>7月初，张浩给李这坤学习猴子<br><img src=\"https://img1.imgtp.com/2023/08/19/xLJM88vp.jpg\" alt=\"张浩：Near and Monkey to Show and Learn\"></p>\n","categories":["张浩"],"tags":["张浩"]},{"title":"如何使用 Github Pages + Hexo 搭建博客服务器","url":"http://toad114514.github.io/2023/08/18/hexo-dep/","content":"<div class=\"note info simple\"><p>Hexo 博客建站一条龙 系列<br><a href=\"https://toad114514.github.io/2023/08/18/hexo-dep/\">Hexo 部署</a><br><a href=\"https://toad114514.github.io/2024/04/30/hexo-refine/\">Hexo 其他功能</a></p>\n</div>\n<h1 id=\"前情提要\"><a href=\"#前情提要\" class=\"headerlink\" title=\"前情提要\"></a>前情提要</h1><p>上次在本地搞了搞 Zblog，现在我有github账号，也有了一台临时电脑来部署东西。也是非常的nb好吧</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><ul>\n<li>github账号</li>\n<li>一台电脑</li>\n</ul>\n<h1 id=\"注册或登录github\"><a href=\"#注册或登录github\" class=\"headerlink\" title=\"注册或登录github\"></a>注册或登录github</h1><p>注册一个github账号，要准备邮箱，不要电话号码。没邮箱和SIM卡的可以去注册outlook，有SIM卡就去注册163邮箱。<br><img src=\"https://img1.imgtp.com/2023/08/19/Hwxp3jGz.png\" alt=\"github 创建仓库\"><br>然后创建仓库，点击”New repository”，Repository的框里必须要用username.github.io，username是你的github账号名。然后点击创建即可。</p>\n<p>一般情况下，仓库在创建后就会启用网站，所以这是第一步</p>\n<h1 id=\"本地部署Hexo\"><a href=\"#本地部署Hexo\" class=\"headerlink\" title=\"本地部署Hexo\"></a>本地部署Hexo</h1><h2 id=\"安装hexo所需要的环境\"><a href=\"#安装hexo所需要的环境\" class=\"headerlink\" title=\"安装hexo所需要的环境\"></a>安装hexo所需要的环境</h2><p>去下载并安装nodejs和git。git用于与仓库通信，可以把本地发送到github仓库。nodejs则用来部署hexo。<br><br>安装完成后，先进行检查。打开 Windows powershell 或者 cmd（windows+R打开运行，输入cmd在框里然后回车）里输入以下指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nodejs -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<p>依次输入以上这些指令，如果出现了版本号就证明安装成功。如果其中一个输入后报错或者全部报错，就要重装了。</p>\n<h2 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h2><p>在安装之前，先创建一个hexo所存放的文件夹，以后写文章什么的都要这个文件夹。名字可以起blog，然后按住shift右键，点击在此处打开命令行窗口，如果没有，请点击在此处打开Powershell窗口。然后输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>这一步需要很多时间，请耐心等待。安装完成后就要开始初始化hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog //这里的blog仅作用于blog里面的blog文件夹</span><br></pre></td></tr></table></figure>\n<p>如果没有出现任何错误，那么恭喜你可能完成了本地安装！</p>\n<h2 id=\"验证安装\"><a href=\"#验证安装\" class=\"headerlink\" title=\"验证安装\"></a>验证安装</h2><p>输入以下命令进行验证：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new test_post</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>上面命令会在你的博客上创建一个文章用于检测，然后在本地启动服务器进行测试。现在尝试用浏览器访问localhost:4000试试？如果可以正常显示且看见了一个标题为test_post的文章，证明你真的完成了安装hexo！</p>\n<h1 id=\"初探-Hexo\"><a href=\"#初探-Hexo\" class=\"headerlink\" title=\"初探 Hexo\"></a>初探 Hexo</h1><h2 id=\"学习常用命令\"><a href=\"#学习常用命令\" class=\"headerlink\" title=\"学习常用命令\"></a>学习常用命令</h2><p>接下来我们会教你一些hexo常用指令。<br>npm install hexo-cli -g –安装hexo<br>npm update hexo-cli -g –升级<br>hexo init blog –初始化hexo<br>简写命令<br>hexo n &#x3D;&#x3D; hexo new “标题” –在博客上创建文章<br>hexo g &#x3D;&#x3D; hexo generate –创建静态页面<br>hexo s &#x3D;&#x3D; hexo server –启动本地浏览<br>hexo d &#x3D;&#x3D; hexo deploy –部署到远程仓库（指你的github仓库）<br>其他<br>hexo server -s –静态模式<br>hexo server -p 5000 –更改端口，如果发现使用本地预览时出现错误，可以尝试修改端口<br>hexo server -i 192.168.1.1 –修改 IP</p>\n<h2 id=\"理解配置文件\"><a href=\"#理解配置文件\" class=\"headerlink\" title=\"理解配置文件\"></a>理解配置文件</h2><p>在hexo中，配置文件有两种。在hexo根目录里面的_config.yml是网站配置文件。在根目录里面有个theme文件夹，打开后里面是一些文件夹，随便点开一个，里面也有一个_config.yml，这就是主题配置文件</p>\n<h2 id=\"配置-Hexo\"><a href=\"#配置-Hexo\" class=\"headerlink\" title=\"配置 Hexo\"></a>配置 Hexo</h2><p>，找到_config.yml，我们接下来要对他们进行一点点修改。根据下面注释进行修改</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Toads</span> <span class=\"string\">Blog</span> <span class=\"string\">//博客标题</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"string\">&#x27;技术博客、文件分享和张浩&#x27;</span> <span class=\"string\">//博客副标题</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">&#x27;一个一个技术博客&#x27;</span> <span class=\"string\">//博客简介</span></span><br><span class=\"line\"><span class=\"attr\">keywords:</span> <span class=\"string\">Toad114514</span> <span class=\"string\">//博客关键词</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">Toad114514</span> <span class=\"string\">//博客作者</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">&#x27;zh-CN&#x27;</span> <span class=\"string\">//Hexo默认语言，请把它修改成&quot;zh-CN&quot;才能把你的博客变成简体中文</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"string\">&#x27;Asia/Shanghai&#x27;</span> <span class=\"string\">//Hexo默认时区，请修改成&quot;Asia/Shanghai&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://username.github.io/</span> <span class=\"string\">//hexo默认网站主页，请修改成&quot;https://username.github.io&quot;，其中username是你的github名字</span></span><br></pre></td></tr></table></figure>\n<p>在_config.yml里面还有很多值，按道理来讲，这个文件可以修改大多数原生hexo的值。你可以根据 <a href=\"https://hexo.io/zh-cn/docs/configuration\">Hexo 官方文档</a>  的配置，根据需要进行修改。</p>\n<h1 id=\"与-Git-连接\"><a href=\"#与-Git-连接\" class=\"headerlink\" title=\"与 Git 连接\"></a>与 Git 连接</h1><h2 id=\"连接到-Github\"><a href=\"#连接到-Github\" class=\"headerlink\" title=\"连接到 Github\"></a>连接到 Github</h2><p>下载并安装git，这是 <a href=\"https://git-scm.com/download\">官方下载链接</a>。<br>打开git bash，然后进行配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;你注册的github名字&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;你注册github所用的邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n<p>生成一个ssh rsa密钥作为凭证</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;你注册github所用的邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n<p>执行后回车三次即可生成文件<br>然后找到生成的.ssh文件夹（放在了C:\\Users\\你电脑所登录的用户名，如果看不到就是被隐藏了），找到id_rsa.pub并使用记事本打开，再把里面的内容全部复制。<br><br>回到你的github账号，进入到 <a href=\"https://github.com/settings/keys\">Github SSH密钥管理</a> 链接里，点击 New SSH Key 添加一个ssh密钥<br><img src=\"https://img1.imgtp.com/2023/08/19/1Ozqm0r5.png\" alt=\"Github 添加 ssh 密钥\"><br><br>title随便写，key里面填写你刚复制的密钥，然后点击Add ssh key。这样就完成了。</p>\n<h2 id=\"验证连接\"><a href=\"#验证连接\" class=\"headerlink\" title=\"验证连接\"></a>验证连接</h2><p>打开 git bash，输入以下代码验证连接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh git@github.com</span><br></pre></td></tr></table></figure>\n<p>如果结果包含以下内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hi xxx! You<span class=\"string\">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>\n<p>那么证明你的git已经成功连接到了github</p>\n<h1 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h1><h2 id=\"配置连接\"><a href=\"#配置连接\" class=\"headerlink\" title=\"配置连接\"></a>配置连接</h2><p>来到网站根目录，找到_config.yml，并使用记事本打开，然后翻到最下面，然后把下面的代码写到最下面的地方：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">git@github.com:username/username.github.io.git</span> <span class=\"string\">//这里面的username改成你注册的github账号名</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"部署到-github\"><a href=\"#部署到-github\" class=\"headerlink\" title=\"部署到 github\"></a>部署到 github</h2><p>终于来到了最后一步！！！！！！！！！！你只需要执行以下代码，你的网站就可以部署成功了！</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save //安装git部署插件</span><br><span class=\"line\">hexo g //创建静态页面</span><br><span class=\"line\">hexo d //部署到github</span><br></pre></td></tr></table></figure>\n<p>这样就完成了！</p>\n<h1 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h1><p>完成之后，你可以用浏览器访问 username.github.io（username是你的github账号），如果成功了，那么你的博客就到此完成了！<br><br>先写到这吧，下次讲插件和主题</p>\n","categories":["科技"],"tags":["博客","Hexo"]},{"title":"如何把 Windows3.2 变得更强","url":"http://toad114514.github.io/2023/07/23/win32-nb/","content":"<p><img src=\"https://toad114514.github.io/img/2307/w31-2.jpg\" alt=\"2023-07-23_09-43-43.png\"></p>\n<p>如上图，这是我的 Windows3.2 截图。已安装了SB16声卡和24位显卡驱动。安装了常用软件（包括Office4.2、WPS97、Quicktime、Acrobat、Goldware等）。桌面使用CalmiraXP。背景图片来自SMWcentral，原先属于16M色深，经过Talking Icon的背景设置后可在24位显示器上显示。在使用的应用是微软早期的Media Player，张浩蹲坑图片显示基于Quicktime（张浩没只因）。 </p>\n<p>tnnd，说了这么多。<br>问我是如何做到这么nb的 Windows 3.2 呢？且听我慢慢细说 </p>\n<h3 id=\"安装-Windows3-2\"><a href=\"#安装-Windows3-2\" class=\"headerlink\" title=\"安装 Windows3.2\"></a>安装 Windows3.2</h3><p>首先要让 Windows3.2 变得更强，首先你得安装 Windows3.2<br>我们在 MagicDosbox 成功模拟了 Windows3.2（这大吊对我的手机不友好，随时随地闪退。闪退就打不开了）<br>先安装 MagicDosbox，然后根据提示完成操作。<br>接下来来到主界面，点击右边的加号。 </p>\n<p><img src=\"https://toad114514.github.io/img/2307/w31-3.jpg\" alt=\"设置图示\"></p>\n<p>在弹出的菜单里点击第一个。接下来填写标题，我这里写windows3.2，当然你也可以随便写。<br>写好标题之后，往下滑，给电脑扬声器打钩，并点击“声卡禁用”，然后在弹出的选项中选择 SB16 ，（配置声卡）就可以直接点击下面的勾了。<br>回到主页面，点击和你填写标题一样的选项进入Dosbox。<br>接下来和 Windows3.2 安装方法差不多，你可以去网上搜。但是 有关于磁盘操作及MS-DOS安装的步骤要跳过，因为Doxbox已经等同于MS-DOS。如果你偏要的话，后果自费。除非你是在VMware或virtualbox上安装，否则请跳过</p>\n<h3 id=\"安装声卡文件\"><a href=\"#安装声卡文件\" class=\"headerlink\" title=\"安装声卡文件\"></a>安装声卡文件</h3><p>对于 Doxbox 本身自带 SB16 声卡可模拟。但在 MagicDoxbox 上需要自行设置。<br>但我们已经在安装 Windows3.2 时就已经配置好了。所以接下来进入 Windows3.2。<br>打开主群组里的“控制面板”。 </p>\n<p><img src=\"https://toad114514.github.io/img/2307/w31-4.jpg\" alt=\"Screenshot_2023-07-22-19-29-07-80.jpg\"></p>\n<p>双击“驱动程序” </p>\n<p><img src=\"https://toad114514.github.io/img/2307/w31-6.jpg\" alt=\"驱动程序\"></p>\n<p>点击“增加”<br>选择 “Creative Labs Sound Blastch 1.5”<br>插入第六张安装磁盘到A:，然后点击确定<br>进入到 Sound Blastch 设置，选择端口220，中断7，点击认可<br>重启 Windows3.2，如果听见tada的声音，证明你的声卡驱动安装成功。 </p>\n<h3 id=\"如何安装显卡驱动\"><a href=\"#如何安装显卡驱动\" class=\"headerlink\" title=\"如何安装显卡驱动\"></a>如何安装显卡驱动</h3><p>Doxbox 支持模拟 S3 显示屏。这意味着你可以安装24位色彩的显卡驱动。一个 Windows3.1 的最好显示方案是： </p>\n<ol>\n<li>1024x768或800x600 分辨率（S3 最高支持1600x1200，但是不需要这么大）</li>\n<li>64K种颜色输出（即指24位）</li>\n</ol>\n<p>这里我们用 800x600 作为我们的分辨率。 </p>\n<p>接下来开始安装！<br>在最下面的下载链接里找到为 Windows3.1 准备的 S3 显卡驱动包并解压挂载到D盘（挂载代码：mount d: 解压路径，别跟我说这只能给3.1用，我已经试过了，3.2上运行正常），这里假如挂载路径到 D:\\S3<br>进入 windows 目录执行 setup.ex</p>\n<p><strong>是进入 windows 目录后执行 setup.exe 而不是 win ！否则你将无法继续安装！</strong></p>\n<p>接下来将光标移动到 “Display” 上并回车<br>在列表中找到最下面的选项，并回车<br>把路径 A:\\ 换成你挂载了 S3 驱动的路径，我们上面已经假如了 D:\\S3 是驱动路径，所以我们这里输入 D:\\S3 。<br>又回到列表里，找到 “S3 864 1.41B5 800x600 64K colors SL” ，选中它并回车。<br>回到设置列表，再回车一次。<br>开始安装显卡驱动…<br>如果在安装中途发现要输入路径，请再次输入你挂载的 S3 目录，上面已经假设 D:\\S3 是我们的驱动路径，所以我们要输入 D:\\S3。<br>最后回到dos界面，输入win。 </p>\n<p><img src=\"https://toad114514.github.io/img/2307/w31-7.jpg\" alt=\"驱动安装完成图片\"></p>\n<p>打开 Windows3.1 之后发现分辨率变大一点了，那么恭喜你，你的显卡驱动安装成功了！你可以到 Windows 设置程序里查看显示屏一项是否含有 “S3 864 1.41B5” </p>\n<h3 id=\"安装应用程序\"><a href=\"#安装应用程序\" class=\"headerlink\" title=\"安装应用程序\"></a>安装应用程序</h3><p>关于安装应用程序，我自己安装程序大部分来自于 <a href=\"http://winworldpc.com/\">http://winworldpc.com</a>，这个网站里面含有大量的Windows3.1应用，但基本上现在常见的应用程序基本没有。<br>关于安装游戏，例如你要装仙剑奇侠传或者模拟城市2000等游戏，建议到爱吾游戏宝盒或者浏览器搜索并下载。（也可以到贴吧寻找相关帖子） </p>\n<h3 id=\"下载链接\"><a href=\"#下载链接\" class=\"headerlink\" title=\"下载链接\"></a>下载链接</h3><p>为 Windows3.1 准备的 S3 显卡驱动<br><a href=\"\">http://funcloud.pan.com/mirrors/blog/win3-s3-driver.zip</a><br>funcloud 链接，已失效</p>\n","categories":["科技与狠活"],"tags":["系统","Dosbox","Windows"]},{"title":"张浩对李这停说的话","url":"http://toad114514.github.io/2023/07/21/zhang-sayto-lzt/","content":"<p>李这停，你tm天天打我，我那个文武你叫我打上我却打下了</p>\n","categories":["张浩"],"tags":["张浩"]},{"title":"Super Mario 64 Land 串烧背景音乐","url":"http://toad114514.github.io/2023/07/21/sm64l-music-pack/","content":"<p><img src=\"https://toad114514.github.io/img/2307/sm64land.jpg\" alt=\"Screenshot_2023-07-20-05-33-03-89.jpg\"><br>我因为无聊就做了一个串烧<br>用了5个小时才做好<br>这tm比我录下来的Saunh Ashar还长（Saunh Ashar 一小时，这个串烧2小时）<br>因为太长，所以要给目录索引，否则我早就被你们芬芳馥郁了。后面会补上各个关卡背景音乐的位置 </p>\n<ol>\n<li>世界1 00:00</li>\n<li>世界2 15:02</li>\n<li>世界3 30:04</li>\n<li>世界4 42:35</li>\n<li>世界5 56:09</li>\n<li>世界6 1:11:09</li>\n<li>世界7 1:26:11</li>\n<li>世界8 1:41:12</li>\n<li>打库巴王 1:53:43</li>\n<li>额外背景音乐 1:56:13<br>(包括结束、开头教程、奇诺比奥屋子、钢琴曲和关卡结束结算背景)</li>\n</ol>\n<p>下载链接：失效<br>验证码：SM64Land </p>\n","categories":["游戏"],"tags":["马里奥","音乐","OST"]},{"title":"SMMWE 终极关卡包！","url":"http://toad114514.github.io/2023/07/18/smmwe-level-pack/","content":"<p>![103.jpeg][0]</p>\n<h2 id=\"SMMWE-终极关卡包\"><a href=\"#SMMWE-终极关卡包\" class=\"headerlink\" title=\"SMMWE 终极关卡包\"></a>SMMWE 终极关卡包</h2><p>是的，我们推出了SMMWE终极关卡包，用于纪念SMMWE，由Toad114514制作。<br>该终极关卡包有什么特点？ </p>\n<ul>\n<li>30+ 关卡</li>\n<li>种类多（包括微操、普通、自动、跑步、解密等）</li>\n<li>内含一个大世界</li>\n<li>一个暑假肝出来的终极关卡包</li>\n<li>每周更新！！</li>\n<li>免费获取！！</li>\n</ul>\n<p><strong>是不是碉堡了！</strong><br><strong>赶紧下载这个关卡包吧！</strong></p>\n<p>链接：<br>[下载链接（huang11111）][1] 已失效</p>\n<h3 id=\"疑问\"><a href=\"#疑问\" class=\"headerlink\" title=\"疑问\"></a>疑问</h3><p>我该如何使用它？我该如何在SMMWE上游玩这些关卡？<br>看关卡包里的 Readme.txt<br>[0]: <a href=\"https://toad114514.github.io/img/2307/smmwe.jpg\">https://toad114514.github.io/img/2307/smmwe.jpg</a><br>[1]: </p>\n","categories":["游戏"],"tags":["游戏","马里奥","SMMWE"]},{"title":"张浩 Page 盛衰史","url":"http://toad114514.github.io/2023/07/17/zhanghao-page-history/","content":"<p> 这次聊一个与技术无关的话题。 </p>\n<p>什么，你要我说 张浩 Page？ </p>\n<p>也许可以谈谈这件事…… </p>\n<h3 id=\"张浩-Pages-的开端\"><a href=\"#张浩-Pages-的开端\" class=\"headerlink\" title=\"张浩 Pages 的开端\"></a>张浩 Pages 的开端</h3><p>那是去年的时候，2022年5月份左右认识张浩，当时我五年级的旅途基本上要结束了。发现张浩和我都有共同的爱好（在植物大战僵尸方面），也不知道是谁开始发起话题了，就这样一直聊了很久，直到我家门口才离开。 </p>\n<p>把时间线拉前面一点点。去年寒假在家里就听见下面有人在放炮，而且有时大声有时小。那时的我还坐在一张沙发上，看着电视里的bo叔叔（主要玩马造2，我就是因为他而把我带入到马里奥坑的），我不知道的是，那就是李这停和他的朋友在下面放炮，放的还是火柴炮（后面会单独出一个文章来介绍火柴炮）。 </p>\n<p>直到大约10月最后十几天才和李这停认识。当时我只是下来玩我的手机罢了。我一边玩手机，他们一边玩游戏，他们经常玩警察抓小偷。 </p>\n<p>还是赶紧进入主题吧。 </p>\n<p>张浩 Page 的前身是张浩在11月的时候，所有人在我家附近的平台无聊闲逛着。李这停就想到了偷张浩只因，于是开始偷张浩Penis。</p>\n<h3 id=\"张浩-Page-的想法\"><a href=\"#张浩-Page-的想法\" class=\"headerlink\" title=\"张浩 Page 的想法\"></a>张浩 Page 的想法</h3><p>在今年1月份开始，我已经有了这种想法。 </p>\n<p>那是个在手套厂附近的晚上。李这停在玩如正瑞手机里面的逃跑。我拿着一台15年发布的旧手机，在制作我的html页面。当时不知道是开了一个服务器还是本地访问。那时正好是偷张浩Penis的开端。我想到大家对于张浩的Penis都非常的有兴趣。我在菜鸟教程上学习了一点JavaScript，于是我开始尝试制作html、css和javascript的页面。为了能让页面有一定的吸引力，所以我从偷张浩Penis开始。这个页面用不了几分钟就完成了。我模糊的记得第一个张浩 Page长这个样子</p>\n<h3 id=\"张浩没只因\"><a href=\"#张浩没只因\" class=\"headerlink\" title=\"张浩没只因\"></a>张浩没只因</h3><p>你要偷张浩的只因吗 [按钮1 要] [按钮2 不要]</p>\n<p>按下按钮1，显示“好啊，那走吧！张浩的只因被偷了 i 次”i 是变量，每按一下加1 </p>\n<p>按下按钮2，显示“碉堡你哦，不偷张浩只因，难道还要偷你的只因啊！” </p>\n<p>当时做好之后，我觉得非常满意，也就是从这个页面开始，我的javascript之旅也就开始了（但是后面转到php力）。然后我把成果给李这停看，李这停直接连连夸赞（确信，旁边的张浩开始芬芳馥郁（。因为它代表了张浩没只因也可以用网络的方式去传播的，张浩 Page也成为了偷张浩只因的主要点。 </p>\n<p>当做完这个之后，我又做了一个纪念张浩没只因的html页面。没有说明张浩为何没只因，只是单纯的纪念张浩罢了。我甚至在Toads Blog的爷爷，用Typecho作为博客的Blog上还公布了代码（可惜数据弄丢了）。这事情又让张浩没只因推向巅峰。 </p>\n<h3 id=\"张浩-Page-的巅峰\"><a href=\"#张浩-Page-的巅峰\" class=\"headerlink\" title=\"张浩 Page 的巅峰\"></a>张浩 Page 的巅峰</h3><p>到了巅峰时期，我的张浩 Page在李这停团队里基本人人都知道。于是我把它加入到了我的服务器上。张浩 Page 也开始衍生出其他版本。例如著名的1版和li()，这两个是我做的续集版本，在今年2月份中旬就已经出现。以下几个张浩 Page也很知名</p>\n<ol>\n<li>-114514和114 - Xianbeiclassd30</li>\n<li>2、3和4 - 李这停</li>\n<li>5和coldway - 如郑瑞</li>\n<li>6、@outlook和EX - 飞机带翅膀</li>\n<li>erto、sidao和wedao - 失败的Mannnnnn</li>\n<li>closetime和timeout - 陈这类拔张浩penis</li>\n</ol>\n<p>以下也是知名的张浩 Page，但曾经未收录到我的Toad Stand 128(Toads Tool 前身) </p>\n<ol>\n<li>！- 后室开发人员</li>\n<li>zhanghao - 张浩</li>\n<li>Mario和Luigi - SMG9</li>\n<li>3? - 注释</li>\n<li>club、ping和ubuntu - xfcd4</li>\n</ol>\n<p>当然，现在仍然还有新的张浩 Page出现。这些衍生版本，有的拥有有趣的特点，有的还可以是Wordpress插件，甚至有的可以把张浩搞爆炸（物理。 </p>\n<p>而让张浩最崩溃的衍生版本是李这停的pengas，里面讲述了张浩的只因被别人绑架然后买到缅甸的故事。这个页面出现于6月份左右。内有诈骗到缅甸，买到缅甸噶腰子…以张浩的只因讲述了诈骗的整个流程。张浩的只因也从未想到有如此nb之玩意。（如果有时间我也可以说一说）可惜发布时间太晚了，张浩 Page 都凉了。 </p>\n<p>3月12日出来了一个张浩 Page一览，用fucionapp制作。只不过也凉透了。 </p>\n<h3 id=\"张浩-Page-的衰落\"><a href=\"#张浩-Page-的衰落\" class=\"headerlink\" title=\"张浩 Page 的衰落\"></a>张浩 Page 的衰落</h3><p>从3月份开始，大家对张浩 Page 没了什么兴趣。但每天仍然有新的张浩 Page 出现。而张浩也因为被朋友偷太多只因而准备叛变。</p>\n<p>认识吴子轩十几天后的一个中午，小黑子在和如郑瑞、张浩以及一个女孩在一起讨论叛变的事。计划可能是找到时机再叛变。小黑子抓住李这停不和那几个女生玩警察抓小偷的机会，再来叛变。 </p>\n<p>在小黑子成功叛变之后，张浩也一样开始叛变。李这停抓住张浩回家的时间，跟他谈一谈关于叛变的事情。在经过一段长时间的聊天之后，张浩决定重回李这停这边。这件事过后，李这停为了防止张浩再次叛变，于是要求我删掉所有放在服务器里的张浩 Page。因为他觉得这样子会让张浩失去自尊心，亦或者说张浩附近的朋友会谈起张浩 Page，这样会让张浩二次叛变。 </p>\n<p>在更新日志里，我写的是废弃但不是删除。其实所有的张浩 Page已经删除，且张浩 Pages 的上传页面 ZhangPage Upload 页面及其关联的MySQL库全部删除。就这样，大约4月份开始，张浩 Page 衍生页面制作者从30个人变成2个人，张浩 Page 经历了兴衰，最终也会和Winamp那样，结束了它的生涯，变成无人知道的一个垃圾。张浩 Page 就这样结束了………..吗？ </p>\n<h3 id=\"张浩-Page-起死回生\"><a href=\"#张浩-Page-起死回生\" class=\"headerlink\" title=\"张浩 Page 起死回生\"></a>张浩 Page 起死回生</h3><p>在5月份开始，张浩觉得自己成为普通人了，没什么有趣的了。</p>\n<p>5月21日，张浩找到了我，然后说了一下这个事情。以下是聊天记录： </p>\n<p>张浩：大个子，我需要你的帮助！ </p>\n<p>Toad114514：什么帮助？ </p>\n<p>张浩：我想出名出名，你看有什么办法。 </p>\n<p>（Toad114514思考片刻后） </p>\n<p>Toad114514：只能玩烂梗了，玩偷张浩只因的梗。 </p>\n<p>张浩：为什么？ </p>\n<p>Toad114514：你没有什么擅长的东西，开辟一个新东西也非常的难。 </p>\n<p>张浩：行吧，那你有什么办法？ </p>\n<p>Toad114514：我在服务器上搞一个提交，叫张浩 Page提交。因为偷张浩只因的重要点就在于张浩 Page。然后给你看所有的张浩 Page，哪个可以，我就放在我的服务器上。供别人观看，这样，你不就可以出名了吗？ </p>\n<p>张浩：这个想法好！ </p>\n<p>后面与李这停交流之后，李这停也同意该想法。于是在5月22日，开启了 张浩 issuse，并在5月29日，经过张浩重重筛选之后，选择了Tunter3的张浩 Page并放到服务器上。 </p>\n<p>张浩 Page 又开始流行起来，原先离开的28名张浩 Page制作者，有22个人回来并制作。 </p>\n<p>现在如果要提交张浩 Page ，请向下面的邮箱发送你的名字、张浩 Page 标题、文件和代号，审核过后会发到张浩 Page 列表上，并提供给别人观看。 </p>\n<p>大号：<a href=\"mailto:&#x78;&#x69;&#97;&#x6f;&#x6c;&#x61;&#x6e;&#x32;&#51;&#51;&#50;&#48;&#x32;&#x31;&#64;&#49;&#x36;&#51;&#46;&#x63;&#x6f;&#109;\">&#x78;&#x69;&#97;&#x6f;&#x6c;&#x61;&#x6e;&#x32;&#51;&#51;&#50;&#48;&#x32;&#x31;&#64;&#49;&#x36;&#51;&#46;&#x63;&#x6f;&#109;</a> </p>\n<p>小号：<a href=\"mailto:&#x66;&#97;&#107;&#x65;&#108;&#97;&#x6e;&#x6a;&#x69;&#x61;&#110;&#64;&#x6f;&#117;&#116;&#108;&#x6f;&#111;&#x6b;&#x2e;&#99;&#111;&#x6d;\">&#x66;&#97;&#107;&#x65;&#108;&#97;&#x6e;&#x6a;&#x69;&#x61;&#110;&#64;&#x6f;&#117;&#116;&#108;&#x6f;&#111;&#x6b;&#x2e;&#99;&#111;&#x6d;</a> </p>\n<h3 id=\"朋友对-张浩-Page-的看法\"><a href=\"#朋友对-张浩-Page-的看法\" class=\"headerlink\" title=\"朋友对 张浩 Page 的看法\"></a>朋友对 张浩 Page 的看法</h3><p>无，以后补充</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>张浩 Page 从只是一个普通的练习javascript，变成人人皆知的巅峰，又在死亡的边缘中，被张浩拉回来。张浩 Page 也许可以看见张浩的一生，也或者可以看见张浩没只因的页面。但这些终究是因为娱乐才出来的产品，但张浩对于张浩 Page 仍不阻止，只是李这停把它推向了火堆之中。这是保护张浩还是阻止张浩？我不能明白。但是如果张浩 Page到达巅峰时期时，那或许就是张浩的巅峰时期罢 </p>\n<p>（我丢，3000个字符，这tm怎这么长，我的哪篇文章文章可以超越这篇文章呢） </p>\n<p>（流水账（即答） </p>\n","categories":["张浩"],"tags":["张浩","页面"]},{"title":"我们更新了网站首页！！","url":"http://toad114514.github.io/2023/07/17/change-web-style/","content":"<p>最新的首页使用 Foundation 制作而成，且更有导航样式！ </p>\n<p><img src=\"https://toad114514.github.io/img/2307/newebsite.jpg\" alt=\"新主页页面\"></p>\n<p>这波非常的 beautiful!<br>关于我改这个主页的事情，到之后我再来说说吧 </p>\n","categories":["科技与狠活"],"tags":["网站"]},{"title":"有了 v2ray 但是没有节点怎么办","url":"http://toad114514.github.io/2023/07/06/v2ray-port/","content":"<p><img src=\"https://toad114514.github.io/img/2307/v2ray.jpg\" alt=\"v2rayNG 和要翻墙的应用\"></p>\n<p>有了翻墙软件但是没有节点怎么办，我做了一个一个订阅链接<br><strong>注意：这些订阅链接只能用于学习用途，请勿用于非法用途！</strong></p>\n<h3 id=\"免费节点订阅链接\"><a href=\"#免费节点订阅链接\" class=\"headerlink\" title=\"免费节点订阅链接\"></a>免费节点订阅链接</h3><p>后面带*的订阅链接会每天更新，具体更新情况看订阅链接更新的网站</p>\n<ol>\n<li>ClashNode <a href=\"https://clashnode.com/wp-content/uploads/2023/07/20230705.txt\">https://clashnode.com/wp-content/uploads/2023/07/20230705.txt</a> *</li>\n<li>Ceacer <a href=\"https://v2ray.ceacer.cn/api/v1/client/subscribe=token=5c4f46040399e91aca5fd1930da8a1\">https://v2ray.ceacer.cn/api/v1/client/subscribe=token=5c4f46040399e91aca5fd1930da8a1</a></li>\n<li>v2rayshare <a href=\"https://v2rayshare.com/wp-content/uploads/2023/07/20230705.txt\">https://v2rayshare.com/wp-content/uploads/2023/07/20230705.txt</a> *</li>\n</ol>\n<p>先暂时到这吧</p>\n","categories":["科技与狠活"],"tags":["v2ray","节点"]},{"title":"我给 blog 装了个电台浏览器","url":"http://toad114514.github.io/2023/07/02/blog-new-rad/","content":"<p><img src=\"https://toad114514.github.io/img/2307/radio.jpg\" alt=\"Screenshot_2023-07-02-11-34-16-51.jpg\"><br>这里只有一个我喜欢的电台。之后会加入更多电台。<br>在播放器列表力点击最后一个就可以了。 </p>\n<p>Qplayer2设置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;HBR1 - I.D.M Tranceponder&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\"><span class=\"attr\">&quot;artist&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\"><span class=\"attr\">&quot;audio&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;http://ubuntu.hbr1.com:19800/trance-low.ogg&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\"><span class=\"attr\">&quot;cover&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\"><span class=\"attr\">&quot;lrc&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span> </span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这个电台有点歌功能<br>你可以去看看视频<br>根据视频操作<br>在点击 play another list 之后，可以随便点击一个音乐后面的play it。 </p>\n","categories":["科技与狠活"],"tags":["博客","播放器"]},{"title":"关于 lxde 配组件的教程","url":"http://toad114514.github.io/2023/07/01/lxde-widget-change/","content":"<p> 嘿，大家好，我回来了;-)<br>为什么那么久没更新，是因为我去复习，来考小升初了<br>考完了，写个文章，开始这个没有作业的暑假吧(喜 </p>\n<h1 id=\"lxde-配组件-完全文字版\"><a href=\"#lxde-配组件-完全文字版\" class=\"headerlink\" title=\"lxde 配组件(完全文字版\"></a>lxde 配组件(完全文字版</h1><h3 id=\"lxde-简介\"><a href=\"#lxde-简介\" class=\"headerlink\" title=\"lxde 简介\"></a>lxde 简介</h3><p>还是先引用</p>\n<blockquote>\n<p>LXDE，全名Lightweight X11 Desktop Environment。是一个基于GTK2的美观和国际化的Linux发行版桌面环境。与KDE和GNOME相比，LXDE的资源占用更小，适合在配置比较低的电脑上工作。它有很多特点，如模块化设计。</p>\n</blockquote>\n<p>(来自百度百科) </p>\n<p>今天要教的是这里面的重要点：<strong>模块化设计</strong></p>\n<h3 id=\"模块化设计\"><a href=\"#模块化设计\" class=\"headerlink\" title=\"模块化设计\"></a>模块化设计</h3><p>模块，当一个小部分有一些不好是，就可以用模块来补充那个小部分，还可以把它们变得更好，相当于插件。</p>\n<p>如果一个东西被模块化了，证明了可以被高度自定义。 </p>\n<p>原生的lxde是不好看的，那我们可以从模块下手。张浩lxde重制计划也是如此。 </p>\n<h3 id=\"为-lxde-换桌面管理器\"><a href=\"#为-lxde-换桌面管理器\" class=\"headerlink\" title=\"为 lxde 换桌面管理器\"></a>为 lxde 换桌面管理器</h3><p>在 lxapplication 中的选项卡二(桌面管理器)中，里面有一个框，这个框是用来填写桌面管理器的启动指令。<br>以xfwm4为例子：<br>先安装xfwm4 </p>\n<pre><code>apt install xfwm4\n</code></pre>\n<p>然后在 lxapplication 的选项卡”桌面管理器”中的输入框输入</p>\n<pre><code>xfwm4\n</code></pre>\n<p>如果你有多个显示器，请在启动xfwm4的指令里指定显示器<br>你可以输入 </p>\n<pre><code>xfwm4 --help\n</code></pre>\n<p>去寻求帮助</p>\n<h3 id=\"为-lxde-换面板\"><a href=\"#为-lxde-换面板\" class=\"headerlink\" title=\"为 lxde 换面板\"></a>为 lxde 换面板</h3><p>原先的 lxpanel 有点不好看，我想换一个<br>以 xfce4-panel 为例<br>先安装 </p>\n<pre><code>apt install xfce4-panel\n</code></pre>\n<p>因为 lxde 并没有专门为面板准备的设置，所以你需要在lxde 会话启动后去执行以下命令</p>\n<pre><code>xfce4-panel --replace\n</code></pre>\n<p>replace是用于切换 lxpanel 的实例的</p>\n<p>关于 lxde 会话启动自动执行命令，请自行百度或bing </p>\n<h3 id=\"Dock-栏\"><a href=\"#Dock-栏\" class=\"headerlink\" title=\"Dock 栏\"></a>Dock 栏</h3><p>如果你之前是 Mac 用户，那么你可以试试给你的桌面环境装 Dock 栏。这里建议 Plank 作为你的 Dock 栏 </p>\n<p>首先，安装 Plank </p>\n<pre><code>apt install plank\n</code></pre>\n<p>接下来，设置开机启动<br>在 lxapplication 中，点击选项卡”启动自启”中将plank打勾<br>接下来，你就可以体验 Dock 栏了<br><strong>注意：不同的窗口管理器，显示的效果也不同。例如在openbox运行只有点击图标时跳跃，而在Metacity和xfwm4等窗口管理器上，还会有鼠标停留时的动画。</strong></p>\n<h3 id=\"终端\"><a href=\"#终端\" class=\"headerlink\" title=\"终端\"></a>终端</h3><p>在 apt 上，可以见到很多终端模拟器，有的美观(xfce4-terminal)，有的复古(cool-retro-term)，有的还可以帮助你便捷使用(下拉式终端)<br>如果你追求美化，可以试试xfce4-terminal<br>先安装 xfce4-terminal </p>\n<pre><code>apt install xfce4-terminal\n</code></pre>\n<p>接下来就是设置默认终端<br>这里不在过多讲述，可以自行百度&#x2F;bing </p>\n<h3 id=\"换图标和窗口主题样式\"><a href=\"#换图标和窗口主题样式\" class=\"headerlink\" title=\"换图标和窗口主题样式\"></a>换图标和窗口主题样式</h3><p>这个很简单<br>以xfwm4为例<br>主题样式可以从xfce-look.org上找到<br>找到后去下载<br>下载完成后输入： </p>\n<pre><code>sudo cp -rf 主题目录 /usr/share/themes\n</code></pre>\n<p>图标也是从xfce-look.org上下载的<br>下载完成后输入： </p>\n<pre><code>sudo cp -rf 图标目录 /usr/share/icons\n</code></pre>\n<p>最后在窗口管理器里设置即可 </p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>当一个桌面环境被模块化了，确实可以帮助我们把lxde美化得不像lxde，但是在美化之前，一定好看看你的电脑撑不撑得住，撑不住就可以换走了。如果你不听我的话，那么长期使用电脑，会给电脑造成负担，说不定哪一天就罢工力(悲</p>\n","categories":["科技与狠活"],"tags":["科技","linux","桌面环境","lxde"]},{"title":"学习偷袭张浩","url":"http://toad114514.github.io/2023/06/10/learn-get-zhanghao/","content":"<h1 id=\"学习偷袭张浩\"><a href=\"#学习偷袭张浩\" class=\"headerlink\" title=\"学习偷袭张浩\"></a>学习偷袭张浩</h1><p>欢迎来到学习偷袭张浩！此处收集了朋友偷袭张浩的方法，你可以给我<a href=\"mailto:xiaolan2332021@163.com\">发邮箱</a>提供偷袭张浩的方法！ </p>\n<pre><code>&lt;b style=&quot;color: red&quot;&gt;That so good!&lt;/b&gt;\n</code></pre>\n","categories":["张浩"],"tags":["张浩"]},{"title":"搭建IRC服务器","url":"http://toad114514.github.io/2023/06/10/create-irc/","content":"<p>首先，我们要了解IRC是什么玩意： </p>\n<blockquote>\n<p>因特网中继聊天（Internet Relay Chat），一般称为互联网中继聊天，简称：IRC。它是由芬兰人Jarkko Oikarinen于1988年首创的一种网络聊天协议。经过十年的发展，世界上有超过60个国家提供了IRC的服务。IRC的工作原理非常简单，您只要在自己的PC上运行客户端软件，然后通过因特网以IRC协议连接到一台IRC服务器上即可。它的特点是速度非常之快，聊天时几乎没有延迟的现象，并且只占用很小的带宽资源。所有用户可以在一个被称为\\Channel\\（频道）的地方就某一话题进行交谈或密谈。每个IRC的使用者都有一个Nickname（昵称）。(来自百度百科) </p>\n</blockquote>\n<p>(这IRC非常的老，快成骨灰了)<br>搭建IRC服务器需要一个Linux服务器来搭建，而Widnows的话**(我家没有Windows电脑，模拟器还tm卡到升天)**自己去查查罢。<br>搭建IRC服务器可以使用ngircd。 </p>\n<h1 id=\"安装ngircd\"><a href=\"#安装ngircd\" class=\"headerlink\" title=\"安装ngircd\"></a>安装ngircd</h1><p>以Ubuntu 22.10(Utermux套了个proot容器，那里还套了个Ubuntu)为例<br>安装ngircd<br>    apt install ngircd<br>然后通过vim修改ngircd配置<br>    vim &#x2F;etc&#x2F;ngircd&#x2F;ngircd.conf</p>\n<p><img src=\"https://toad114514.github.io/img/2306/ircd.jpg\" alt=\"ngircd 配置界面\"></p>\n<p> (好多注释，但是看不懂)<br>根据下面我自己给出来的注释去找到选项并填写即可 </p>\n<pre><code>[Global]\n   #服务器IP地址\n   name = 192.168.114.514\n   #管理员信息\n   AdminInfo1 = Toad - 此IRC服务器创始人\n   AdminInfo2 = 张浩你个屑(\n   #管理员邮箱\n   AdminEMail = xxx@xxx.com\n   #IRC 命令帮助文件\n   HelpFile = /usr/share/doc/ngircd/Command.txt\n   #IRC 服务器信息\n   Info = 来，一起偷张浩大吊\n   #Motd 文件，主要用于IRC服务器公告(如果没有请自己建)\n   MotdFile = /etc/ngircd/ngircd.motd\n   \n[Channel]\n   #如果需要自带频道不用自己创建的话，可以去掉前面的分号\n   #频道名字，频道名字前必须带井号\n   name = #Toad114514\n   #频道话题\n   Topic = 什么都聊，包括偷张浩只因\n</code></pre>\n<p>完成后保存<br>最后启动服务器 </p>\n<pre><code>$ sudo /etc/init.d/ngircd start\n</code></pre>\n<p><strong>(我的Ubuntu用systemd启动会失败，所以使用传统init方式)</strong><br>连接IRC服务器<br>这里使用安卓的Yaaic来连接，电脑可以用HexChat或Pidgin<br>打开Yaaic，点击右上角加号创建IRC服务器 </p>\n<p><img src=\"https://toad114514.github.io/img/2306/irc-android.jpg\" alt=\"Yaaic 添加服务器界面\"></p>\n<p>红圈填标题<br>橙圈填服务器IP地址(如果是本地)<br>绿圈填昵称<br>下面还有个Real Name<br>跟绿圈填一致就行了<br>完成后点击右上角的按钮<br>回到主页，点击和填写标题一样的列表 </p>\n<p><img src=\"https://toad114514.github.io/img/2306/irc-android2.jpg\" alt=\"Yaaic 主页\"></p>\n<p>成功登陆!<br>可以通过点击右上角的加号加入频道<br>如果在填写配置文件时，把Channel块里的name和topic前面的分号去除掉了，那么可以输入name到弹出的输入框里<br>按下Join后，就可以欢快的聊天了</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>其实IRC服务器也只有在极客圈里会用到。看看QQ和微信，越来越臃肿。添加更多的功能，这些功能可能你一辈子都用不到。就算是我手机在用TIM(微信和QQ的结合体)，至少内存占1GB。如果与IRC对比，我会去用IRC，因为它足够简单。但是我朋友用的都是QQ和微信(与张浩刷屏(确信))，所以才会被迫去用罢了。</p>\n","categories":["科技与狠活"],"tags":["服务器","IRC"]},{"title":"《360度无死角感谢Z-blog》","url":"http://toad114514.github.io/2023/06/10/thank-zblog/","content":"<p>关于<strong>ksweb别想玩typecho</strong>的事情罢，我的ksweb装typecho会出现没有文件的情况，这令我非常的生气(114514</p>\n<p>今天晚上，我看见有一个叫Z-blog的玩意进入了我的视野里。它也是blog部署，于是”试试就逝世”，我必须要看看这寄吧长啥样 </p>\n<p>安装：</p>\n<p><img src=\"https://toad114514.github.io/img/2306/zblog-start.jpg\" alt=\"Z-blog 下载帖子\"></p>\n<blockquote>\n<p>单文件?nnd，这怎么做得到吗 </p>\n</blockquote>\n<p>但还是想都没想，我还是把文件通过FTP扔到了我家电视上(我家电视是个服务器，具体可以看电视改造计划(确信)。</p>\n<p>通过我自己的理解(数据库用SQLite，我不想再创建MySQL数据库力)，安装成功了 </p>\n<p><img src=\"https://toad114514.github.io/img/2306/zblog.jpg\" alt=\"Z-blog 开始界面\"></p>\n<p>而且没有像<strong>typecho一样的错误</strong>，我真的太开心力 </p>\n<p>接下了，我会对这个blog进行修改，并加入一些插件和主题(Very good) </p>\n","categories":["科技与狠活"],"tags":["博客","科技","Zblog"]},{"title":"浩简介","url":"http://toad114514.github.io/1970/01/01/haojj/","content":"<p> 浩，约十岁，有矮。人有故事，如浩楼下溃，浩与虎交打，浩叛等。此皆已知，浩虽十年张浩无人知，楼坏知天下。浩有号“勇士总冠军”。自张浩反，至张浩，子轩执手机录之，口中念心“张浩勇士总冠军”，此号之所由来也。号已过李罢识之。盗张浩但以距年，李之罢也，如郑瑞与虎共无聊时，此欲出之。念后知其始盗浩但因，悟其手甚滑，至一步，盗往浩。后二瑞如郑瑞及王虎已察，始共盗浩但坐②。后略窃浩口，浩遂溃。浩归第，息犹不舍之，于楼下始简。浩楼下崩溃亦缘之所起。唯取此本，如窃此中只因。张浩戏太素②。如张浩近玩之漫威超英雄，闻李之停说，英女千有二百，直嘲电摇。更远者为之C，浩连最简坑而下，真一灰也。王统体而观浩者，人每欺也，使吾信之，猪皆能飞，“当豕飞”是也，而来非。且斯人甚鄙叛，易为而速于蜀，玩太灰，无筋力而始尽弃灰焉。</p>\n","categories":["张浩"],"tags":["张浩"]},{"title":"关于","url":"http://toad114514.github.io/about/index.html","content":"<h1 id=\"Welcome-to-Toads-Blog\"><a href=\"#Welcome-to-Toads-Blog\" class=\"headerlink\" title=\"Welcome to Toads Blog!\"></a>Welcome to Toads Blog!</h1><p> <img src=\"https://toad114514.github.io/img/wb/toad.jpg\" alt=\"toad\"><br> 高州中学初中校区写Python代码和专业级偷张浩只因的准初二级奇诺比奥</p>\n<h1 id=\"本人信息\"><a href=\"#本人信息\" class=\"headerlink\" title=\"本人信息\"></a>本人信息</h1><ul>\n<li>2010&#x2F;9&#x2F;20 出生</li>\n<li>13岁被先辈撅的屑奇诺比奥</li>\n<li>高 164 cm，重 60 千克，BMI指数正常</li>\n<li>学费前端、python、c++、json、xml等各种语言</li>\n<li>尝试自己做过电音</li>\n<li>拥有两台手机，一台OppoA5和为发烧而生的无法开机的小米5</li>\n<li>曾拥有过电脑</li>\n<li>PyQt5 库已初步入门</li>\n<li>地理曾进步 800 名</li>\n<li>拥有一台本地工具类服务器，含社区、云服务等</li>\n<li>拥有一台 我的世界基岩版1.20.51版本服务器 ，基于termux+ubuntu22.04.3LTS+box64<br>本人termux：<br><img src=\"https://toad114514.github.io/img/wb/termux.jpg\" alt=\"termux\"><br>本人主力机：<br><img src=\"https://toad114514.github.io/img/wb/phone.jpg\" alt=\"phone\"></li>\n</ul>\n<h1 id=\"玩过以下游戏\"><a href=\"#玩过以下游戏\" class=\"headerlink\" title=\"玩过以下游戏\"></a>玩过以下游戏</h1><ul>\n<li>我的世界(基岩版&#x2F;java和网易版)</li>\n<li>i wanna be the creator</li>\n<li>马里奥的一大堆同人作品，包括SM4J和SMMWE</li>\n<li>M木糖M的 戴夫的老年生活</li>\n<li>植物大战僵尸</li>\n<li>Undertale</li>\n<li>元气骑士</li>\n<li>齿轮骑士旋转</li>\n<li>SM64Land</li>\n<li>地铁跑酷</li>\n<li>偷张浩只因(?)</li>\n<li>滑梯抓人、警察抓小偷(????????)</li>\n</ul>\n<h1 id=\"联系我\"><a href=\"#联系我\" class=\"headerlink\" title=\"联系我\"></a>联系我</h1><p> <a href=\"https://qm.qq.com/q/fvejngFkFa\">QQ</a><br> <a href=\"\">微信</a><br> <a href=\"mailto:xiaolan2332821@163.com\">邮箱（大号）</a><br> <a href=\"mailto:fakelanjian@outlook.com\">邮箱（小号）</a><br> <a href=\"https://github.com/toad114514\">Github</a><br> <a href=\"https://gitee.com/toadstool\">Gitee</a><br> <a href=\"https://shequ.codemao.cn/mobile/user/16551623\">编程猫</a><br> <a href=\"https://m.bilibili.com/space/1797212029\">b站（不常用）</a><br> <a href=\"https://v.kuaishou.com/xZd7oX\">快手</a><br> <a href=\"https://m.douyin.com/share/user/MS4wLjABAAAA6PVKsXhOQnDUq6NzC0iR0Yhexul5GSzhHaBQBK7iXQQ\">抖音（不常用）</a><br> <a href=\"https://m.ixigua.com/user/1156309825358958\">西瓜视频（已退）</a><br> SMMWE：toad114514<br> 蛋仔派对（退坑）：toad1145<br> I wanna be the creator：toad11451</p>\n<h1 id=\"想找我好朋友？\"><a href=\"#想找我好朋友？\" class=\"headerlink\" title=\"想找我好朋友？\"></a>想找我好朋友？</h1><p> <a href=\"https://v.kuaishou.com/SHrgIA\">有事玩滨州</a><br> <a href=\"https://v.kuaishou.com/Sal9Kc\">有事玩冰州冇事玩高高</a><br> <a href=\"https://v.kuaishou.com/SNQ6Dg\">自卑了</a><br> <a href=\"https://v.kuaishou.com/U2mftf\">开存看本子</a><br> <a href=\"https://v.kuaishou.com/TSzPnO\">笛某（臭哼）</a><br> <a href=\"https://v.kuaishou.com/Q1QW4I\">挽识小号</a><br> <a href=\"https://v.kuaishou.com/Sdb4DW\">岩浆豆</a></p>\n<h1 id=\"未来计划和成就\"><a href=\"#未来计划和成就\" class=\"headerlink\" title=\"未来计划和成就\"></a>未来计划和成就</h1><p> [x] 拍摄朋友黑历史 100 个<br> [x] 运营一个本地服务器<br> [ ] 写完 Staxle</p>\n<h1 id=\"写什么\"><a href=\"#写什么\" class=\"headerlink\" title=\"写什么?\"></a>写什么?</h1><ul>\n<li>关于朋友黑历史</li>\n<li>文件分享和使用体验</li>\n<li>写小作文</li>\n<li>代码生活</li>\n<li>linux的使用体验</li>\n</ul>\n<h1 id=\"致谢名单\"><a href=\"#致谢名单\" class=\"headerlink\" title=\"致谢名单\"></a>致谢名单</h1><ul>\n<li>张浩和工地先锋</li>\n<li>没有了</li>\n</ul>\n","categories":[],"tags":[]},{"title":"在线小空调","url":"http://toad114514.github.io/aircom/index.html","content":"<div class=\"note success simple\"><p>Toad 用巨资购买的高级大空调到力<br>看博客有点热，赶紧打开空调吹吹</p>\n</div>\n<p><strong>唯一缺点就是没有风</strong></p>\n<iframe height=\"740\" src=\"https://ac.yunyoujun.cn\"></iframe>\n","categories":[],"tags":[]},{"title":"","url":"http://toad114514.github.io/america/index.html","content":"<!DOCTYPE html>\n<html lang=\"zh-cn\">\n   <head>\n    <title>美国怀旧服主页</title>\n    <link rel=\"icon\" href=\"./farmer.jpeg\" type=\"image/x-icon\"/>\n    <link rel=\"stylesheet\" href=\"https://cdn.staticfile.net/foundation/5.5.3/css/foundation.min.css\">\n    <script src=\"https://cdn.staticfile.net/foundation/5.5.3/js/vendor/jquery.js\"></script>\n    <script src=\"https://cdn.staticfile.net/foundation/5.5.3/js/foundation.min.js\"></script>\n    <script src=\"https://cdn.staticfile.net/foundation/5.5.3/js/vendor/modernizr.js\"></script>\n    <script>\n      $(document).ready(function() {\n       $(document).foundation();\n      })\n    </script>\n    <meta charset=\"UTF-8\"/>\n  </head>\n  <body>\n    <nav class=\"top-bar\" data-topbar>\n      <ul class=\"title-area\">\n       <li class=\"name\">\n       <img src=\"https://toad114514.github.io/america/farmer.jpg\" width=\"40\" height=\"40\"/>\n       </li>\n       <li class=\"toggle-topbar fa fa-navicon\" style=\"color:white;font-size:24px;padding:12px;\"><a href=\"#\"/></li>\n     </ul>\n     <section class=\"top-bar-section\">\n       <ul class=\"left\">\n         <li class=\"active\"><a href=\"#\">主页</a></li>\n         <li><a href=\"https://pan.huang1111.cn/s/G86D6FW\">下载链接</a></li>\n         <li><a href=\"javascript:alert('目前无 DLC 增值服务')\">DLC</a></li>\n       </ul>\n     </section>\n   </nav>\n   \n   <div style=\"padding:20px;\">\n      <h1>美国怀旧服</h1>\n      <h2>上线就送100抽</h2>\n      <a href=\"#\" data-dropdown=\"id01\" class=\"button dropdown\">中文</a>\n      <ul id=\"id01\" data-dropdown-content class=\"f-dropdown\">\n        <li><a href=\"#\">中文</a></li>\n        <li><a href=\"https://toad114514.github.io/america/index_en.html\">English</a></li>\n      </ul>\n      <img src=\"https://toad114514.github.io/america/farmer.jpg\">农场主</img>\n      <p>这是黑人，他在月球👇</p>\n      <img src=\"https://toad114514.github.io/america/nig.jpg\"/>\n      <p>这是白人，戴着牛仔帽，拿着皮鞭👇</p>\n      <img src=\"https://toad114514.github.io/america/farmers.jpg\"/>\n      <p>.........</p>\n      <img src=\"https://toad114514.github.io/america/fan.jpg\"/><br>\n      <b>Ni__er,go work!!!</b>\n      <p>美国怀旧服，上线就送100抽</p>\n      <p>黑人玩家还可以在线摘棉花，在线吃烤鸡西瓜，在线被农场主鞭子抽打！</p>\n      <p>你还在纠结什么？<b>还有精美的皮鞭！！和精美会爆炸的oppo a5！</b>\n      <p>立即下载：<a href=\"https://pan.huang1111.cn/s/G86D6FW\">立即下载游玩！</a>密码：farmer</p>\n   </div>\n  </body>\n</html>\n","categories":[],"tags":[]},{"title":"","url":"http://toad114514.github.io/america/index_en.html","content":"<!DOCTYPE html>\n<html lang=\"zh-cn\">\n   <head>\n    <title>Retro America Home Website</title>\n    <link rel=\"icon\" href=\"./farmer.jpeg\" type=\"image/x-icon\"/>\n    <link rel=\"stylesheet\" href=\"https://cdn.staticfile.net/foundation/5.5.3/css/foundation.min.css\">\n    <script src=\"https://cdn.staticfile.net/foundation/5.5.3/js/vendor/jquery.js\"></script>\n    <script src=\"https://cdn.staticfile.net/foundation/5.5.3/js/foundation.min.js\"></script>\n    <script src=\"https://cdn.staticfile.net/foundation/5.5.3/js/vendor/modernizr.js\"></script>\n    <script>\n      $(document).ready(function() {\n       $(document).foundation();\n      })\n    </script>\n    <meta charset=\"UTF-8\"/>\n  </head>\n  <body>\n    <nav class=\"top-bar\" data-topbar>\n      <ul class=\"title-area\">\n       <li class=\"name\">\n       <img src=\"https://toad114514.github.io/america/farmer.jpg\" width=\"40\" height=\"40\"/>\n       </li>\n       <li class=\"toggle-topbar fa fa-navicon\" style=\"color:white;font-size:24px;padding:12px;\"><a href=\"#\"/></li>\n     </ul>\n     <section class=\"top-bar-section\">\n       <ul class=\"left\">\n         <li class=\"active\"><a href=\"#\">Home</a></li>\n         <li><a href=\"https://pan.huang1111.cn/s/G86D6FW\">Download link</a></li>\n         <li><a href=\"javascript:alert('There is not DLC for this game.')\">DLC</a></li>\n       </ul>\n     </section>\n   </nav>\n   \n   <div style=\"padding:20px;\">\n      <h1>Retro America Server</h1>\n      <h2>Give 100 bianzi papapa in game!</h2>\n      <a href=\"#\" data-dropdown=\"id01\" class=\"button dropdown\">English</a>\n      <ul id=\"id01\" data-dropdown-content class=\"f-dropdown\">\n         <li><a href=\"#\">English</a></li>\n        <li><a href=\"https://toad114514.github.io/america/index.html\">\">中文</a></li>\n      </ul>\n      <img src=\"https://toad114514.github.io/america/farmer.jpg\">Farmer</img>\n      <p>This is a nig_er，He is in the moon.👇</p>\n      <img src=\"https://toad114514.github.io/america/nig.jpg\"/>\n      <p>This is white man，wear the western cap and pick the bianzi👇</p>\n      <img src=\"https://toad114514.github.io/america/farmers.jpg\"/>\n      <p>.........</p>\n      <img src=\"https://toad114514.github.io/america/fan.jpg\"/><br>\n      <b>Ni__er,go work!!!</b>\n      <p>Retro America Server, give 100 bianzi papapa in game!</p>\n      <p>Nig_er player can pick cotton online, eat chicken and melon, farmer use bianzi papapa you!</p>\n      <p>Are you wait?<b>We have perfect bianzi and beautiful oppoa5 bomb bomb bomb!!!</b>\n      <p>Download Now：<a href=\"https://pan.huang1111.cn/s/G86D6FW\">Downloar Now!!!</a>Password: farmer</p>\n   </div>\n  </body>\n</html>\n","categories":[],"tags":[]},{"title":"","url":"http://toad114514.github.io/css/pgbar.css","content":".pace {\n  -webkit-pointer-events: none;\n  pointer-events: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n}\n\n.pace-inactive {\n  display: none;\n}\n\n.pace .pace-progress {\n  background: #e90f92;\n  position: fixed;\n  z-index: 2000;\n  top: 0;\n  right: 100%;\n  width: 100%;\n  height: 2px;\n}\n\n.pace .pace-progress-inner {\n  display: block;\n  position: absolute;\n  right: 0px;\n  width: 100px;\n  height: 100%;\n  box-shadow: 0 0 10px #e90f92, 0 0 5px #e90f92;\n  opacity: 1.0;\n  -webkit-transform: rotate(3deg) translate(0px, -4px);\n  -moz-transform: rotate(3deg) translate(0px, -4px);\n  -ms-transform: rotate(3deg) translate(0px, -4px);\n  -o-transform: rotate(3deg) translate(0px, -4px);\n  transform: rotate(3deg) translate(0px, -4px);\n}\n\n.pace .pace-activity {\n  display: block;\n  position: fixed;\n  z-index: 2000;\n  top: 15px;\n  right: 15px;\n  width: 14px;\n  height: 14px;\n  border: solid 2px transparent;\n  border-top-color: #e90f92;\n  border-left-color: #e90f92;\n  border-radius: 10px;\n  -webkit-animation: pace-spinner 400ms linear infinite;\n  -moz-animation: pace-spinner 400ms linear infinite;\n  -ms-animation: pace-spinner 400ms linear infinite;\n  -o-animation: pace-spinner 400ms linear infinite;\n  animation: pace-spinner 400ms linear infinite;\n}\n\n@-webkit-keyframes pace-spinner {\n  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\n  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-moz-keyframes pace-spinner {\n  0% { -moz-transform: rotate(0deg); transform: rotate(0deg); }\n  100% { -moz-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-o-keyframes pace-spinner {\n  0% { -o-transform: rotate(0deg); transform: rotate(0deg); }\n  100% { -o-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-ms-keyframes pace-spinner {\n  0% { -ms-transform: rotate(0deg); transform: rotate(0deg); }\n  100% { -ms-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@keyframes pace-spinner {\n  0% { transform: rotate(0deg); transform: rotate(0deg); }\n  100% { transform: rotate(360deg); transform: rotate(360deg); }\n}\n/* 在下面修改进度条外观 */\n.pace .pace-progress {\n  background: #1ef4fbec; /*进度条颜色*/\n  height: 3px;/* 进度条厚度 */\n}\n.pace .pace-progress-inner {\n  box-shadow: 0 0 10px #1ef4fbce, 0 0 5px #1ecffbd0; /*阴影颜色*/\n}\n.pace .pace-activity {\n  border-top-color: #1edafbe5;\t/*上边框颜色*/\n  border-left-color: #1ef4fbec;\t/*左边框颜色*/\n}","categories":[],"tags":[]},{"title":"分类","url":"http://toad114514.github.io/categories/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://toad114514.github.io/css/toads.css","content":"#welcome-info {\n  overflow: hidden;\n  --icat-card-welcome: #49b1f5;\n}\n#welcome-info .welcome-time {\n  width: 100%;\n  margin: 12px 0 0;\n  display: inline-flex;\n}\n#welcome-info .welcome-message {\n  width: 100%;\n  margin-bottom: 8px;\n  display: inline-flex;\n}\n#welcome-info .welcome-region {\n  background-image: url(\"https://img2.imgtp.com/2024/05/18/tptvVwgt.jpg\");\n  background-position: right bottom;\n  border: var(--style-border);\n  color: var(--icat-fontcolor);\n  border-radius: 8px;\n  display: inline-flex;\n  align-items: center;\n  padding: 6px 10px;\n  margin: 6px 0;\n}\n\n/* 欢迎信息栏样式 */\n","categories":[],"tags":[]},{"title":"","url":"http://toad114514.github.io/js/txmap.js","content":"function welcometxmap() {\n    //请求数据\n    ipLoacation = window.saveToLocal.get('ipLocation');\n    if (ipLoacation) {\n        // 使用 ipLocation\n    } else {\n        // 数据已过期或不存在\n        var script = document.createElement('script');\n        var url = `https://apis.map.qq.com/ws/location/v1/ip?key=${txkey}&output=jsonp`;\n        script.src = url;\n        window.QQmap = function (data) {\n            ipLoacation = data;\n            // 将数据保存到 localStorage，过期时间设置为 1 天\n            window.saveToLocal.set('ipLocation', ipLoacation, 1);\n            document.body.removeChild(script);\n            delete window.QQmap;\n        };\n        document.body.appendChild(script);\n    }\n    showWelcome();\n}\nfunction getDistance(e1, n1, e2, n2) {\n    const R = 6371\n    const { sin, cos, asin, PI, hypot } = Math\n    let getPoint = (e, n) => {\n        e *= PI / 180\n        n *= PI / 180\n        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }\n    }\n\n    let a = getPoint(e1, n1)\n    let b = getPoint(e2, n2)\n    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)\n    let r = asin(c / 2) * 2 * R\n    return Math.round(r);\n}\n\nfunction showWelcome() {\n\n    let dist = getDistance(longitude, Latitude, ipLoacation.result.location.lng, ipLoacation.result.location.lat);\n    let pos = ipLoacation.result.ad_info.nation;\n    let ip;\n    let posdesc;\n    //根据国家、省份、城市信息自定义欢迎语\n    switch (ipLoacation.result.ad_info.nation) {\n        case \"日本\":\n            posdesc = \"よろしく，一起去看樱花吗\";\n            break;\n        case \"美国\":\n            posdesc = \"Let us live in peace!\";\n            break;\n        case \"英国\":\n            posdesc = \"想同你一起夜乘伦敦眼\";\n            break;\n        case \"俄罗斯\":\n            posdesc = \"干了这瓶伏特加！\";\n            break;\n        case \"法国\":\n            posdesc = \"C'est La Vie\";\n            break;\n        case \"德国\":\n            posdesc = \"Die Zeit verging im Fluge.\";\n            break;\n        case \"澳大利亚\":\n            posdesc = \"一起去大堡礁吧！\";\n            break;\n        case \"加拿大\":\n            posdesc = \"拾起一片枫叶赠予你\";\n            break;\n        case \"中国\":\n            pos = ipLoacation.result.ad_info.province + \" \" + ipLoacation.result.ad_info.city + \" \" + ipLoacation.result.ad_info.district;\n            ip = ipLoacation.result.ip;\n            switch (ipLoacation.result.ad_info.province) {\n                case \"北京市\":\n                    posdesc = \"北——京——欢迎你~~~\";\n                    break;\n                case \"天津市\":\n                    posdesc = \"讲段相声吧\";\n                    break;\n                case \"河北省\":\n                    posdesc = \"山势巍巍成壁垒，天下雄关铁马金戈由此向，无限江山\";\n                    break;\n                case \"山西省\":\n                    posdesc = \"展开坐具长三尺，已占山河五百余\";\n                    break;\n                case \"内蒙古自治区\":\n                    posdesc = \"天苍苍，野茫茫，风吹草低见牛羊\";\n                    break;\n                case \"辽宁省\":\n                    posdesc = \"我想吃烤鸡架！\";\n                    break;\n                case \"吉林省\":\n                    posdesc = \"状元阁就是东北烧烤之王\";\n                    break;\n                case \"黑龙江省\":\n                    posdesc = \"很喜欢哈尔滨大剧院\";\n                    break;\n                case \"上海市\":\n                    posdesc = \"众所周知，中国只有两个城市\";\n                    break;\n                case \"江苏省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"南京市\":\n                            posdesc = \"这是我挺想去的城市啦\";\n                            break;\n                        case \"苏州市\":\n                            posdesc = \"上有天堂，下有苏杭\";\n                            break;\n                        default:\n                            posdesc = \"散装是必须要散装的\";\n                            break;\n                    }\n                    break;\n                case \"浙江省\":\n                    posdesc = \"东风渐绿西湖柳，雁已还人未南归\";\n                    break;\n                case \"河南省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"郑州市\":\n                            posdesc = \"豫州之域，天地之中\";\n                            break;\n                        case \"南阳市\":\n                            posdesc = \"臣本布衣，躬耕于南阳此南阳非彼南阳！\";\n                            break;\n                        case \"驻马店市\":\n                            posdesc = \"峰峰有奇石，石石挟仙气嵖岈山的花很美哦！\";\n                            break;\n                        case \"开封市\":\n                            posdesc = \"刚正不阿包青天\";\n                            break;\n                        case \"洛阳市\":\n                            posdesc = \"洛阳牡丹甲天下\";\n                            break;\n                        default:\n                            posdesc = \"可否带我品尝河南烩面啦？\";\n                            break;\n                    }\n                    break;\n                case \"安徽省\":\n                    posdesc = \"蚌埠住了，芜湖起飞\";\n                    break;\n                case \"福建省\":\n                    posdesc = \"井邑白云间，岩城远带山\";\n                    break;\n                case \"江西省\":\n                    posdesc = \"落霞与孤鹜齐飞，秋水共长天一色\";\n                    break;\n                case \"山东省\":\n                    posdesc = \"遥望齐州九点烟，一泓海水杯中泻\";\n                    break;\n                case \"湖北省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"黄冈市\":\n                            posdesc = \"红安将军县！辈出将才！\";\n                            break;\n                        default:\n                            posdesc = \"来碗热干面~\";\n                            break;\n                    }\n                    break;\n                case \"湖南省\":\n                    posdesc = \"74751，长沙斯塔克\";\n                    break;\n                case \"广东省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"广州市\":\n                            posdesc = \"看小蛮腰，喝早茶了嘛~\";\n                            break;\n                        case \"深圳市\":\n                            switch (ipLoacation.result.ad_info.district) {\n                                case \"坪山区\":\n                                    posdesc = \"今天你996了嘛\";\n                                    break;\n                                default:\n                                    posdesc = \"今天你996了嘛~\";\n                                    break;\n                            }\n                            break;\n                        case \"阳江市\":\n                            posdesc = \"阳春合水！博主家乡~ 欢迎来玩~\";\n                            break;\n\t\t\tcase \"茂名市\":\n\t\t            posdesc = \"你真幸运，跟我toad一个城市~\";\n\t\t\t    break;\n                        default:\n                            posdesc = \"来两斤福建人~\";\n                            break;\n                    }\n                    break;\n                case \"广西壮族自治区\":\n                    posdesc = \"桂林山水甲天下\";\n                    break;\n                case \"海南省\":\n                    posdesc = \"朝观日出逐白浪，夕看云起收霞光\";\n                    break;\n                case \"四川省\":\n                    posdesc = \"康康川妹子\";\n                    break;\n                case \"贵州省\":\n                    posdesc = \"茅台，学生，再塞200\";\n                    break;\n                case \"云南省\":\n                    posdesc = \"玉龙飞舞云缠绕，万仞冰川直耸天\";\n                    break;\n                case \"西藏自治区\":\n                    posdesc = \"躺在茫茫草原上，仰望蓝天\";\n                    break;\n                case \"陕西省\":\n                    posdesc = \"来份臊子面加馍\";\n                    break;\n                case \"甘肃省\":\n                    posdesc = \"羌笛何须怨杨柳，春风不度玉门关\";\n                    break;\n                case \"青海省\":\n                    posdesc = \"牛肉干和老酸奶都好好吃\";\n                    break;\n                case \"宁夏回族自治区\":\n                    posdesc = \"大漠孤烟直，长河落日圆\";\n                    break;\n                case \"新疆维吾尔自治区\":\n                    posdesc = \"驼铃古道丝绸路，胡马犹闻唐汉风\";\n                    break;\n                case \"台湾省\":\n                    posdesc = \"我在这头，大陆在那头\";\n                    break;\n                case \"香港特别行政区\":\n                    posdesc = \"永定贼有残留地鬼嚎，迎击光非岁玉\";\n                    break;\n                case \"澳门特别行政区\":\n                    posdesc = \"性感荷官，在线发牌\";\n                    break;\n                default:\n                    posdesc = \"带我去你的城市逛逛吧！\";\n                    break;\n            }\n            break;\n        default:\n            posdesc = \"你这是哪里我不知道哇\";\n            break;\n    }\n\n    //根据本地时间切换欢迎语\n    let timeChange;\n    let date = new Date();\n    if (date.getHours() >= 5 && date.getHours() < 11) timeChange = \"<span class='welcome-time'>🌤️ 早上好，先去吃早餐哇</span>\";\n    else if (date.getHours() >= 11 && date.getHours() < 13) timeChange = \"<span class='welcome-time'>☀️ 中午好，起来吃午饭了哇</span>\";\n    else if (date.getHours() >= 13 && date.getHours() < 17) timeChange = \"<span class='welcome-time'>🕞 下午好，赶紧出去晒一晒</span>\";\n    else if (date.getHours() >= 17 && date.getHours() < 19) timeChange = \"<span class='welcome-time'>🚶‍♂️ 下班下课回家了哇</span>\";\n    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = \"<span class='welcome-time'>🌙 晚上去吃点宵夜罢</span>\";\n    else timeChange = \"<span class='welcome-time'>我nm，现在都几点了哇，还不去睡觉啊，在不去我就给你打成烧饼哇</span>\";\n\n    try {\n        //自定义文本和需要放的位置\n        document.getElementById(\"welcome-info\").innerHTML =\n            `<span>欢迎~</span><br><span><span style=\"color: var(--icat-card-welcome);font-weight: bold;\">${pos}</span> 的喵友</span><br><span class=\"welcome-message\">${posdesc}</span><br>当前位置距博主约 <b><span style=\"color: var(--icat-card-welcome);font-weight: bold;\">${dist}</span></b> 公里！<br><span>您的IP地址为：${ip}</span><br>${timeChange}`;\n    } catch (err) {\n        // console.log(\"Pjax无法获取#welcome-info元素🙄🙄🙄\")\n    }\n}\n","categories":[],"tags":[]},{"title":"staxle 页面","url":"http://toad114514.github.io/staxle/index.html","content":"<h1 id=\"Staxle\"><a href=\"#Staxle\" class=\"headerlink\" title=\"Staxle\"></a>Staxle</h1><p>开源的 termux 和 linux 发行版的工具集，新手小白的新选择</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"在-termux-上\"><a href=\"#在-termux-上\" class=\"headerlink\" title=\"在 termux 上\"></a>在 termux 上</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg install python3 git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/toad114514/staxle.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> staxle</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> -x ./install.sh</span><br><span class=\"line\">./install.sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"ubuntu-debian\"><a href=\"#ubuntu-debian\" class=\"headerlink\" title=\"ubuntu&#x2F;debian\"></a>ubuntu&#x2F;debian</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install python3 git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/toad114514/staxle.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> staxle</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> -x ./install.sh</span><br><span class=\"line\">./install.sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"Arch-linux\"><a href=\"#Arch-linux\" class=\"headerlink\" title=\"Arch linux\"></a>Arch linux</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S python3 git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/toad114514/staxle.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> staxle</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> -x ./install.sh</span><br><span class=\"line\">./install.sh</span><br></pre></td></tr></table></figure>\n<h1 id=\"在线文件\"><a href=\"#在线文件\" class=\"headerlink\" title=\"在线文件\"></a>在线文件</h1><p>本站提供了staxle的升级配置等文件，帮助你进一步使用staxle。</p>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p>正在实验开发中，还未提供下载链接。</p>\n","categories":[],"tags":[]},{"title":"其他链接","url":"http://toad114514.github.io/link/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://toad114514.github.io/staxle/version.json","content":"{\"version\":\"1.03a\",\"version-code\":23,\"version-type\":\"beta\",\"version-desc\":\"更新了一些简单的东西\"}","categories":[],"tags":[]},{"title":"标签","url":"http://toad114514.github.io/tags/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://toad114514.github.io/css/runtime.css","content":"div#runtime {\n    width: fit-content;\n    color: #fff;\n    padding: 0 10px;\n    border-radius: 10px;\n    background-color: rgba(0, 0, 0, 0.7);\n}\n\n[data-theme=\"dark\"] div#runtime {\n    color: #28b4c8;\n    box-shadow: 0 0 5px rgba(28, 69, 218, 0.71);\n}","categories":[],"tags":[]},{"title":"","url":"http://toad114514.github.io/js/runtime.js","content":"setInterval(() => {\n    // let create_time = Math.round(new Date('2021-10-15 00:00:00').getTime() / 1000); //在此行修改建站时间\n    // 有苹果用户发现safari浏览器不能正常运行，百度了一下发现是格式化的问题，改成下面这种应该就可以了。感谢反馈。\n    let create_time = Math.round(new Date('2023/6/10 17:25:13').getTime() / 1000); //在此行修改建站时间\n    let timestamp = Math.round((new Date().getTime()) / 1000);\n    let second = timestamp - create_time;\n    let time = new Array(0, 0, 0, 0, 0);\n\n    var nol = function(h) {\n        return h > 9 ? h : '0' + h;\n    }\n    if (second >= 365 * 24 * 3600) {\n        time[0] = parseInt(second / (365 * 24 * 3600));\n        second %= 365 * 24 * 3600;\n    }\n    if (second >= 24 * 3600) {\n        time[1] = parseInt(second / (24 * 3600));\n        second %= 24 * 3600;\n    }\n    if (second >= 3600) {\n        time[2] = nol(parseInt(second / 3600));\n        second %= 3600;\n    }\n    if (second >= 60) {\n        time[3] = nol(parseInt(second / 60));\n        second %= 60;\n    }\n    if (second >= 0) {\n        time[4] = nol(second);\n    }\n    let currentTimeHtml = \"\"\n    current += \"本站已运行 \"\n    if (time[0] != 0) {\n        currentTimeHtml += time[0] + ' 年 '\n    }\n    currentTimeHtml += time[1] + ' 日 ' + time[2] + ' 时 ' + time[3] + ' 分 ' + time[4] + ' 秒 ';\n    document.getElementById(\"runtime\").innerHTML = currentTimeHtml;\n}, 1000);","categories":[],"tags":[]},{"title":"","url":"http://toad114514.github.io/css/new-post.css","content":"#recent-posts>.recent-post-item {\n    position: relative;\n}\n\n/* 最新文章图标 */\n.newPost-left,\n.newPost-right {\n    position: absolute;\n    top: 0;\n    color: white;\n    padding: 0 15px;\n    background-color: #49b1f5;\n    border-radius: 0 0 10px 10px;\n}\n\n.newPost-left {\n    left: 15px;\n}\n\n.newPost-right {\n    right: 15px;\n}","categories":[],"tags":[]}]