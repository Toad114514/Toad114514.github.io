<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Toads blog</title>
  <icon>https://img2.imgtp.com/2024/04/24/ObfDQpBe.jpg</icon>
  <subtitle>float code center</subtitle>
  <link href="http://toad114514.github.io/atom.xml" rel="self"/>
  
  <link href="http://toad114514.github.io/"/>
  <updated>2024-08-15T18:38:32.187Z</updated>
  <id>http://toad114514.github.io/</id>
  
  <author>
    <name>Toad114514</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>你好逝界</title>
    <link href="http://toad114514.github.io/2024/08/16/hello-world/"/>
    <id>http://toad114514.github.io/2024/08/16/hello-world/</id>
    <published>2024-08-15T18:38:32.187Z</published>
    <updated>2024-08-15T18:38:32.187Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到 <a href="https://hexo.io/">Hexo</a>! 这是你的最早的文章。 点击 <a href="https://hexo.io/docs/">文档</a> 查看更多信息. 如果你在使用 Hexo 时出现了 Bugsssssssssss, 你可以在 <a href="https://hexo.io/docs/troubleshooting.html">这里</a> 找到解决方案或者去 <a href="https://github.com/hexojs/hexo/issues">GitHub</a> 提交 issues.</p><h2 id="快速失败（不是"><a href="#快速失败（不是" class="headerlink" title="快速失败（不是"></a>快速失败（不是</h2><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>更多信息请看 <a href="https://hexo.io/docs/writing.html">写作</a></p><h3 id="运行服务坤"><a href="#运行服务坤" class="headerlink" title="运行服务坤"></a>运行服务坤</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>更多信息请看: <a href="https://hexo.io/docs/server.html">服务器</a></p><h3 id="创建静态页面"><a href="#创建静态页面" class="headerlink" title="创建静态页面"></a>创建静态页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>更多信息请看: <a href="https://hexo.io/docs/generating.html">创建静态页面</a></p><h3 id="部署到网站"><a href="#部署到网站" class="headerlink" title="部署到网站"></a>部署到网站</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>更多请看: <a href="https://hexo.io/docs/one-command-deployment.html">部署</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;欢迎来到 &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! 这是你的最早的文章。 点击 &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;文档&lt;/a&gt; 查看更多信息. 如果你在使用 Hexo 时出现了 Bugsssssssssss, 你</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Apache2 完整安装指导</title>
    <link href="http://toad114514.github.io/2024/05/26/apache2-ins/"/>
    <id>http://toad114514.github.io/2024/05/26/apache2-ins/</id>
    <published>2024-05-26T15:02:25.000Z</published>
    <updated>2024-08-15T18:38:32.187Z</updated>
    
    <content type="html"><![CDATA[<div class="note simple info flat"><p>本教程适用于termux和linux发行版本，请根据代码注释选择合适的代码</p></div><h1 id="了解-Apache"><a href="#了解-Apache" class="headerlink" title="了解 Apache"></a>了解 Apache</h1><p>Apache，像羽毛一样的图标，全球服务器使用量第一的服务器软件，扩展高，安全高都是对Apache最好的标志。<br>在termux proot容器中，直接安装好编译的nginx是无法登陆的，所以apache便成了替代品。<br>apache的1.3版本早已占领上世纪90年代的服务器，所以现在apache便成了第一<br>2.x更是比1.3强劲更多<br>apache还是debian系发行版的最好搭配<br>好了不说了，直接开始安装好吧</p><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p>考虑到源码安装方式在termux、proot环境和旧服务器中编译缓慢，这里优先考虑deb安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在termux上</span></span><br><span class="line">pkg install apache2</span><br><span class="line"><span class="comment"># 在debian系发行版和termux proot上(proot仅debian系发行版)</span></span><br><span class="line">apt install apache2</span><br></pre></td></tr></table></figure><p>安装好上述功能后就要开始配置了</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="在-termux-上"><a href="#在-termux-上" class="headerlink" title="在 termux 上"></a>在 termux 上</h2><p>在termux上，你无需做任何配置。因为你只知道一个文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/data/data/com.termux/files/usr/share/apache2/default-site/htdocs/</span><br></pre></td></tr></table></figure><p>这个文件夹是网站文件的根目录，你只需要获得访问权限并使用cp命令将你在的文件复制到这里即可<br>如果你仍然要在手机存储的某个目录作为apache的文件夹的话，那么请等一等，因为明天是周一我要回学校，我得早睡，写完这个文章后便没时间更正了，不然明天在学校睡觉直接被真实。</p><h2 id="在-debian-系发行版和termux-proot上"><a href="#在-debian-系发行版和termux-proot上" class="headerlink" title="在 debian 系发行版和termux proot上"></a>在 debian 系发行版和termux proot上</h2><h3 id="apache-配置文件夹"><a href="#apache-配置文件夹" class="headerlink" title="apache 配置文件夹"></a>apache 配置文件夹</h3><p>使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/apache2</span><br></pre></td></tr></table></figure><p>移步到该文件夹，这里便是apache的配置文件。</p><h3 id="关于默认配置文件的描述"><a href="#关于默认配置文件的描述" class="headerlink" title="关于默认配置文件的描述"></a>关于默认配置文件的描述</h3><ol><li>&#x2F;etc&#x2F;apache2&#x2F;apache2.conf</li></ol><ul><li>主要配置文件，在该文件末尾include了其他的配置文件</li></ul><ol start="2"><li>&#x2F;etc&#x2F;apache2&#x2F;ports.conf</li></ol><ul><li>与主配置一个文件夹，用于配置端口，默认都需要重新配置，termux proot下必须重新配置</li></ul><ol start="3"><li>&#x2F;etc&#x2F;apache2&#x2F;envvars</li></ol><ul><li>定义apaxhe用户的配置文件，默认为www-data</li></ul><ol start="4"><li>&#x2F;etc&#x2F;apache2&#x2F;mods-enabled&#x2F;dir.conf</li></ol><ul><li>默认主页的配置文件</li></ul><ol start="5"><li>&#x2F;etc&#x2F;apache2&#x2F;site-enabled&#x2F;000-default.conf</li></ol><ul><li>默认的主机配置文件</li></ul><h3 id="主要配置"><a href="#主要配置" class="headerlink" title="主要配置"></a>主要配置</h3><p>首先重新配置配置端口<br><em>Vim，启动</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apache2/ports.conf </span><br></pre></td></tr></table></figure><p>先在ports.conf修改监听端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># If you just change the port or add more ports here, you will likely also</span><br><span class="line"># have to change the VirtualHost statement in</span><br><span class="line"># /etc/apache2/sites-enabled/000-default.conf</span><br><span class="line"></span><br><span class="line">Listen 80 # 在这里修改监听端口号，这里记住了后面要考</span><br><span class="line"></span><br><span class="line">&lt;IfModule ssl_module&gt;</span><br><span class="line">        Listen 443</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line"></span><br><span class="line">&lt;IfModule mod_gnutls.c&gt;</span><br><span class="line">        Listen 443</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line"></span><br><span class="line"># vim: syntax=apache ts=4 sw=4 sts=4 sr noet</span><br></pre></td></tr></table></figure><p>然后修改主机端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apache2/site-available/000-default.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt; # 把这里面的80换成刚才在 ports.conf 里输入的端口号</span><br><span class="line">        # The ServerName directive sets the request scheme, hostname and port that</span><br><span class="line">        # the server uses to identify itself. This is used when creating</span><br><span class="line">        # redirection URLs. In the context of virtual hosts, the ServerName</span><br><span class="line">        # specifies what hostname must appear in the request&#x27;s Host: header to</span><br><span class="line">        # match this virtual host. For the default virtual host (this file) this</span><br><span class="line">        # value is not decisive as it is used as a last resort host regardless.</span><br><span class="line">        # However, you must set it for any further virtual host explicitly.</span><br><span class="line">        #ServerName www.example.com</span><br><span class="line"></span><br><span class="line">        ServerAdmin xiaolan2332021@163.com</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="termux"><a href="#termux" class="headerlink" title="termux"></a>termux</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">apachectl</span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">pkill -9 apache2</span><br></pre></td></tr></table></figure><h2 id="debian系发行版和proot"><a href="#debian系发行版和proot" class="headerlink" title="debian系发行版和proot"></a>debian系发行版和proot</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">/etc/init.d/apache2 start</span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">/etc/init.d/apache2 status</span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">/etc/init.d/apache2 stop</span><br></pre></td></tr></table></figure><p>查看状态时，如果提前运行了启动指令，则显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* apache2 is running</span><br></pre></td></tr></table></figure><h1 id="查看运行结果"><a href="#查看运行结果" class="headerlink" title="查看运行结果"></a>查看运行结果</h1><p>打开任意浏览器，然后输入 localhost: 加在ports.conf里输入的端口号 (localhost后面的冒号要带上)，无任何问题时应显示：<br><img src="https://img2.imgtp.com/2024/05/26/9vx5cD1w.jpg" alt="运行结果"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>nginx的替代品<br>如果deb包安装不行的话就去网上找源码安装罢<br>还要想要试试nginx的可以去看<a href="https://toad114514.github.io/2024/01/12/termux-nginx/">这篇文章</a><br>不想折腾就备个ksweb罢<br>到时候给大家整个php安装并在apache上运行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note simple info flat&quot;&gt;&lt;p&gt;本教程适用于termux和linux发行版本，请根据代码注释选择合适的代码&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&quot;了解-Apache&quot;&gt;&lt;a href=&quot;#了解-Apache&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="科技与狠活" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80%E4%B8%8E%E7%8B%A0%E6%B4%BB/"/>
    
    
    <category term="服务器" scheme="http://toad114514.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="termux" scheme="http://toad114514.github.io/tags/termux/"/>
    
    <category term="Apache" scheme="http://toad114514.github.io/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>体验纯汇编系统 KolibriOS</title>
    <link href="http://toad114514.github.io/2024/05/24/kolibrios-try/"/>
    <id>http://toad114514.github.io/2024/05/24/kolibrios-try/</id>
    <published>2024-05-23T18:30:42.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p>在纯汇编系统领域上，MenuetOS属于是最早的。MenuetOS出来后，过了一段时间，便从MenuetOS上剥离了一个新的系统，<strong>KolibriOS</strong></p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><a href="www.kolibrios.org/en/download">KolibriOS</a><br>登陆该地址后，选择 LiveCD Image 的 English 版本<br>等待一会便可下载完成<br>通过7z将解压出来kolibrios.iso文件</p><h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><p>termux+qemu<br>aqemu配置：</p><h1 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h1><h2 id="文件管理器"><a href="#文件管理器" class="headerlink" title="文件管理器"></a>文件管理器</h2><p>总共有三个文件管理器，KFM2、EFM和Far<br>三个文件管理器的风格不同<br>KFM2类似于Far的样式，EFM是winxp的风格，Far应该是dos的移植版本</p><h2 id="移植应用"><a href="#移植应用" class="headerlink" title="移植应用"></a>移植应用</h2><p>这些应用要不是开源修改，要不就是在DOS上移植过来了</p><p>毕竟他们的开发者也是有移植的力量的<br>这里面熟悉的应该只有dosbox罢</p><h2 id="图片管理器-图片编辑"><a href="#图片管理器-图片编辑" class="headerlink" title="图片管理器&#x2F;图片编辑"></a>图片管理器&#x2F;图片编辑</h2><p>两个图片管理器，zSea 和 KIV<br>感觉zSea比KIV比较好</p><p>ANIMAGE 简易的画图工具<br>当然，Kolibrios里面的画图工具有好几个</p><p>还有配色器</p><h2 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h2><p>kolibrios的开发者们也是直接塞了3 多款的游戏，大部分都是益智游戏，小游戏和移植的DOS大型游戏(在纯汇编系统里属于是大型游戏)</p><p>分成了怀旧类、Arcade、大型游戏和益智游戏四个大类，其中大型游戏也是塞了四个，这四个游戏也是移植来的</p><p>体验不错，大部分游戏基本也是比较好玩的</p><h2 id="互联网"><a href="#互联网" class="headerlink" title="互联网"></a>互联网</h2><p>还有互联网，这浏览器也是比较nb<br>唯一缺点是不能访问https网站</p><p>包括各种客户端(IRC、FTP、VNC等)、网络实用工具、全文字浏览器和一个FTP服务器</p><h2 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h2><p>在系统设置里面，不仅拥有各种的基础设置，还有各种的监测工具和硬件测试工具。</p><p>这个就不多说</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>整体上看，比menuetos好很多，menuetos已经停更很久了。<br>kolibrios在应用生态还是很好的<br>下次给大家试一下menuetos</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在纯汇编系统领域上，MenuetOS属于是最早的。MenuetOS出来后，过了一段时间，便从MenuetOS上剥离了一个新的系统，&lt;strong&gt;KolibriOS&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="科技与狠活" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80%E4%B8%8E%E7%8B%A0%E6%B4%BB/"/>
    
    
    <category term="系统" scheme="http://toad114514.github.io/tags/%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="操作系统" scheme="http://toad114514.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="kolibrios" scheme="http://toad114514.github.io/tags/kolibrios/"/>
    
  </entry>
  
  <entry>
    <title>HTML 模板语言 pug 基础语法</title>
    <link href="http://toad114514.github.io/2024/05/15/pug-tuorist/"/>
    <id>http://toad114514.github.io/2024/05/15/pug-tuorist/</id>
    <published>2024-05-15T04:59:47.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<div class="note info simple"><p><strong>如果你想要对Hexo主题进行深度美化，且你要进行深度美化的主题模板引擎使用的就是pug(如butterfly)，则该文章将帮助到你</strong></p></div><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>给你的博客美化是博客建站中感觉重要但又可以丢掉的一点，大部分人会给自己的网站添加细节。但网上的Hexo美化还要分主题美化，一些你想要的美化功能只能在其他主题上使用，或者网上的这些美化你不喜欢，想自己整美化，那么本文章将帮助你初步了解pug，帮助你可以快速的在基于pug得主题上美化。</p><h1 id="啥是Pug？"><a href="#啥是Pug？" class="headerlink" title="啥是Pug？"></a>啥是Pug？</h1><blockquote><p>Pug 是一个用 JavaScript 实现的高性能的模板引擎，支持 Node.js 和浏览器运行环境，其灵感来自 Haml 项目。</p></blockquote><h1 id="判断主题是否使用pug"><a href="#判断主题是否使用pug" class="headerlink" title="判断主题是否使用pug"></a>判断主题是否使用pug</h1><p>在一些主题上会用到pug。但不是完全。<br>打开如下文件夹：<br>直接存放在themes文件夹</p><blockquote><p>博客根目录&#x2F;themes&#x2F;主题名&#x2F;layout<br>npm方式安装<br>博客根目录&#x2F;node_modules&#x2F;hexo-theme-主题名&#x2F;layout<br>如果发现该文件夹内文件后缀名为.pug，则该主题使用了pug。</p></blockquote><h1 id="安装pug"><a href="#安装pug" class="headerlink" title="安装pug"></a>安装pug</h1><p>npm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pug</span><br></pre></td></tr></table></figure><p>pug 命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install pug-cli -g</span><br><span class="line"><span class="comment"># 查看安装情况</span></span><br><span class="line"><span class="comment"># 没找到命令请使用 npx pug --help</span></span><br><span class="line">pug --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>一般情况下，pug在安装主题时便已安装完成。</p><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a(href=&quot;toad114514.github.io&quot;)</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">a(href=&quot;#&quot;)</span><br></pre></td></tr></table></figure><p>标签属性和 html 类似，但其实是 js 的普通表达式。允许使用逗号作为属性分隔符，不加也可以。<br><strong>本页所有事例中包括管道符号”|”的行都用于控制空格上</strong><br>支持所有 js 表达式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//- 已登录</span><br><span class="line">- var authenticated = true</span><br><span class="line">body(class=authenticated ? &#x27;authed&#x27; : &#x27;anon&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">iframe(</span><br><span class="line">  scr=&quot;#&quot;</span><br><span class="line">  width=&quot;150&quot;</span><br><span class="line">  height=&quot;150&quot;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>pug允许把属性分多行编写。</p><p>如果属性里有特殊字符，且和 js 语法产生冲突，则需要用 “” 或 ‘’ 括起来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div(class=&quot;my-class&quot; &quot;(click)&quot;=&quot;get()&quot;)</span><br></pre></td></tr></table></figure><p>如果想要在属性中使用变量，则可以使用js写属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- var url = &#x27;pug-test.html&#x27;;</span><br><span class="line">a(href=&#x27;/&#x27; + url) 链接</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">- url = &#x27;https://example.com/&#x27;</span><br><span class="line">a(href=url) 另一个链接</span><br></pre></td></tr></table></figure><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><p>case 属于 js 的 switch 缩写，接受如下形式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- var num = 5</span><br><span class="line">case num</span><br><span class="line">  when 3</span><br><span class="line">    p 数字是5</span><br><span class="line">  when 5</span><br><span class="line">    p 数字是5</span><br><span class="line">  default</span><br><span class="line">    p 数字是 $(num)</span><br></pre></td></tr></table></figure><p>可以像js一样使用分支传递</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">case num</span><br><span class="line">  when 3</span><br><span class="line">  when 5</span><br><span class="line">    p 数字应该是3或5</span><br></pre></td></tr></table></figure><p>不想输出任何东西，可以明确性的加上break语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">case num</span><br><span class="line">  when 3</span><br><span class="line">    - break</span><br></pre></td></tr></table></figure><p>可以使用块展开的语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- var num = 5</span><br><span class="line">case num</span><br><span class="line">  when 3: p 数字是3</span><br><span class="line">  when 5: p 数字是5</span><br><span class="line">  default: p 数字是 $(num)</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>pug提供了在模板中嵌入js代码的可能<br>不输出的代码<br>使用 “-“ 开始一段不输出的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- for (var i = 0; i &lt; 5; i++)</span><br><span class="line">  li $(i)</span><br></pre></td></tr></table></figure><p>带输出的代码<br>使用 “&#x3D;” 开始一段带输出的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p</span><br><span class="line">  = &quot;&lt;转义&gt; 的代码&quot;</span><br><span class="line">// 行内形式</span><br><span class="line">p= &quot;&lt;转义&gt; 的代码&quot;</span><br></pre></td></tr></table></figure><p>不转义的带输出代码</p><div class="note danger simple"><p><strong>不安全警告</strong><br>未转义的字符输出<strong>是危险的</strong>，可能导致<strong>跨站脚本攻击</strong></p></div><p>用 “!&#x3D;” 开始一段未转义的带输出字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p </span><br><span class="line"> != &quot;&lt;strong&gt;没转义&lt;/strong&gt;的代码&quot;</span><br><span class="line">// 行内形式</span><br><span class="line">p!= &quot;&lt;strong&gt;没转义&lt;/strong&gt;&quot; + &quot;的代码&quot;</span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>带输出的注释和js注释一样，它们类似标签，能生成对应的html注释，而且必须单独一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// legacy</span><br><span class="line">p good</span><br><span class="line">p 牢大我想你了</span><br></pre></td></tr></table></figure><p>也有不输出的注释，在后期html渲染时不会出现对应的注释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//- 仅存在于pug模板中的注释</span><br><span class="line">p man</span><br><span class="line">p whatcanisay</span><br><span class="line">p manbaout</span><br></pre></td></tr></table></figure><p>一个正常的块注释如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">body</span><br><span class="line">  //- </span><br><span class="line">    这里注释后期</span><br><span class="line">    不会生成对应的html注释</span><br><span class="line">    写多少字都行</span><br><span class="line">    凉屋赶紧加强黑骑</span><br><span class="line">  //</span><br><span class="line">    这里注释</span><br><span class="line">    后期会生成对应的html注释</span><br><span class="line">    怎么写都行</span><br><span class="line">    张浩没只因</span><br></pre></td></tr></table></figure><p>条件注释<br>用于分辨新老ie浏览器的特殊标识，允许直接写html风格的注释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">doctype html</span><br><span class="line">&lt;!--[if IE 8]&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot; class=&quot;lt-ie9&quot;&gt;</span><br><span class="line">&lt;![endif]--&gt;</span><br><span class="line">&lt;!--[if gt IE 8]&gt;&lt;!--&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;!--&lt;![endif]--&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><p>pug条件判断的一般形式的括号是可选的，所以其实可以省略开头的 “-“，效果完全相同，类似一个常规js语法形式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- var manba = ( msg: &quot;out&quot; )</span><br><span class="line">- var uncomment = true</span><br><span class="line">#user</span><br><span class="line">  if manba.msg</span><br><span class="line">    h2.yellow manba</span><br><span class="line">    p.msg= manba.msg</span><br><span class="line">  else if uncomment</span><br><span class="line">    h2.blue 消息</span><br><span class="line">    p.msg 没有添加消息</span><br><span class="line">  else</span><br><span class="line">    h2.red 消息</span><br><span class="line">    没消息</span><br></pre></td></tr></table></figure><p>oug同样提供反义版本 “unless”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\\\\\\\\\\ a.pug &lt;</span><br><span class="line">unless user.isAnonymous</span><br><span class="line">  p 您已经以 #&#123;user.name&#125; 的身份登录。</span><br><span class="line">\\\\\\\\\\ b.pug &gt;</span><br><span class="line">if !user.isAnonymous</span><br><span class="line">  p 您已经以 #&#123;user.name&#125; 的身份登录。</span><br></pre></td></tr></table></figure><h2 id="包含"><a href="#包含" class="headerlink" title="包含"></a>包含</h2><p>包含允许你把另外的内容插入进来<br>main.pug</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">doctype html</span><br><span class="line">html</span><br><span class="line">  include inc/head.pug</span><br><span class="line">  body</span><br><span class="line">    p 欢迎</span><br><span class="line">    p.manba 牢大我想你了</span><br><span class="line">    include inc/manba.pug</span><br><span class="line">    include inc/foot.pug</span><br></pre></td></tr></table></figure><p>head.pug</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">head</span><br><span class="line">  title 扣1复活牢大</span><br><span class="line">  script(src=&quot;/js/manba.js&quot;)</span><br></pre></td></tr></table></figure><p>manba.pug</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img(src=&quot;/img/laoda.jpg&quot;)</span><br><span class="line">p.red 肘击24次只为纪念牢大</span><br></pre></td></tr></table></figure><p>foot.pug</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">footer</span><br><span class="line">  p give my like star kobe branyt</span><br></pre></td></tr></table></figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>pug允许使用 block 和 extends 关键字进行模板继承<br>layout.pug 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">doctype html</span><br><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    title 我要把凉屋炸了</span><br><span class="line">    block script</span><br><span class="line">    script(src=&quot;js/liangwu.js&quot;)</span><br><span class="line">  body</span><br><span class="line">    block content</span><br><span class="line">    block foot</span><br><span class="line">      #footer</span><br><span class="line">        p 炸凉屋时间！</span><br></pre></td></tr></table></figure><p>扩展布局时，只需要在新的文件里使用 extends 指出被继承的模板路径即可<br>现在可以定义诺干个新块去覆盖父模板的父块<br>ext.pug 文件里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">extends layout.pug</span><br><span class="line"></span><br><span class="line">block script</span><br><span class="line">  script(src=&quot;js/zha.js&quot;)</span><br><span class="line">block content</span><br><span class="line">   h1 炸</span><br><span class="line">   p 炸凉屋</span><br><span class="line">   - var ways = [&quot;小猫牢底&quot;, &quot;PS5&quot;, &quot;统帅力&quot;]</span><br><span class="line">   p 你可以用以下方法来炸凉屋</span><br><span class="line">   each waysnum in ways</span><br><span class="line">     p= waysnum</span><br></pre></td></tr></table></figure><p>如下例子，content暴露出了”zha”和”zhuka”两个新块用于扩展。当然，子模块也可以把整个content覆盖。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">block content</span><br><span class="line">  .zha</span><br><span class="line">    block zha</span><br><span class="line">      p 没有任何东西</span><br><span class="line">  .zhuka</span><br><span class="line">    block zhuka</span><br><span class="line">      i 把凉屋炸了</span><br></pre></td></tr></table></figure><p>如果仅仅简单填一些东西上去而不是覆盖，这时便可使用 append &#x2F; prepend。<br>append 在尾部部添加内容<br>prepend 在头部添加内容<br>如果你想要额外添砖加瓦，而不是推平重来，则可以这样做</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">block append head</span><br><span class="line">  sxript(src=&quot;zhuka.js&quot;)</span><br></pre></td></tr></table></figure><p>在有 append 或 prepend 情况下，可以将 block 省略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">append head</span><br><span class="line">  script(src=&quot;zhuka.js&quot;)</span><br></pre></td></tr></table></figure><h2 id="嵌入"><a href="#嵌入" class="headerlink" title="嵌入"></a>嵌入</h2><p>pug提供多种嵌入方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- var title = &quot;local boradcast 24.5.16&quot;</span><br><span class="line">- var authon = &quot;fimright-lztv&quot;</span><br><span class="line">- var zy = &quot;&lt;span&gt;温度 27 度&lt;/span&gt;&quot;</span><br><span class="line">h1= title</span><br><span class="line">p #(authon) 制作</span><br><span class="line">p 今日 #(zy)</span><br></pre></td></tr></table></figure><p>不仅可以嵌入js，也可以嵌入pug书写的标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">p.</span><br><span class="line">  这是一个很长很长而且还很无聊的段落，还没有结束，是的，非常非常地长。</span><br><span class="line">  突然出现了一个 #[strong 充满力量感的单词]，这确实让人难以 #[em 忽视]。</span><br><span class="line">p.</span><br><span class="line">  使用带属性的嵌入标签的例子：</span><br><span class="line">  #[q(lang=&quot;es&quot;) ¡Hola Mundo!]</span><br></pre></td></tr></table></figure><h2 id="迭代-循环"><a href="#迭代-循环" class="headerlink" title="迭代(循环)"></a>迭代(循环)</h2><p>pug提供了两种迭代方案，each 和 while<br>each迭代<br>pug的头等迭代方式，让你在模板中迭代数据和对象更方便</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ul</span><br><span class="line">  each num in [1, 2, 3, 4, 5]</span><br><span class="line">    li 第 #(num) 个 列表</span><br></pre></td></tr></table></figure><p>允许在迭代是获得索引值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ul</span><br><span class="line">  each num, index in [&quot;祖卡&quot;, &quot;分裂&quot;, &quot;美杜莎法袍&quot;]</span><br><span class="line">    li= index + &quot;:&quot; + num</span><br></pre></td></tr></table></figure><p>同时，也允许获取键值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ul</span><br><span class="line">  each num, index in &#123;1:&quot;祖卡&quot;, 2:&quot;分裂&quot;, 3:&quot;美杜莎法袍&quot;&#125;</span><br><span class="line">    li= index + &quot;:&quot; + num</span><br></pre></td></tr></table></figure><p>while 循环<br>利用 while 创建一个循环</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- var i = 0</span><br><span class="line">ul</span><br><span class="line">  while i &lt; 4</span><br><span class="line">    li= i++</span><br></pre></td></tr></table></figure><h2 id="混入"><a href="#混入" class="headerlink" title="混入"></a>混入</h2><p>混用允许你在pug中重复使用一整个代码块的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//-定义</span><br><span class="line">mixin list</span><br><span class="line">  ul </span><br><span class="line">    li a</span><br><span class="line">    li b</span><br><span class="line">  p lioMessy</span><br><span class="line">//- 使用</span><br><span class="line">+list</span><br><span class="line">p useItAgain</span><br><span class="line">+list</span><br></pre></td></tr></table></figure><p>允许传递函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mixin brofk(num)</span><br><span class="line">  li.fk= &quot;fk&quot; + num</span><br><span class="line">ul</span><br><span class="line">  +brofk&#123;1&#125;</span><br><span class="line">  +brofk(996)</span><br><span class="line">  +brofk(114514)</span><br></pre></td></tr></table></figure><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>由于学业等问题，本文章并未写完。<br>本文章将会在1-2天内写完</p><p>现在，你懂了吗？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info simple&quot;&gt;&lt;p&gt;&lt;strong&gt;如果你想要对Hexo主题进行深度美化，且你要进行深度美化的主题模板引擎使用的就是pug(如butterfly)，则该文章将帮助到你&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&quot;前言&quot;&gt;</summary>
      
    
    
    
    <category term="科技与狠活" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80%E4%B8%8E%E7%8B%A0%E6%B4%BB/"/>
    
    
    <category term="pug" scheme="http://toad114514.github.io/tags/pug/"/>
    
    <category term="语言" scheme="http://toad114514.github.io/tags/%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>完善 Hexo 其他功能</title>
    <link href="http://toad114514.github.io/2024/04/30/hexo-refine/"/>
    <id>http://toad114514.github.io/2024/04/30/hexo-refine/</id>
    <published>2024-04-30T09:28:28.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<div class="note info simple"><p>Hexo 博客建站一条龙 系列<br><a href="https://toad114514.github.io/2023/08/18/hexo-dep/">Hexo 部署</a><br><a href="https://toad114514.github.io/2024/04/30/hexo-refine/">Hexo 其他功能</a></p></div><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上次我成功的在 Termux 安装了 Hexo。<br><strong>本次我们将完善 Hexo 的其他功能</strong>。</p><p>记得先cd到你博客的路径</p><h1 id="网站地图"><a href="#网站地图" class="headerlink" title="网站地图"></a>网站地图</h1><p>安装 hexo-generator-sitemap 插件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-sitemap</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure><p>然后部署到网站</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">g</span></span><br></pre></td></tr></table></figure><p>此时可以在pubilc文件夹里找到 sitemap.xml，这样就创建完成了</p><h1 id="SEO-自动提交"><a href="#SEO-自动提交" class="headerlink" title="SEO 自动提交"></a>SEO 自动提交</h1><p>安装 hexo-seo-autopush 插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-seo-autopush --save</span><br></pre></td></tr></table></figure><p>打开 _config.yml 文件并加入如下代码</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo_seo_autopush:</span></span><br><span class="line">  <span class="attr">cron:</span> <span class="number">0</span> <span class="number">4</span> <span class="string">*</span> <span class="string">*</span> <span class="string">*</span></span><br><span class="line">  <span class="comment"># 百度提交配置</span></span><br><span class="line">  <span class="attr">baidu:</span></span><br><span class="line">    <span class="comment"># enable 开启关闭推送</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 可选 创建日期(created)|更新日期(updated)</span></span><br><span class="line">    <span class="attr">date:</span> <span class="string">created</span></span><br><span class="line">    <span class="comment"># 每次提交 &lt;count&gt; 篇文章，建议 10，0为全部提交</span></span><br><span class="line">    <span class="attr">count:</span> <span class="number">10</span></span><br><span class="line">  <span class="comment"># Bing 提交配置</span></span><br><span class="line">  <span class="comment"># 与百度提交配置注释一致</span></span><br><span class="line">  <span class="attr">bing:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">date:</span> <span class="string">created</span></span><br><span class="line">    <span class="attr">count:</span> <span class="number">10</span></span><br><span class="line">  <span class="comment"># 谷歌提交配置</span></span><br><span class="line">  <span class="comment"># 与百度提交配置注释一致</span></span><br><span class="line">  <span class="attr">google:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">date:</span> <span class="string">created</span></span><br><span class="line">    <span class="attr">count:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>根据注释<strong>进行修改</strong></p><p>由于生成的 actions 存放于博客根目录的 .github 文件夹里，属于隐藏文件夹，所以需要新增 ignore_hidden 配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&lt;username&gt;/&lt;project&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span></span><br><span class="line">  <span class="attr">ignore_hidden:</span> <span class="literal">false</span> <span class="comment"># 将隐藏文件也上传到 github 上</span></span><br></pre></td></tr></table></figure><p>此处使用 Bing 推送。其他请看仓库 <a href="https://github.com/Lete114/Hexo-SEO-AutoPush">hexo-seo-autopush</a><br>打开 <a href="https://www.bing.com/webmasters/home">Bing 站长平台</a><br>接着点击右上角头像 -&gt; 旁边齿轮<br>依次点击 API 访问 -&gt; API 密钥 获得 API 密钥并复制<br><img src="https://user-images.githubusercontent.com/48512251/162598122-120851b9-65c3-42ee-b847-dbc5bc06abcd.png" alt="操作"><br>打开 Github -&gt; 你网站的仓库 -&gt; Setttings -&gt; Actions -&gt; 右上角 New repository secret 新建 Secret 字段<br>Name 字段输入 bing_apikey<br>Value 输入在 Bing 站长平台复制的 API 密钥</p><p>部署 hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>验证只需 Star 您的仓库然后取消便可以成功启用<br>查看 Actions 查看结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 必应的</span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;d&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>返回信息包含上面信息即可成功</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info simple&quot;&gt;&lt;p&gt;Hexo 博客建站一条龙 系列&lt;br&gt;&lt;a href=&quot;https://toad114514.github.io/2023/08/18/hexo-dep/&quot;&gt;Hexo 部署&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http</summary>
      
    
    
    
    <category term="技术" scheme="http://toad114514.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="博客" scheme="http://toad114514.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="科技" scheme="http://toad114514.github.io/tags/%E7%A7%91%E6%8A%80/"/>
    
    <category term="Hexo" scheme="http://toad114514.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>元气骑士前传 S1 赛季 爬塔排行榜</title>
    <link href="http://toad114514.github.io/2024/04/28/qz-s1-end-pt-md/"/>
    <id>http://toad114514.github.io/2024/04/28/qz-s1-end-pt-md/</id>
    <published>2024-04-27T17:39:51.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>你个写博客的怎么还写游戏是吧((<br>在元气骑士前传里，一个职业的强度，只有爬塔排行榜才能决定其强度。<br><strong>在这前传更新s2赛季的前 8 个小时前，赶紧炸裂写了个文章好吧</strong><br>本文章让你清楚什么才是现在所在的前传环境里最强</p><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>除前三名外，实时段位未显示的，则与下方配置等同<br>黄金 100 白银 60 精铜 30 青铜 10</p><h1 id="排名"><a href="#排名" class="headerlink" title="排名"></a>排名</h1><h2 id="第-8-名"><a href="#第-8-名" class="headerlink" title="第 8 名"></a>第 8 名</h2><p><strong>风暴刺客</strong><br>最高爬塔 1200 层<br>实时段位<br><em>红玉</em> 204 层</p><h2 id="第-7-名"><a href="#第-7-名" class="headerlink" title="第 7 名"></a>第 7 名</h2><p><strong>烈焰法师</strong><br>最高爬塔 1235 层<br>实时段位<br><em>红玉</em> 239 层</p><h2 id="第-6-名"><a href="#第-6-名" class="headerlink" title="第 6 名"></a>第 6 名</h2><p><strong>游侠</strong><br>最高爬塔 1301 层<br>实时段位<br><em>红玉</em> 218 层</p><h2 id="第-5-名"><a href="#第-5-名" class="headerlink" title="第 5 名"></a>第 5 名</h2><p><strong>领主</strong><br>最高爬塔 1400 层<br>实时段位<br><em>红玉</em> 211 层</p><h2 id="第-4-名"><a href="#第-4-名" class="headerlink" title="第 4 名"></a>第 4 名</h2><p><strong>忍者</strong><br>最高爬塔 1555 层<br>实时段位<br><em>红玉</em> 295 层<br><em>黄金</em> 141 层<br><em>白银</em> 71 层<br><em>精铜</em> 35 层</p><h2 id="第-3-名"><a href="#第-3-名" class="headerlink" title="第 3 名"></a>第 3 名</h2><p>前三大佬<br><strong>堡垒</strong><br>最高爬塔 1801 层<br>实时段位<br><em>红玉</em> 218 层<br><em>黄金</em> 100 层<br><em>白银</em> 60 层<br><em>精铜</em> 30 层<br><em>青铜</em> 10 层</p><h2 id="第-2-名"><a href="#第-2-名" class="headerlink" title="第 2 名"></a>第 2 名</h2><p><strong>荒野战士</strong><br>最高爬塔 2112 层<br>实时段位<br><em>红玉</em> 309 层<br><em>黄金</em> 141 层<br><em>白银</em> 64 层<br><em>精铜</em> 30 层<br><em>青铜</em> 10 层</p><h2 id="第-1-名"><a href="#第-1-名" class="headerlink" title="第 1 名"></a>第 1 名</h2><p>唯一真神 <strong>德鲁伊</strong><br>最高爬塔 4791 层<br>实时段位<br><em>红玉</em> 418 层<br><em>黄金</em> 274 层<br><em>白银</em> 148 层<br><em>精铜</em> 78 层<br><em>青铜</em> 30 层</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;你个写博客的怎么还写游戏是吧((&lt;br&gt;在元气骑士前传里，一个职业的强度，只有爬塔排行榜才能决定其强度。&lt;br&gt;&lt;strong&gt;在这前传更新</summary>
      
    
    
    
    <category term="游戏" scheme="http://toad114514.github.io/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="游戏" scheme="http://toad114514.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="元气骑士前传" scheme="http://toad114514.github.io/tags/%E5%85%83%E6%B0%94%E9%AA%91%E5%A3%AB%E5%89%8D%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>新的 Toads Blog</title>
    <link href="http://toad114514.github.io/2024/04/24/new-blog/"/>
    <id>http://toad114514.github.io/2024/04/24/new-blog/</id>
    <published>2024-04-23T17:25:20.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<h1 id="三个月不见终于变力"><a href="#三个月不见终于变力" class="headerlink" title="三个月不见终于变力"></a>三个月不见终于变力</h1><p>本次的 Toads Blog 直接使用 butterfly 为主题。原因是fluid主题基本上不能很好的在termu上。</p><h1 id="很多种看我的方式"><a href="#很多种看我的方式" class="headerlink" title="很多种看我的方式"></a>很多种看我的方式</h1><p>全平台同名toad114514，除开下面所列</p><ul><li>B站 狗头均</li><li>抖音 保护狗头de阿巴阿巴鸭<br>当然还有我的 <a href="https://github.com/toad114514">Github</a> 和 <a href="https://gitee.com/toadstool">Gitee</a></li></ul><h1 id="尽量更新"><a href="#尽量更新" class="headerlink" title="尽量更新"></a>尽量更新</h1><p>基本保持每周一更，有学业的好吧，且不一定是科技类文章，还有可能是游戏工略等文章。暑假可以多更一点点。</p><h1 id="说完了-睡觉"><a href="#说完了-睡觉" class="headerlink" title="说完了 睡觉"></a>说完了 睡觉</h1><p>sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…sleeping…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;三个月不见终于变力&quot;&gt;&lt;a href=&quot;#三个月不见终于变力&quot; class=&quot;headerlink&quot; title=&quot;三个月不见终于变力&quot;&gt;&lt;/a&gt;三个月不见终于变力&lt;/h1&gt;&lt;p&gt;本次的 Toads Blog 直接使用 butterfly 为主题。原因是fluid</summary>
      
    
    
    
    
    <category term="科技" scheme="http://toad114514.github.io/tags/%E7%A7%91%E6%8A%80/"/>
    
    <category term="Hexo" scheme="http://toad114514.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Termux 搭建 nginx 服务器</title>
    <link href="http://toad114514.github.io/2024/01/12/termux-nginx/"/>
    <id>http://toad114514.github.io/2024/01/12/termux-nginx/</id>
    <published>2024-01-11T16:02:24.000Z</published>
    <updated>2024-08-15T18:38:32.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="https://img2.imgtp.com/2024/04/24/gcb8msuW.png" alt="菜鸟教程对 Nginx的描述"><br>nginx的风还是吹到了，<strong>Termux!<strong>不是Termux没明星，而是</strong>Termux全明星</strong>“”(指装irc等服务器和python等)!不是Termux不出手，而是出手<strong>没对手</strong>！Termux大舞台，有才你就来(</p><p>今天教你们怎么安装<strong>Ngnix</strong>！<br>不是ksweb用不起，而是真正的nginx有性价比！原先无root也可以使用的ksweb由于自由度有点差(不能装插件上去)，所以真正的nginx才能真正体验到nginx！</p><p><img src="https://img2.imgtp.com/2024/04/24/Phd2jLC7.png" alt="termux,启动！"><br><img src="https://img2.imgtp.com/2024/04/24/SX26KvI9.png" alt="作者手机配置及proot环境配置"><br>以后都有这台”战神A5”来部署一些东西了。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="更简便的安装方法"><a href="#更简便的安装方法" class="headerlink" title="更简便的安装方法"></a>更简便的安装方法</h2><p>已经有<strong>更好更快的安装方法了</strong>，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install gcc libpcre3-dev zlib1g-dev openssl nginx</span><br></pre></td></tr></table></figure><p>本方法<strong>安装速度快但版本较老且稳定性未知</strong>，请<strong>谨慎使用</strong><br>使用 apt 安装的 nginx 后：<br><strong>html 文件存放于 &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html 里</strong><br><strong>配置存储文件放于 &#x2F;etc&#x2F;nginx&#x2F; 里的 nginx.conf</strong></p><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p>准备一些依赖，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install gcc libpcre3-dev zlib1g-dev openssl</span><br></pre></td></tr></table></figure><p>先装一些依赖，没有没有怎么部署nginx？<br>gcc是运行环境，pcre给nginx提供正则表达式，zlib依赖解压包<br>pcre用于http的正则表达式里<br><strong>别忘了你的openssl！</strong></p><h2 id="下载nginx"><a href="#下载nginx" class="headerlink" title="下载nginx"></a>下载nginx</h2><p><strong>这一步我们一步完成，要慢慢来的请放Sweet Dreams，完成后再停止播放</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /usr/local/nginx</span><br><span class="line"><span class="built_in">cd</span> /usr/local/nginx</span><br><span class="line">wget https://nginx.org/download/nginx-1.24.0.tar.gz</span><br><span class="line">tar -zxvf nginx-1.24.0.tar.gz</span><br></pre></td></tr></table></figure><h2 id="安装时间！"><a href="#安装时间！" class="headerlink" title="安装时间！"></a>安装时间！</h2><p>由于tar把文件解压到了nginx-1.24.0文件夹，所以<strong>要先进行cd</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> nginx-1.24.0</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装阶段，我的手机非常吃力，<strong>战神A5不行力</strong><br>也是特别的卡，我甚至一边装nginx一边听音乐<br>由于make原因，<strong>我tnnd也没办法</strong><br><img src="https://img2.imgtp.com/2024/04/24/gJ0xAa4t.png" alt="完成 configure 后的终端"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">objs/src/http/modules/ngx_http_upstream_random_module.o \</span><br><span class="line">objs/src/http/modules/ngx_http_upstream_keepalive_module.o \</span><br><span class="line">objs/src/http/modules/ngx_http_upstream_zone_module.o \</span><br><span class="line">objs/ngx_modules.o \</span><br><span class="line">-lcrypt -lpcre2-8 -lz \</span><br><span class="line">-Wl,-E</span><br><span class="line">sed -e <span class="string">&quot;s|%%PREFIX%%|/usr/local/nginx|&quot;</span> \</span><br><span class="line">        -e <span class="string">&quot;s|%%PID_PATH%%|/usr/local/nginx/logs/nginx.pid|&quot;</span> \</span><br><span class="line">        -e <span class="string">&quot;s|%%CONF_PATH%%|/usr/local/nginx/conf/nginx.conf|&quot;</span> \</span><br><span class="line">        -e <span class="string">&quot;s|%%ERROR_LOG_PATH%%|/usr/local/nginx/logs/error.log|&quot;</span> \</span><br><span class="line">        &lt; man/nginx.8 &gt; objs/nginx.8</span><br><span class="line">make[1]: 离开目录“/usr/local/nginx/nginx-1.24.0”</span><br><span class="line">root@localhost:/usr/local/nginx/nginx-1.24.0<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>make指令用了<strong>好几分钟力</strong>，还有make install，草<br>还好make install使用时间不多</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="配置工具"><a href="#配置工具" class="headerlink" title="配置工具"></a>配置工具</h2><p>我们需要：</p><ul><li>一个终端进程</li><li>Vim&#x2F;Vi&#x2F;Nano，没有就装</li></ul><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><p>去吧，我的<em>Vim</em>！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/nginx.conf</span><br><span class="line"><span class="comment"># 如果前面使用 apt 安装了 nginx，请输入下面代码</span></span><br><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/24/MkdeYFhD.png" alt="ngnx.conf"><br>配置只需修改 listen 项和 server_name 即可。<br><strong>listen 输入要监听的端口，该项在部分机型必须修改，否则Permission denied</strong><br><strong>server_name 输入本机IP地址，可以不用改</strong><br>本机IP地址可以在 设置-&gt;WLAN-&gt;已连接WLAN最右边信息&#x2F;更多-&gt;IP地址 找到</p><h1 id="Nginx，启动！"><a href="#Nginx，启动！" class="headerlink" title="Nginx，启动！"></a>Nginx，启动！</h1><h2 id="启动它"><a href="#启动它" class="headerlink" title="启动它"></a>启动它</h2><p>输入以下代码来 Nginx，启动！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/nginx/sbin</span><br><span class="line">./nginx</span><br><span class="line"><span class="comment"># 如果前面使用 apt 安装了 nginx，请使用 init.d 方式启动</span></span><br><span class="line">/etc/init.d/nginx start</span><br></pre></td></tr></table></figure><p>麻烦可以做个sh脚本然后直接放在自启动里</p><p><strong>让我们来检查 Nginx 是否正常启动</strong><br>检查进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/usr/local/nginx/sbin<span class="comment"># ps -ef | grep nginx</span></span><br><span class="line">10442    20535     1  0  2020 ?        00:00:00 nginx: master process ./nginx</span><br><span class="line">10442    20536 20535  0  2020 ?        00:00:00 nginx: worker process</span><br><span class="line">10442    20731  6689  0  2020 stdin    00:00:00 grep --color=auto nginx</span><br><span class="line">root@localhost:/usr/local/nginx/sbin<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>浏览器<br>输入 ip或localhost+端口号 访问<br><img src="https://img2.imgtp.com/2024/04/24/nlp1QBW2.png" alt="结果如图"><br>Edge还给我调了个深色模式666</p><h2 id="关闭Nginx"><a href="#关闭Nginx" class="headerlink" title="关闭Nginx"></a>关闭Nginx</h2><p>给Nginx进程一个黑手就行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkill -9 nginx</span><br><span class="line"><span class="comment"># 如果前面使用 apt 安装了 nginx，请用下方代码关闭 nginx</span></span><br><span class="line">/etc/init.d/nginx stop</span><br></pre></td></tr></table></figure><h1 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h1><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在Termux上安装并部署nginx与真linux的步骤基本一致，这是好的。但是像我这种…笑聋搞痛450和有点lj的配置在安装时确实有点慢…<br>虽然安装较慢，但是启动速度快，和隔壁ksweb有得一拼。<br>你如果要有更多的自由性，那么在termux安装nginx是最流畅最好的免root方案。但如果你不想折腾，那么集成式的ksweb更适合你。<br>写完了，可以睡觉了(明天星期五，喜)<br><img src="https://www.freeimg.cn/i/2024/01/12/65a020d54a40f.gif" alt="摸李这停.gif"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://img2.imgtp.com/2024/04/24/gcb8msuW.png&quot; alt=&quot;菜鸟教程对 N</summary>
      
    
    
    
    <category term="科技与狠活" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80%E4%B8%8E%E7%8B%A0%E6%B4%BB/"/>
    
    
    <category term="服务器" scheme="http://toad114514.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="Termux" scheme="http://toad114514.github.io/tags/Termux/"/>
    
    <category term="Nginx" scheme="http://toad114514.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Termux 安装 Hexo 踩的dark坑</title>
    <link href="http://toad114514.github.io/2024/01/03/ken/"/>
    <id>http://toad114514.github.io/2024/01/03/ken/</id>
    <published>2024-01-03T11:49:11.000Z</published>
    <updated>2024-08-15T18:38:32.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>当我尝试在 Termux 中利用 Ubuntu22.04.3 发行版去安装 Hexo 时，我已经踩了非常多的坑。<br>我自己比较早的时候就已经试过了，把整个hexo的工作目录复制下来然后放在termux里面。没成功。<br>现在已经成功了，而且非常正常的在我的手机上运行了。<br>接下来我就要说说这tm坑到底有多少</p><p><img src="https://img2.imgtp.com/2024/04/24/jptfdoRn.png" alt="Termux 下正常运行的 Hexo"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>其实跟<a href="https://toad114514.github.io/2023/08/18/hexo-dep/">如何使用 Github Pages + Hexo 搭建博客服务器</a>差不多，但是要<strong>先在Termux安装一个装有Proot容器的Linux发行版</strong>，然后再在容器上安装npm、nodejs、git和hexo。当然 Termux 本体的终端也可以运行 npm 等程序，但不过将大大减少稳定性，且还有可能会整出太多的bugs。</p><h2 id="安装-Termux"><a href="#安装-Termux" class="headerlink" title="安装 Termux"></a>安装 Termux</h2><p>先安装 <a href="https://github.com/termux/termux-app">Termux</a> ，点击”termux”后安装最新发行版</p><h2 id="安装-proot-容器"><a href="#安装-proot-容器" class="headerlink" title="安装 proot 容器"></a>安装 proot 容器</h2><p>进入 Termux，等待终端程序安装好后，进入终端，依次输入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install proot-distro <span class="comment"># 安装 proot-dsitro</span></span><br><span class="line">proot-distro install ubuntu <span class="comment"># 安装 ubuntu 在 proot 容器内</span></span><br><span class="line">proot-distro login ubuntu <span class="comment"># 登陆 proot 容器内的 ubuntu</span></span><br></pre></td></tr></table></figure><p>此处使用的 proot-distro 方法后期安装比较不稳定，建议使用tmoe安装方案。<br>这样就可以进入ubuntu了。</p><h2 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h2><p>接下来的操作和 <a href="https://toad114514.github.io/2023/08/18/hexo-dep/">如何使用 Github Pages + Hexo 搭建博客服务器</a>一致。</p><h1 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h1><h2 id="ARM64-下《感人》的运行速度"><a href="#ARM64-下《感人》的运行速度" class="headerlink" title="ARM64 下《感人》的运行速度"></a>ARM64 下《感人》的运行速度</h2><p>要想和上面的图片输出结果一样，就是构建静态页面+上传到Github。<br>根据不知道哪位兄弟记载，对比了hexo和hugo两位生成静态页面的情况。hexo用时十几分钟，<em>这是在 真机 上的数据，且都是文章很多的</em>。<strong>如果是 Proot 容器，更慢</strong><br>而且，如果遇到那种文章多的博客，那么创建静态页面时长将可以够我把我的三大主科全部做完了(</p><h2 id="主题超级不兼容"><a href="#主题超级不兼容" class="headerlink" title="主题超级不兼容"></a>主题超级不兼容</h2><p>我已经踩了两个主题的坑了，给大家列出来罢<br>目前 landscape 疑似无问题<br>基本都是<strong>主题没事，我环境出事了</strong></p><h3 id="fluid-主题"><a href="#fluid-主题" class="headerlink" title="fluid 主题"></a>fluid 主题</h3><p>有一些主题(包括现在用的fluid)，我本来想把主题文件放在themes里面，<strong>但是之后立马报错，不能部署不能创建。</strong>错误大概如下(英文地方已经翻译)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Warn Fluid 推荐你使用推荐设置 (地址)</span><br><span class="line">ERR 有一个地方出现了错误，请查(地址)去修复该错误</span><br><span class="line">错误于 /root/blog/node_modules/@abobe/css-tools/dist/index.mjs</span><br><span class="line">不知道哪一行  option?.<span class="built_in">source</span>), &#125;</span><br><span class="line">错误 那个<span class="string">&quot;.&quot;</span>有错误</span><br></pre></td></tr></table></figure><p>我以为是这个依赖包的问题，后来不是。这是概率性问题。</p><h3 id="butterfly-主题"><a href="#butterfly-主题" class="headerlink" title="butterfly 主题"></a>butterfly 主题</h3><p>本身直接安装后，不进行任何配置就没问题。<br>但<strong>不能修改如下数据</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wordcount (字數統計)</span></span><br><span class="line"><span class="comment"># see https://butterfly.js.org/posts/ceeb73f/#字數統計                wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># 这里不能修改为 true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/24/azDkh5eh.png" alt="修改后报错如上"><br>以及</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">card_webinfo:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># 这里不能改为 true</span></span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/24/GvvQkD8k.png" alt="修改后报错如上"><br>虽然可以继续创建静态页面，<strong>但是本地预览和部署后主页会变空白</strong></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>可以是可是，但是又不可以。这玩意我踩了一堆坑才踩出来的经验。才在termux上面成功的运行了hexo。<br><strong>如果你有能力，建议直接在电脑上安装好了</strong>(像我这样没钱或者叫我爸妈买台电脑肯定藤条的或皮带的就别逝了罢)</p><h1 id="Hexo-全文章链接"><a href="#Hexo-全文章链接" class="headerlink" title="Hexo 全文章链接"></a>Hexo 全文章链接</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;当我尝试在 Termux 中利用 Ubuntu22.04.3 发行版去安装 Hexo 时，我已经踩了非常多的坑。&lt;br&gt;我自己比较早的时候就</summary>
      
    
    
    
    <category term="科技" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80/"/>
    
    
    <category term="termux" scheme="http://toad114514.github.io/tags/termux/"/>
    
    <category term="hexo" scheme="http://toad114514.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>张浩事情速览</title>
    <link href="http://toad114514.github.io/2023/08/19/zh-1/"/>
    <id>http://toad114514.github.io/2023/08/19/zh-1/</id>
    <published>2023-08-19T13:17:00.000Z</published>
    <updated>2024-08-15T18:38:32.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="张浩黑历史（确信"><a href="#张浩黑历史（确信" class="headerlink" title="张浩黑历史（确信"></a>张浩黑历史（确信</h1><p><strong>本文章的部分图片已失效。现在正在补图片</strong><br>让我们从上到下，浏览这些张浩的事情罢</p><h2 id="2022年"><a href="#2022年" class="headerlink" title="2022年"></a>2022年</h2><p>11月左右，偷张浩penis出现<br><br>11月左右，张浩楼道崩溃。<br><br>12月初，张浩和王老虎打架<br><br>12月左右，张浩永远都不来了<br><br>12月底，张浩被3人围圈偷penis<br><br><img src="https://img1.imgtp.com/2023/08/19/670WvzAb.jpg" alt="张浩看李这坤"><br>12月底，张浩大摇大摆<br><br>12月底，张浩和如真瑞打爆小黑子被罚站<br><br><img src="https://img1.imgtp.com/2023/08/19/kHYlHXu5.jpg" alt="张浩和如真瑞罚站"></p><h2 id="2023年"><a href="#2023年" class="headerlink" title="2023年"></a>2023年</h2><p>1月初，张浩Pages诞生<br><br>2月到3月多，张浩沉迷与玩手机<br><br>5月多，张浩帮助张郑与打牌<br><br><img src="https://img1.imgtp.com/2023/08/19/187JVuqv.jpg" alt="张浩帮助张郑与打牌"><br>5月左右，张浩参加里这停马拉松<br><img src="https://img1.imgtp.com/2023/08/19/b57pBJjq.jpg" alt="张浩参加马拉松"><br>5月左右，张浩把李这坤鸟语花香了<br><img src="https://img1.imgtp.com/2023/08/19/OA4LPuCf.jpg" alt="被鸟语花香的李这坤和另外两位"><br>5月中旬，张浩叛变，成为小黑子的一员<br><br>5月中旬，张浩在天悦湾附近休息<br><img src="https://img1.imgtp.com/2023/08/19/YELY4DDU.jpg" alt="张浩和括号哥休息"><br>5月中旬，张浩和两位大佬打牌<br><img src="https://img1.imgtp.com/2023/08/19/ozNT7IzP.jpg" alt="张浩想不共牌，但是被大佬搞爆的张浩"><br>5月底，张浩和如真瑞阻止趁着类偷李这坤penis<br><img src="https://img2.imgtp.com/2024/04/24/u0K0QRHt.png" alt="张浩被如真瑞的答案而感到震惊"><br>6月1号，张浩叛变<br><img src="https://img2.imgtp.com/2024/04/24/Fw351dQl.png" alt="叛变的张浩和他的朋友"><br>6月1号，张浩被吴子轩称为勇士总冠军<br><br>6月3号，张浩被李这坤偷penis<br><img src="https://img2.imgtp.com/2024/04/24/8D3Q3vqr.png" alt="被偷penis的张浩"><br>6月22号，张浩和李这坤一起找李这坤朋友<br><img src="https://img1.imgtp.com/2023/08/19/vGuI7dRT.jpg" alt="张浩骑车"><br>6月底，张浩和李这坤驱赶小孩回家<br><img src="https://img1.imgtp.com/2023/08/19/vuzm0E6o.jpg" alt="被驱赶的其中一位，名闪电马老（粤语）"><br>7月3号，张浩和李括号阻止陈这类偷李这坤penis<br><br>7月初，张浩给李这坤学习猴子<br><img src="https://img1.imgtp.com/2023/08/19/xLJM88vp.jpg" alt="张浩：Near and Monkey to Show and Learn"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;张浩黑历史（确信&quot;&gt;&lt;a href=&quot;#张浩黑历史（确信&quot; class=&quot;headerlink&quot; title=&quot;张浩黑历史（确信&quot;&gt;&lt;/a&gt;张浩黑历史（确信&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;本文章的部分图片已失效。现在正在补图片&lt;/strong&gt;&lt;br&gt;让我们从上到</summary>
      
    
    
    
    <category term="张浩" scheme="http://toad114514.github.io/categories/%E5%BC%A0%E6%B5%A9/"/>
    
    
    <category term="张浩" scheme="http://toad114514.github.io/tags/%E5%BC%A0%E6%B5%A9/"/>
    
  </entry>
  
  <entry>
    <title>如何使用 Github Pages + Hexo 搭建博客服务器</title>
    <link href="http://toad114514.github.io/2023/08/18/hexo-dep/"/>
    <id>http://toad114514.github.io/2023/08/18/hexo-dep/</id>
    <published>2023-08-18T13:38:00.000Z</published>
    <updated>2024-08-15T18:38:32.187Z</updated>
    
    <content type="html"><![CDATA[<div class="note info simple"><p>Hexo 博客建站一条龙 系列<br><a href="https://toad114514.github.io/2023/08/18/hexo-dep/">Hexo 部署</a><br><a href="https://toad114514.github.io/2024/04/30/hexo-refine/">Hexo 其他功能</a></p></div><h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>上次在本地搞了搞 Zblog，现在我有github账号，也有了一台临时电脑来部署东西。也是非常的nb好吧</p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul><li>github账号</li><li>一台电脑</li></ul><h1 id="注册或登录github"><a href="#注册或登录github" class="headerlink" title="注册或登录github"></a>注册或登录github</h1><p>注册一个github账号，要准备邮箱，不要电话号码。没邮箱和SIM卡的可以去注册outlook，有SIM卡就去注册163邮箱。<br><img src="https://img1.imgtp.com/2023/08/19/Hwxp3jGz.png" alt="github 创建仓库"><br>然后创建仓库，点击”New repository”，Repository的框里必须要用username.github.io，username是你的github账号名。然后点击创建即可。</p><p>一般情况下，仓库在创建后就会启用网站，所以这是第一步</p><h1 id="本地部署Hexo"><a href="#本地部署Hexo" class="headerlink" title="本地部署Hexo"></a>本地部署Hexo</h1><h2 id="安装hexo所需要的环境"><a href="#安装hexo所需要的环境" class="headerlink" title="安装hexo所需要的环境"></a>安装hexo所需要的环境</h2><p>去下载并安装nodejs和git。git用于与仓库通信，可以把本地发送到github仓库。nodejs则用来部署hexo。<br><br>安装完成后，先进行检查。打开 Windows powershell 或者 cmd（windows+R打开运行，输入cmd在框里然后回车）里输入以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nodejs -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>依次输入以上这些指令，如果出现了版本号就证明安装成功。如果其中一个输入后报错或者全部报错，就要重装了。</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>在安装之前，先创建一个hexo所存放的文件夹，以后写文章什么的都要这个文件夹。名字可以起blog，然后按住shift右键，点击在此处打开命令行窗口，如果没有，请点击在此处打开Powershell窗口。然后输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这一步需要很多时间，请耐心等待。安装完成后就要开始初始化hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog //这里的blog仅作用于blog里面的blog文件夹</span><br></pre></td></tr></table></figure><p>如果没有出现任何错误，那么恭喜你可能完成了本地安装！</p><h2 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h2><p>输入以下命令进行验证：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new test_post</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>上面命令会在你的博客上创建一个文章用于检测，然后在本地启动服务器进行测试。现在尝试用浏览器访问localhost:4000试试？如果可以正常显示且看见了一个标题为test_post的文章，证明你真的完成了安装hexo！</p><h1 id="初探-Hexo"><a href="#初探-Hexo" class="headerlink" title="初探 Hexo"></a>初探 Hexo</h1><h2 id="学习常用命令"><a href="#学习常用命令" class="headerlink" title="学习常用命令"></a>学习常用命令</h2><p>接下来我们会教你一些hexo常用指令。<br>npm install hexo-cli -g –安装hexo<br>npm update hexo-cli -g –升级<br>hexo init blog –初始化hexo<br>简写命令<br>hexo n &#x3D;&#x3D; hexo new “标题” –在博客上创建文章<br>hexo g &#x3D;&#x3D; hexo generate –创建静态页面<br>hexo s &#x3D;&#x3D; hexo server –启动本地浏览<br>hexo d &#x3D;&#x3D; hexo deploy –部署到远程仓库（指你的github仓库）<br>其他<br>hexo server -s –静态模式<br>hexo server -p 5000 –更改端口，如果发现使用本地预览时出现错误，可以尝试修改端口<br>hexo server -i 192.168.1.1 –修改 IP</p><h2 id="理解配置文件"><a href="#理解配置文件" class="headerlink" title="理解配置文件"></a>理解配置文件</h2><p>在hexo中，配置文件有两种。在hexo根目录里面的_config.yml是网站配置文件。在根目录里面有个theme文件夹，打开后里面是一些文件夹，随便点开一个，里面也有一个_config.yml，这就是主题配置文件</p><h2 id="配置-Hexo"><a href="#配置-Hexo" class="headerlink" title="配置 Hexo"></a>配置 Hexo</h2><p>，找到_config.yml，我们接下来要对他们进行一点点修改。根据下面注释进行修改</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Toads</span> <span class="string">Blog</span> <span class="string">//博客标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;技术博客、文件分享和张浩&#x27;</span> <span class="string">//博客副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;一个一个技术博客&#x27;</span> <span class="string">//博客简介</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">Toad114514</span> <span class="string">//博客关键词</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Toad114514</span> <span class="string">//博客作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">&#x27;zh-CN&#x27;</span> <span class="string">//Hexo默认语言，请把它修改成&quot;zh-CN&quot;才能把你的博客变成简体中文</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span> <span class="string">//Hexo默认时区，请修改成&quot;Asia/Shanghai&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://username.github.io/</span> <span class="string">//hexo默认网站主页，请修改成&quot;https://username.github.io&quot;，其中username是你的github名字</span></span><br></pre></td></tr></table></figure><p>在_config.yml里面还有很多值，按道理来讲，这个文件可以修改大多数原生hexo的值。你可以根据 <a href="https://hexo.io/zh-cn/docs/configuration">Hexo 官方文档</a>  的配置，根据需要进行修改。</p><h1 id="与-Git-连接"><a href="#与-Git-连接" class="headerlink" title="与 Git 连接"></a>与 Git 连接</h1><h2 id="连接到-Github"><a href="#连接到-Github" class="headerlink" title="连接到 Github"></a>连接到 Github</h2><p>下载并安装git，这是 <a href="https://git-scm.com/download">官方下载链接</a>。<br>打开git bash，然后进行配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你注册的github名字&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你注册github所用的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>生成一个ssh rsa密钥作为凭证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你注册github所用的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>执行后回车三次即可生成文件<br>然后找到生成的.ssh文件夹（放在了C:\Users\你电脑所登录的用户名，如果看不到就是被隐藏了），找到id_rsa.pub并使用记事本打开，再把里面的内容全部复制。<br><br>回到你的github账号，进入到 <a href="https://github.com/settings/keys">Github SSH密钥管理</a> 链接里，点击 New SSH Key 添加一个ssh密钥<br><img src="https://img1.imgtp.com/2023/08/19/1Ozqm0r5.png" alt="Github 添加 ssh 密钥"><br><br>title随便写，key里面填写你刚复制的密钥，然后点击Add ssh key。这样就完成了。</p><h2 id="验证连接"><a href="#验证连接" class="headerlink" title="验证连接"></a>验证连接</h2><p>打开 git bash，输入以下代码验证连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh git@github.com</span><br></pre></td></tr></table></figure><p>如果结果包含以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi xxx! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><p>那么证明你的git已经成功连接到了github</p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><h2 id="配置连接"><a href="#配置连接" class="headerlink" title="配置连接"></a>配置连接</h2><p>来到网站根目录，找到_config.yml，并使用记事本打开，然后翻到最下面，然后把下面的代码写到最下面的地方：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:username/username.github.io.git</span> <span class="string">//这里面的username改成你注册的github账号名</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><h2 id="部署到-github"><a href="#部署到-github" class="headerlink" title="部署到 github"></a>部署到 github</h2><p>终于来到了最后一步！！！！！！！！！！你只需要执行以下代码，你的网站就可以部署成功了！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save //安装git部署插件</span><br><span class="line">hexo g //创建静态页面</span><br><span class="line">hexo d //部署到github</span><br></pre></td></tr></table></figure><p>这样就完成了！</p><h1 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h1><p>完成之后，你可以用浏览器访问 username.github.io（username是你的github账号），如果成功了，那么你的博客就到此完成了！<br><br>先写到这吧，下次讲插件和主题</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info simple&quot;&gt;&lt;p&gt;Hexo 博客建站一条龙 系列&lt;br&gt;&lt;a href=&quot;https://toad114514.github.io/2023/08/18/hexo-dep/&quot;&gt;Hexo 部署&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http</summary>
      
    
    
    
    <category term="科技" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80/"/>
    
    
    <category term="博客" scheme="http://toad114514.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="http://toad114514.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>如何把 Windows3.2 变得更强</title>
    <link href="http://toad114514.github.io/2023/07/23/win32-nb/"/>
    <id>http://toad114514.github.io/2023/07/23/win32-nb/</id>
    <published>2023-07-23T13:50:34.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img2.imgtp.com/2024/05/10/XmNiQsmO.png" alt="2023-07-23_09-43-43.png"></p><p>如上图，这是我的 Windows3.2 截图。已安装了SB16声卡和24位显卡驱动。安装了常用软件（包括Office4.2、WPS97、Quicktime、Acrobat、Goldware等）。桌面使用CalmiraXP。背景图片来自SMWcentral，原先属于16M色深，经过Talking Icon的背景设置后可在24位显示器上显示。在使用的应用是微软早期的Media Player，张浩蹲坑图片显示基于Quicktime（张浩没只因）。 </p><p>tnnd，说了这么多。<br>问我是如何做到这么nb的 Windows 3.2 呢？且听我慢慢细说 </p><h3 id="安装-Windows3-2"><a href="#安装-Windows3-2" class="headerlink" title="安装 Windows3.2"></a>安装 Windows3.2</h3><p>首先要让 Windows3.2 变得更强，首先你得安装 Windows3.2<br>我们在 MagicDosbox 成功模拟了 Windows3.2（这大吊对我的手机不友好，随时随地闪退。闪退就打不开了）<br>先安装 MagicDosbox，然后根据提示完成操作。<br>接下来来到主界面，点击右边的加号。 </p><p><img src="https://img2.imgtp.com/2024/05/10/H0mAg5Tr.jpg" alt="设置图示"></p><p>在弹出的菜单里点击第一个。接下来填写标题，我这里写windows3.2，当然你也可以随便写。<br>写好标题之后，往下滑，给电脑扬声器打钩，并点击“声卡禁用”，然后在弹出的选项中选择 SB16 ，（配置声卡）就可以直接点击下面的勾了。<br>回到主页面，点击和你填写标题一样的选项进入Dosbox。<br>接下来和 Windows3.2 安装方法差不多，你可以去网上搜。但是 有关于磁盘操作及MS-DOS安装的步骤要跳过，因为Doxbox已经等同于MS-DOS。如果你偏要的话，后果自费。除非你是在VMware或virtualbox上安装，否则请跳过</p><h3 id="安装声卡文件"><a href="#安装声卡文件" class="headerlink" title="安装声卡文件"></a>安装声卡文件</h3><p>对于 Doxbox 本身自带 SB16 声卡可模拟。但在 MagicDoxbox 上需要自行设置。<br>但我们已经在安装 Windows3.2 时就已经配置好了。所以接下来进入 Windows3.2。<br>打开主群组里的“控制面板”。 </p><p><img src="https://img2.imgtp.com/2024/05/10/Vu6574Oz.jpg" alt="Screenshot_2023-07-22-19-29-07-80.jpg"></p><p>双击“驱动程序” </p><p><img src="https://img2.imgtp.com/2024/05/10/Bv245IPq.jpg" alt="驱动程序"></p><p>点击“增加”<br>选择 “Creative Labs Sound Blastch 1.5”<br>插入第六张安装磁盘到A:，然后点击确定<br>进入到 Sound Blastch 设置，选择端口220，中断7，点击认可<br>重启 Windows3.2，如果听见tada的声音，证明你的声卡驱动安装成功。 </p><h3 id="如何安装显卡驱动"><a href="#如何安装显卡驱动" class="headerlink" title="如何安装显卡驱动"></a>如何安装显卡驱动</h3><p>Doxbox 支持模拟 S3 显示屏。这意味着你可以安装24位色彩的显卡驱动。一个 Windows3.1 的最好显示方案是： </p><ol><li>1024x768或800x600 分辨率（S3 最高支持1600x1200，但是不需要这么大）</li><li>64K种颜色输出（即指24位）</li></ol><p>这里我们用 800x600 作为我们的分辨率。 </p><p>接下来开始安装！<br>在最下面的下载链接里找到为 Windows3.1 准备的 S3 显卡驱动包并解压挂载到D盘（挂载代码：mount d: 解压路径，别跟我说这只能给3.1用，我已经试过了，3.2上运行正常），这里假如挂载路径到 D:\S3<br>进入 windows 目录执行 setup.ex</p><p><strong>是进入 windows 目录后执行 setup.exe 而不是 win ！否则你将无法继续安装！</strong></p><p>接下来将光标移动到 “Display” 上并回车<br>在列表中找到最下面的选项，并回车<br>把路径 A:\ 换成你挂载了 S3 驱动的路径，我们上面已经假如了 D:\S3 是驱动路径，所以我们这里输入 D:\S3 。<br>又回到列表里，找到 “S3 864 1.41B5 800x600 64K colors SL” ，选中它并回车。<br>回到设置列表，再回车一次。<br>开始安装显卡驱动…<br>如果在安装中途发现要输入路径，请再次输入你挂载的 S3 目录，上面已经假设 D:\S3 是我们的驱动路径，所以我们要输入 D:\S3。<br>最后回到dos界面，输入win。 </p><p><img src="https://img2.imgtp.com/2024/05/10/OZtaA1Nr.jpg" alt="驱动安装完成图片"></p><p>打开 Windows3.1 之后发现分辨率变大一点了，那么恭喜你，你的显卡驱动安装成功了！你可以到 Windows 设置程序里查看显示屏一项是否含有 “S3 864 1.41B5” </p><h3 id="安装应用程序"><a href="#安装应用程序" class="headerlink" title="安装应用程序"></a>安装应用程序</h3><p>关于安装应用程序，我自己安装程序大部分来自于 <a href="http://winworldpc.com/">http://winworldpc.com</a>，这个网站里面含有大量的Windows3.1应用，但基本上现在常见的应用程序基本没有。<br>关于安装游戏，例如你要装仙剑奇侠传或者模拟城市2000等游戏，建议到爱吾游戏宝盒或者浏览器搜索并下载。（也可以到贴吧寻找相关帖子） </p><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><p>为 Windows3.1 准备的 S3 显卡驱动<br><a href="">http://funcloud.pan.com/mirrors/blog/win3-s3-driver.zip</a><br>funcloud 链接，已失效</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img2.imgtp.com/2024/05/10/XmNiQsmO.png&quot; alt=&quot;2023-07-23_09-43-43.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;如上图，这是我的 Windows3.2 截图。已安装了SB16声卡和24位显卡驱动</summary>
      
    
    
    
    <category term="科技与狠活" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80%E4%B8%8E%E7%8B%A0%E6%B4%BB/"/>
    
    
    <category term="系统" scheme="http://toad114514.github.io/tags/%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="Dosbox" scheme="http://toad114514.github.io/tags/Dosbox/"/>
    
    <category term="Windows" scheme="http://toad114514.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>张浩对李这停说的话</title>
    <link href="http://toad114514.github.io/2023/07/21/zhang-sayto-lzt/"/>
    <id>http://toad114514.github.io/2023/07/21/zhang-sayto-lzt/</id>
    <published>2023-07-20T20:21:37.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p>李这停，你tm天天打我，我那个文武你叫我打上我却打下了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;李这停，你tm天天打我，我那个文武你叫我打上我却打下了&lt;/p&gt;
</summary>
      
    
    
    
    <category term="张浩" scheme="http://toad114514.github.io/categories/%E5%BC%A0%E6%B5%A9/"/>
    
    
    <category term="张浩" scheme="http://toad114514.github.io/tags/%E5%BC%A0%E6%B5%A9/"/>
    
  </entry>
  
  <entry>
    <title>Super Mario 64 Land 串烧背景音乐</title>
    <link href="http://toad114514.github.io/2023/07/21/sm64l-music-pack/"/>
    <id>http://toad114514.github.io/2023/07/21/sm64l-music-pack/</id>
    <published>2023-07-20T16:00:20.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img2.imgtp.com/2024/05/10/FzkTsVAB.jpg" alt="Screenshot_2023-07-20-05-33-03-89.jpg"><br>我因为无聊就做了一个串烧<br>用了5个小时才做好<br>这tm比我录下来的Saunh Ashar还长（Saunh Ashar 一小时，这个串烧2小时）<br>因为太长，所以要给目录索引，否则我早就被你们芬芳馥郁了。后面会补上各个关卡背景音乐的位置 </p><ol><li>世界1 00:00</li><li>世界2 15:02</li><li>世界3 30:04</li><li>世界4 42:35</li><li>世界5 56:09</li><li>世界6 1:11:09</li><li>世界7 1:26:11</li><li>世界8 1:41:12</li><li>打库巴王 1:53:43</li><li>额外背景音乐 1:56:13<br>(包括结束、开头教程、奇诺比奥屋子、钢琴曲和关卡结束结算背景)</li></ol><p>下载链接：失效<br>验证码：SM64Land </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img2.imgtp.com/2024/05/10/FzkTsVAB.jpg&quot; alt=&quot;Screenshot_2023-07-20-05-33-03-89.jpg&quot;&gt;&lt;br&gt;我因为无聊就做了一个串烧&lt;br&gt;用了5个小时才做好&lt;br&gt;这t</summary>
      
    
    
    
    <category term="游戏" scheme="http://toad114514.github.io/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="马里奥" scheme="http://toad114514.github.io/tags/%E9%A9%AC%E9%87%8C%E5%A5%A5/"/>
    
    <category term="音乐" scheme="http://toad114514.github.io/tags/%E9%9F%B3%E4%B9%90/"/>
    
    <category term="OST" scheme="http://toad114514.github.io/tags/OST/"/>
    
  </entry>
  
  <entry>
    <title>SMMWE 终极关卡包！</title>
    <link href="http://toad114514.github.io/2023/07/18/smmwe-level-pack/"/>
    <id>http://toad114514.github.io/2023/07/18/smmwe-level-pack/</id>
    <published>2023-07-18T06:21:14.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p>![103.jpeg][0]</p><h2 id="SMMWE-终极关卡包"><a href="#SMMWE-终极关卡包" class="headerlink" title="SMMWE 终极关卡包"></a>SMMWE 终极关卡包</h2><p>是的，我们推出了SMMWE终极关卡包，用于纪念SMMWE，由Toad114514制作。<br>该终极关卡包有什么特点？ </p><ul><li>30+ 关卡</li><li>种类多（包括微操、普通、自动、跑步、解密等）</li><li>内含一个大世界</li><li>一个暑假肝出来的终极关卡包</li><li>每周更新！！</li><li>免费获取！！</li></ul><p><strong>是不是碉堡了！</strong><br><strong>赶紧下载这个关卡包吧！</strong></p><p>链接：<br>[下载链接（huang11111）][1] 已失效</p><h3 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h3><p>我该如何使用它？我该如何在SMMWE上游玩这些关卡？<br>看关卡包里的 Readme.txt<br>[0]: <a href="https://img2.imgtp.com/2024/05/10/CHLPWjCD.jpeg">https://img2.imgtp.com/2024/05/10/CHLPWjCD.jpeg</a><br>[1]: </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;![103.jpeg][0]&lt;/p&gt;
&lt;h2 id=&quot;SMMWE-终极关卡包&quot;&gt;&lt;a href=&quot;#SMMWE-终极关卡包&quot; class=&quot;headerlink&quot; title=&quot;SMMWE 终极关卡包&quot;&gt;&lt;/a&gt;SMMWE 终极关卡包&lt;/h2&gt;&lt;p&gt;是的，我们推出了SMMW</summary>
      
    
    
    
    <category term="游戏" scheme="http://toad114514.github.io/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="游戏" scheme="http://toad114514.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="马里奥" scheme="http://toad114514.github.io/tags/%E9%A9%AC%E9%87%8C%E5%A5%A5/"/>
    
    <category term="SMMWE" scheme="http://toad114514.github.io/tags/SMMWE/"/>
    
  </entry>
  
  <entry>
    <title>张浩 Page 盛衰史</title>
    <link href="http://toad114514.github.io/2023/07/17/zhanghao-page-history/"/>
    <id>http://toad114514.github.io/2023/07/17/zhanghao-page-history/</id>
    <published>2023-07-16T19:38:29.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p> 这次聊一个与技术无关的话题。 </p><p>什么，你要我说 张浩 Page？ </p><p>也许可以谈谈这件事…… </p><h3 id="张浩-Pages-的开端"><a href="#张浩-Pages-的开端" class="headerlink" title="张浩 Pages 的开端"></a>张浩 Pages 的开端</h3><p>那是去年的时候，2022年5月份左右认识张浩，当时我五年级的旅途基本上要结束了。发现张浩和我都有共同的爱好（在植物大战僵尸方面），也不知道是谁开始发起话题了，就这样一直聊了很久，直到我家门口才离开。 </p><p>把时间线拉前面一点点。去年寒假在家里就听见下面有人在放炮，而且有时大声有时小。那时的我还坐在一张沙发上，看着电视里的bo叔叔（主要玩马造2，我就是因为他而把我带入到马里奥坑的），我不知道的是，那就是李这停和他的朋友在下面放炮，放的还是火柴炮（后面会单独出一个文章来介绍火柴炮）。 </p><p>直到大约10月最后十几天才和李这停认识。当时我只是下来玩我的手机罢了。我一边玩手机，他们一边玩游戏，他们经常玩警察抓小偷。 </p><p>还是赶紧进入主题吧。 </p><p>张浩 Page 的前身是张浩在11月的时候，所有人在我家附近的平台无聊闲逛着。李这停就想到了偷张浩只因，于是开始偷张浩Penis。</p><h3 id="张浩-Page-的想法"><a href="#张浩-Page-的想法" class="headerlink" title="张浩 Page 的想法"></a>张浩 Page 的想法</h3><p>在今年1月份开始，我已经有了这种想法。 </p><p>那是个在手套厂附近的晚上。李这停在玩如正瑞手机里面的逃跑。我拿着一台15年发布的旧手机，在制作我的html页面。当时不知道是开了一个服务器还是本地访问。那时正好是偷张浩Penis的开端。我想到大家对于张浩的Penis都非常的有兴趣。我在菜鸟教程上学习了一点JavaScript，于是我开始尝试制作html、css和javascript的页面。为了能让页面有一定的吸引力，所以我从偷张浩Penis开始。这个页面用不了几分钟就完成了。我模糊的记得第一个张浩 Page长这个样子</p><h3 id="张浩没只因"><a href="#张浩没只因" class="headerlink" title="张浩没只因"></a>张浩没只因</h3><p>你要偷张浩的只因吗 [按钮1 要] [按钮2 不要]</p><p>按下按钮1，显示“好啊，那走吧！张浩的只因被偷了 i 次”i 是变量，每按一下加1 </p><p>按下按钮2，显示“碉堡你哦，不偷张浩只因，难道还要偷你的只因啊！” </p><p>当时做好之后，我觉得非常满意，也就是从这个页面开始，我的javascript之旅也就开始了（但是后面转到php力）。然后我把成果给李这停看，李这停直接连连夸赞（确信，旁边的张浩开始芬芳馥郁（。因为它代表了张浩没只因也可以用网络的方式去传播的，张浩 Page也成为了偷张浩只因的主要点。 </p><p>当做完这个之后，我又做了一个纪念张浩没只因的html页面。没有说明张浩为何没只因，只是单纯的纪念张浩罢了。我甚至在Toads Blog的爷爷，用Typecho作为博客的Blog上还公布了代码（可惜数据弄丢了）。这事情又让张浩没只因推向巅峰。 </p><h3 id="张浩-Page-的巅峰"><a href="#张浩-Page-的巅峰" class="headerlink" title="张浩 Page 的巅峰"></a>张浩 Page 的巅峰</h3><p>到了巅峰时期，我的张浩 Page在李这停团队里基本人人都知道。于是我把它加入到了我的服务器上。张浩 Page 也开始衍生出其他版本。例如著名的1版和li()，这两个是我做的续集版本，在今年2月份中旬就已经出现。以下几个张浩 Page也很知名</p><ol><li>-114514和114 - Xianbeiclassd30</li><li>2、3和4 - 李这停</li><li>5和coldway - 如郑瑞</li><li>6、@outlook和EX - 飞机带翅膀</li><li>erto、sidao和wedao - 失败的Mannnnnn</li><li>closetime和timeout - 陈这类拔张浩penis</li></ol><p>以下也是知名的张浩 Page，但曾经未收录到我的Toad Stand 128(Toads Tool 前身) </p><ol><li>！- 后室开发人员</li><li>zhanghao - 张浩</li><li>Mario和Luigi - SMG9</li><li>3? - 注释</li><li>club、ping和ubuntu - xfcd4</li></ol><p>当然，现在仍然还有新的张浩 Page出现。这些衍生版本，有的拥有有趣的特点，有的还可以是Wordpress插件，甚至有的可以把张浩搞爆炸（物理。 </p><p>而让张浩最崩溃的衍生版本是李这停的pengas，里面讲述了张浩的只因被别人绑架然后买到缅甸的故事。这个页面出现于6月份左右。内有诈骗到缅甸，买到缅甸噶腰子…以张浩的只因讲述了诈骗的整个流程。张浩的只因也从未想到有如此nb之玩意。（如果有时间我也可以说一说）可惜发布时间太晚了，张浩 Page 都凉了。 </p><p>3月12日出来了一个张浩 Page一览，用fucionapp制作。只不过也凉透了。 </p><h3 id="张浩-Page-的衰落"><a href="#张浩-Page-的衰落" class="headerlink" title="张浩 Page 的衰落"></a>张浩 Page 的衰落</h3><p>从3月份开始，大家对张浩 Page 没了什么兴趣。但每天仍然有新的张浩 Page 出现。而张浩也因为被朋友偷太多只因而准备叛变。</p><p>认识吴子轩十几天后的一个中午，小黑子在和如郑瑞、张浩以及一个女孩在一起讨论叛变的事。计划可能是找到时机再叛变。小黑子抓住李这停不和那几个女生玩警察抓小偷的机会，再来叛变。 </p><p>在小黑子成功叛变之后，张浩也一样开始叛变。李这停抓住张浩回家的时间，跟他谈一谈关于叛变的事情。在经过一段长时间的聊天之后，张浩决定重回李这停这边。这件事过后，李这停为了防止张浩再次叛变，于是要求我删掉所有放在服务器里的张浩 Page。因为他觉得这样子会让张浩失去自尊心，亦或者说张浩附近的朋友会谈起张浩 Page，这样会让张浩二次叛变。 </p><p>在更新日志里，我写的是废弃但不是删除。其实所有的张浩 Page已经删除，且张浩 Pages 的上传页面 ZhangPage Upload 页面及其关联的MySQL库全部删除。就这样，大约4月份开始，张浩 Page 衍生页面制作者从30个人变成2个人，张浩 Page 经历了兴衰，最终也会和Winamp那样，结束了它的生涯，变成无人知道的一个垃圾。张浩 Page 就这样结束了………..吗？ </p><h3 id="张浩-Page-起死回生"><a href="#张浩-Page-起死回生" class="headerlink" title="张浩 Page 起死回生"></a>张浩 Page 起死回生</h3><p>在5月份开始，张浩觉得自己成为普通人了，没什么有趣的了。</p><p>5月21日，张浩找到了我，然后说了一下这个事情。以下是聊天记录： </p><p>张浩：大个子，我需要你的帮助！ </p><p>Toad114514：什么帮助？ </p><p>张浩：我想出名出名，你看有什么办法。 </p><p>（Toad114514思考片刻后） </p><p>Toad114514：只能玩烂梗了，玩偷张浩只因的梗。 </p><p>张浩：为什么？ </p><p>Toad114514：你没有什么擅长的东西，开辟一个新东西也非常的难。 </p><p>张浩：行吧，那你有什么办法？ </p><p>Toad114514：我在服务器上搞一个提交，叫张浩 Page提交。因为偷张浩只因的重要点就在于张浩 Page。然后给你看所有的张浩 Page，哪个可以，我就放在我的服务器上。供别人观看，这样，你不就可以出名了吗？ </p><p>张浩：这个想法好！ </p><p>后面与李这停交流之后，李这停也同意该想法。于是在5月22日，开启了 张浩 issuse，并在5月29日，经过张浩重重筛选之后，选择了Tunter3的张浩 Page并放到服务器上。 </p><p>张浩 Page 又开始流行起来，原先离开的28名张浩 Page制作者，有22个人回来并制作。 </p><p>现在如果要提交张浩 Page ，请向下面的邮箱发送你的名字、张浩 Page 标题、文件和代号，审核过后会发到张浩 Page 列表上，并提供给别人观看。 </p><p>大号：<a href="mailto:&#120;&#x69;&#x61;&#111;&#108;&#97;&#x6e;&#x32;&#x33;&#51;&#x32;&#48;&#x32;&#49;&#64;&#x31;&#x36;&#51;&#46;&#x63;&#x6f;&#109;">&#120;&#x69;&#x61;&#111;&#108;&#97;&#x6e;&#x32;&#x33;&#51;&#x32;&#48;&#x32;&#49;&#64;&#x31;&#x36;&#51;&#46;&#x63;&#x6f;&#109;</a> </p><p>小号：<a href="mailto:&#x66;&#97;&#107;&#101;&#x6c;&#x61;&#x6e;&#x6a;&#x69;&#97;&#x6e;&#64;&#111;&#117;&#116;&#x6c;&#111;&#111;&#107;&#46;&#x63;&#x6f;&#x6d;">&#x66;&#97;&#107;&#101;&#x6c;&#x61;&#x6e;&#x6a;&#x69;&#97;&#x6e;&#64;&#111;&#117;&#116;&#x6c;&#111;&#111;&#107;&#46;&#x63;&#x6f;&#x6d;</a> </p><h3 id="朋友对-张浩-Page-的看法"><a href="#朋友对-张浩-Page-的看法" class="headerlink" title="朋友对 张浩 Page 的看法"></a>朋友对 张浩 Page 的看法</h3><p>无，以后补充</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>张浩 Page 从只是一个普通的练习javascript，变成人人皆知的巅峰，又在死亡的边缘中，被张浩拉回来。张浩 Page 也许可以看见张浩的一生，也或者可以看见张浩没只因的页面。但这些终究是因为娱乐才出来的产品，但张浩对于张浩 Page 仍不阻止，只是李这停把它推向了火堆之中。这是保护张浩还是阻止张浩？我不能明白。但是如果张浩 Page到达巅峰时期时，那或许就是张浩的巅峰时期罢 </p><p>（我丢，3000个字符，这tm怎这么长，我的哪篇文章文章可以超越这篇文章呢） </p><p>（流水账（即答） </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 这次聊一个与技术无关的话题。 &lt;/p&gt;
&lt;p&gt;什么，你要我说 张浩 Page？ &lt;/p&gt;
&lt;p&gt;也许可以谈谈这件事…… &lt;/p&gt;
&lt;h3 id=&quot;张浩-Pages-的开端&quot;&gt;&lt;a href=&quot;#张浩-Pages-的开端&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="张浩" scheme="http://toad114514.github.io/categories/%E5%BC%A0%E6%B5%A9/"/>
    
    
    <category term="张浩" scheme="http://toad114514.github.io/tags/%E5%BC%A0%E6%B5%A9/"/>
    
    <category term="页面" scheme="http://toad114514.github.io/tags/%E9%A1%B5%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>我们更新了网站首页！！</title>
    <link href="http://toad114514.github.io/2023/07/17/change-web-style/"/>
    <id>http://toad114514.github.io/2023/07/17/change-web-style/</id>
    <published>2023-07-16T18:51:16.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p>最新的首页使用 Foundation 制作而成，且更有导航样式！ </p><p><img src="https://img2.imgtp.com/2024/05/10/VYBwg57j.jpg" alt="新主页页面"></p><p>这波非常的 beautiful!<br>关于我改这个主页的事情，到之后我再来说说吧 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最新的首页使用 Foundation 制作而成，且更有导航样式！ &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2.imgtp.com/2024/05/10/VYBwg57j.jpg&quot; alt=&quot;新主页页面&quot;&gt;&lt;/p&gt;
&lt;p&gt;这波非常的 beautiful!&lt;b</summary>
      
    
    
    
    <category term="科技与狠活" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80%E4%B8%8E%E7%8B%A0%E6%B4%BB/"/>
    
    
    <category term="网站" scheme="http://toad114514.github.io/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>有了 v2ray 但是没有节点怎么办</title>
    <link href="http://toad114514.github.io/2023/07/06/v2ray-port/"/>
    <id>http://toad114514.github.io/2023/07/06/v2ray-port/</id>
    <published>2023-07-05T16:31:33.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img2.imgtp.com/2024/05/10/nVJfvALF.jpg" alt="v2rayNG 和要翻墙的应用"></p><p>有了翻墙软件但是没有节点怎么办，我做了一个一个订阅链接<br><strong>注意：这些订阅链接只能用于学习用途，请勿用于非法用途！</strong></p><h3 id="免费节点订阅链接"><a href="#免费节点订阅链接" class="headerlink" title="免费节点订阅链接"></a>免费节点订阅链接</h3><p>后面带*的订阅链接会每天更新，具体更新情况看订阅链接更新的网站</p><ol><li>ClashNode <a href="https://clashnode.com/wp-content/uploads/2023/07/20230705.txt">https://clashnode.com/wp-content/uploads/2023/07/20230705.txt</a> *</li><li>Ceacer <a href="https://v2ray.ceacer.cn/api/v1/client/subscribe=token=5c4f46040399e91aca5fd1930da8a1">https://v2ray.ceacer.cn/api/v1/client/subscribe=token=5c4f46040399e91aca5fd1930da8a1</a></li><li>v2rayshare <a href="https://v2rayshare.com/wp-content/uploads/2023/07/20230705.txt">https://v2rayshare.com/wp-content/uploads/2023/07/20230705.txt</a> *</li></ol><p>先暂时到这吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img2.imgtp.com/2024/05/10/nVJfvALF.jpg&quot; alt=&quot;v2rayNG 和要翻墙的应用&quot;&gt;&lt;/p&gt;
&lt;p&gt;有了翻墙软件但是没有节点怎么办，我做了一个一个订阅链接&lt;br&gt;&lt;strong&gt;注意：这些订阅链接只</summary>
      
    
    
    
    <category term="科技与狠活" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80%E4%B8%8E%E7%8B%A0%E6%B4%BB/"/>
    
    
    <category term="v2ray" scheme="http://toad114514.github.io/tags/v2ray/"/>
    
    <category term="节点" scheme="http://toad114514.github.io/tags/%E8%8A%82%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>我给 blog 装了个电台浏览器</title>
    <link href="http://toad114514.github.io/2023/07/02/blog-new-rad/"/>
    <id>http://toad114514.github.io/2023/07/02/blog-new-rad/</id>
    <published>2023-07-02T04:07:47.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img2.imgtp.com/2024/05/10/EfIFIirz.jpg" alt="Screenshot_2023-07-02-11-34-16-51.jpg"><br>这里只有一个我喜欢的电台。之后会加入更多电台。<br>在播放器列表力点击最后一个就可以了。 </p><p>Qplayer2设置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;HBR1 - I.D.M Tranceponder&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="attr">&quot;artist&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="attr">&quot;audio&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://ubuntu.hbr1.com:19800/trance-low.ogg&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="attr">&quot;cover&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="attr">&quot;lrc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span> </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这个电台有点歌功能<br>你可以去看看视频<br>根据视频操作<br>在点击 play another list 之后，可以随便点击一个音乐后面的play it。 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img2.imgtp.com/2024/05/10/EfIFIirz.jpg&quot; alt=&quot;Screenshot_2023-07-02-11-34-16-51.jpg&quot;&gt;&lt;br&gt;这里只有一个我喜欢的电台。之后会加入更多电台。&lt;br&gt;在播放器</summary>
      
    
    
    
    <category term="科技与狠活" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80%E4%B8%8E%E7%8B%A0%E6%B4%BB/"/>
    
    
    <category term="博客" scheme="http://toad114514.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="播放器" scheme="http://toad114514.github.io/tags/%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>关于 lxde 配组件的教程</title>
    <link href="http://toad114514.github.io/2023/07/01/lxde-widget-change/"/>
    <id>http://toad114514.github.io/2023/07/01/lxde-widget-change/</id>
    <published>2023-06-30T16:32:26.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p> 嘿，大家好，我回来了;-)<br>为什么那么久没更新，是因为我去复习，来考小升初了<br>考完了，写个文章，开始这个没有作业的暑假吧(喜 </p><h1 id="lxde-配组件-完全文字版"><a href="#lxde-配组件-完全文字版" class="headerlink" title="lxde 配组件(完全文字版"></a>lxde 配组件(完全文字版</h1><h3 id="lxde-简介"><a href="#lxde-简介" class="headerlink" title="lxde 简介"></a>lxde 简介</h3><p>还是先引用</p><blockquote><p>LXDE，全名Lightweight X11 Desktop Environment。是一个基于GTK2的美观和国际化的Linux发行版桌面环境。与KDE和GNOME相比，LXDE的资源占用更小，适合在配置比较低的电脑上工作。它有很多特点，如模块化设计。</p></blockquote><p>(来自百度百科) </p><p>今天要教的是这里面的重要点：<strong>模块化设计</strong></p><h3 id="模块化设计"><a href="#模块化设计" class="headerlink" title="模块化设计"></a>模块化设计</h3><p>模块，当一个小部分有一些不好是，就可以用模块来补充那个小部分，还可以把它们变得更好，相当于插件。</p><p>如果一个东西被模块化了，证明了可以被高度自定义。 </p><p>原生的lxde是不好看的，那我们可以从模块下手。张浩lxde重制计划也是如此。 </p><h3 id="为-lxde-换桌面管理器"><a href="#为-lxde-换桌面管理器" class="headerlink" title="为 lxde 换桌面管理器"></a>为 lxde 换桌面管理器</h3><p>在 lxapplication 中的选项卡二(桌面管理器)中，里面有一个框，这个框是用来填写桌面管理器的启动指令。<br>以xfwm4为例子：<br>先安装xfwm4 </p><pre><code>apt install xfwm4</code></pre><p>然后在 lxapplication 的选项卡”桌面管理器”中的输入框输入</p><pre><code>xfwm4</code></pre><p>如果你有多个显示器，请在启动xfwm4的指令里指定显示器<br>你可以输入 </p><pre><code>xfwm4 --help</code></pre><p>去寻求帮助</p><h3 id="为-lxde-换面板"><a href="#为-lxde-换面板" class="headerlink" title="为 lxde 换面板"></a>为 lxde 换面板</h3><p>原先的 lxpanel 有点不好看，我想换一个<br>以 xfce4-panel 为例<br>先安装 </p><pre><code>apt install xfce4-panel</code></pre><p>因为 lxde 并没有专门为面板准备的设置，所以你需要在lxde 会话启动后去执行以下命令</p><pre><code>xfce4-panel --replace</code></pre><p>replace是用于切换 lxpanel 的实例的</p><p>关于 lxde 会话启动自动执行命令，请自行百度或bing </p><h3 id="Dock-栏"><a href="#Dock-栏" class="headerlink" title="Dock 栏"></a>Dock 栏</h3><p>如果你之前是 Mac 用户，那么你可以试试给你的桌面环境装 Dock 栏。这里建议 Plank 作为你的 Dock 栏 </p><p>首先，安装 Plank </p><pre><code>apt install plank</code></pre><p>接下来，设置开机启动<br>在 lxapplication 中，点击选项卡”启动自启”中将plank打勾<br>接下来，你就可以体验 Dock 栏了<br><strong>注意：不同的窗口管理器，显示的效果也不同。例如在openbox运行只有点击图标时跳跃，而在Metacity和xfwm4等窗口管理器上，还会有鼠标停留时的动画。</strong></p><h3 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h3><p>在 apt 上，可以见到很多终端模拟器，有的美观(xfce4-terminal)，有的复古(cool-retro-term)，有的还可以帮助你便捷使用(下拉式终端)<br>如果你追求美化，可以试试xfce4-terminal<br>先安装 xfce4-terminal </p><pre><code>apt install xfce4-terminal</code></pre><p>接下来就是设置默认终端<br>这里不在过多讲述，可以自行百度&#x2F;bing </p><h3 id="换图标和窗口主题样式"><a href="#换图标和窗口主题样式" class="headerlink" title="换图标和窗口主题样式"></a>换图标和窗口主题样式</h3><p>这个很简单<br>以xfwm4为例<br>主题样式可以从xfce-look.org上找到<br>找到后去下载<br>下载完成后输入： </p><pre><code>sudo cp -rf 主题目录 /usr/share/themes</code></pre><p>图标也是从xfce-look.org上下载的<br>下载完成后输入： </p><pre><code>sudo cp -rf 图标目录 /usr/share/icons</code></pre><p>最后在窗口管理器里设置即可 </p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>当一个桌面环境被模块化了，确实可以帮助我们把lxde美化得不像lxde，但是在美化之前，一定好看看你的电脑撑不撑得住，撑不住就可以换走了。如果你不听我的话，那么长期使用电脑，会给电脑造成负担，说不定哪一天就罢工力(悲</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 嘿，大家好，我回来了;-)&lt;br&gt;为什么那么久没更新，是因为我去复习，来考小升初了&lt;br&gt;考完了，写个文章，开始这个没有作业的暑假吧(喜 &lt;/p&gt;
&lt;h1 id=&quot;lxde-配组件-完全文字版&quot;&gt;&lt;a href=&quot;#lxde-配组件-完全文字版&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="科技与狠活" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80%E4%B8%8E%E7%8B%A0%E6%B4%BB/"/>
    
    
    <category term="科技" scheme="http://toad114514.github.io/tags/%E7%A7%91%E6%8A%80/"/>
    
    <category term="linux" scheme="http://toad114514.github.io/tags/linux/"/>
    
    <category term="桌面环境" scheme="http://toad114514.github.io/tags/%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/"/>
    
    <category term="lxde" scheme="http://toad114514.github.io/tags/lxde/"/>
    
  </entry>
  
  <entry>
    <title>学习偷袭张浩</title>
    <link href="http://toad114514.github.io/2023/06/10/learn-get-zhanghao/"/>
    <id>http://toad114514.github.io/2023/06/10/learn-get-zhanghao/</id>
    <published>2023-06-10T11:44:53.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学习偷袭张浩"><a href="#学习偷袭张浩" class="headerlink" title="学习偷袭张浩"></a>学习偷袭张浩</h1><p>欢迎来到学习偷袭张浩！此处收集了朋友偷袭张浩的方法，你可以给我<a href="mailto:xiaolan2332021@163.com">发邮箱</a>提供偷袭张浩的方法！ </p><pre><code>&lt;b style=&quot;color: red&quot;&gt;That so good!&lt;/b&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;学习偷袭张浩&quot;&gt;&lt;a href=&quot;#学习偷袭张浩&quot; class=&quot;headerlink&quot; title=&quot;学习偷袭张浩&quot;&gt;&lt;/a&gt;学习偷袭张浩&lt;/h1&gt;&lt;p&gt;欢迎来到学习偷袭张浩！此处收集了朋友偷袭张浩的方法，你可以给我&lt;a href=&quot;mailto:xiaolan</summary>
      
    
    
    
    <category term="张浩" scheme="http://toad114514.github.io/categories/%E5%BC%A0%E6%B5%A9/"/>
    
    
    <category term="张浩" scheme="http://toad114514.github.io/tags/%E5%BC%A0%E6%B5%A9/"/>
    
  </entry>
  
  <entry>
    <title>搭建IRC服务器</title>
    <link href="http://toad114514.github.io/2023/06/10/create-irc/"/>
    <id>http://toad114514.github.io/2023/06/10/create-irc/</id>
    <published>2023-06-10T04:07:46.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p>首先，我们要了解IRC是什么玩意： </p><blockquote><p>因特网中继聊天（Internet Relay Chat），一般称为互联网中继聊天，简称：IRC。它是由芬兰人Jarkko Oikarinen于1988年首创的一种网络聊天协议。经过十年的发展，世界上有超过60个国家提供了IRC的服务。IRC的工作原理非常简单，您只要在自己的PC上运行客户端软件，然后通过因特网以IRC协议连接到一台IRC服务器上即可。它的特点是速度非常之快，聊天时几乎没有延迟的现象，并且只占用很小的带宽资源。所有用户可以在一个被称为\Channel\（频道）的地方就某一话题进行交谈或密谈。每个IRC的使用者都有一个Nickname（昵称）。(来自百度百科) </p></blockquote><p>(这IRC非常的老，快成骨灰了)<br>搭建IRC服务器需要一个Linux服务器来搭建，而Widnows的话**(我家没有Windows电脑，模拟器还tm卡到升天)**自己去查查罢。<br>搭建IRC服务器可以使用ngircd。 </p><h1 id="安装ngircd"><a href="#安装ngircd" class="headerlink" title="安装ngircd"></a>安装ngircd</h1><p>以Ubuntu 22.10(Utermux套了个proot容器，那里还套了个Ubuntu)为例<br>安装ngircd<br>    apt install ngircd<br>然后通过vim修改ngircd配置<br>    vim &#x2F;etc&#x2F;ngircd&#x2F;ngircd.conf</p><p><img src="https://toad114514.github.io/img/2306/ircd.jpg" alt="ngircd 配置界面"></p><p> (好多注释，但是看不懂)<br>根据下面我自己给出来的注释去找到选项并填写即可 </p><pre><code>[Global]   #服务器IP地址   name = 192.168.114.514   #管理员信息   AdminInfo1 = Toad - 此IRC服务器创始人   AdminInfo2 = 张浩你个屑(   #管理员邮箱   AdminEMail = xxx@xxx.com   #IRC 命令帮助文件   HelpFile = /usr/share/doc/ngircd/Command.txt   #IRC 服务器信息   Info = 来，一起偷张浩大吊   #Motd 文件，主要用于IRC服务器公告(如果没有请自己建)   MotdFile = /etc/ngircd/ngircd.motd   [Channel]   #如果需要自带频道不用自己创建的话，可以去掉前面的分号   #频道名字，频道名字前必须带井号   name = #Toad114514   #频道话题   Topic = 什么都聊，包括偷张浩只因</code></pre><p>完成后保存<br>最后启动服务器 </p><pre><code>$ sudo /etc/init.d/ngircd start</code></pre><p><strong>(我的Ubuntu用systemd启动会失败，所以使用传统init方式)</strong><br>连接IRC服务器<br>这里使用安卓的Yaaic来连接，电脑可以用HexChat或Pidgin<br>打开Yaaic，点击右上角加号创建IRC服务器 </p><p><img src="https://toad114514.github.io/img/2306/irc-android.jpg" alt="Yaaic 添加服务器界面"></p><p>红圈填标题<br>橙圈填服务器IP地址(如果是本地)<br>绿圈填昵称<br>下面还有个Real Name<br>跟绿圈填一致就行了<br>完成后点击右上角的按钮<br>回到主页，点击和填写标题一样的列表 </p><p><img src="https://toad114514.github.io/img/2306/irc-android2.jpg" alt="Yaaic 主页"></p><p>成功登陆!<br>可以通过点击右上角的加号加入频道<br>如果在填写配置文件时，把Channel块里的name和topic前面的分号去除掉了，那么可以输入name到弹出的输入框里<br>按下Join后，就可以欢快的聊天了</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>其实IRC服务器也只有在极客圈里会用到。看看QQ和微信，越来越臃肿。添加更多的功能，这些功能可能你一辈子都用不到。就算是我手机在用TIM(微信和QQ的结合体)，至少内存占1GB。如果与IRC对比，我会去用IRC，因为它足够简单。但是我朋友用的都是QQ和微信(与张浩刷屏(确信))，所以才会被迫去用罢了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先，我们要了解IRC是什么玩意： &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因特网中继聊天（Internet Relay Chat），一般称为互联网中继聊天，简称：IRC。它是由芬兰人Jarkko Oikarinen于1988年首创的一种网络聊天协议。经过十年的发展，世界</summary>
      
    
    
    
    <category term="科技与狠活" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80%E4%B8%8E%E7%8B%A0%E6%B4%BB/"/>
    
    
    <category term="服务器" scheme="http://toad114514.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="IRC" scheme="http://toad114514.github.io/tags/IRC/"/>
    
  </entry>
  
  <entry>
    <title>《360度无死角感谢Z-blog》</title>
    <link href="http://toad114514.github.io/2023/06/10/thank-zblog/"/>
    <id>http://toad114514.github.io/2023/06/10/thank-zblog/</id>
    <published>2023-06-09T18:27:17.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p>关于<strong>ksweb别想玩typecho</strong>的事情罢，我的ksweb装typecho会出现没有文件的情况，这令我非常的生气(114514</p><p>今天晚上，我看见有一个叫Z-blog的玩意进入了我的视野里。它也是blog部署，于是”试试就逝世”，我必须要看看这寄吧长啥样 </p><p>安装：</p><p><img src="https://toad114514.github.io/img/2306/zblog-start.jpg" alt="Z-blog 下载帖子"></p><blockquote><p>单文件?nnd，这怎么做得到吗 </p></blockquote><p>但还是想都没想，我还是把文件通过FTP扔到了我家电视上(我家电视是个服务器，具体可以看电视改造计划(确信)。</p><p>通过我自己的理解(数据库用SQLite，我不想再创建MySQL数据库力)，安装成功了 </p><p><img src="https://toad114514.github.io/img/2306/zblog.jpg" alt="Z-blog 开始界面"></p><p>而且没有像<strong>typecho一样的错误</strong>，我真的太开心力 </p><p>接下了，我会对这个blog进行修改，并加入一些插件和主题(Very good) </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;关于&lt;strong&gt;ksweb别想玩typecho&lt;/strong&gt;的事情罢，我的ksweb装typecho会出现没有文件的情况，这令我非常的生气(114514&lt;/p&gt;
&lt;p&gt;今天晚上，我看见有一个叫Z-blog的玩意进入了我的视野里。它也是blog部署，于是”试试就逝世”</summary>
      
    
    
    
    <category term="科技与狠活" scheme="http://toad114514.github.io/categories/%E7%A7%91%E6%8A%80%E4%B8%8E%E7%8B%A0%E6%B4%BB/"/>
    
    
    <category term="博客" scheme="http://toad114514.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="科技" scheme="http://toad114514.github.io/tags/%E7%A7%91%E6%8A%80/"/>
    
    <category term="Zblog" scheme="http://toad114514.github.io/tags/Zblog/"/>
    
  </entry>
  
  <entry>
    <title>浩简介</title>
    <link href="http://toad114514.github.io/1970/01/01/haojj/"/>
    <id>http://toad114514.github.io/1970/01/01/haojj/</id>
    <published>1970-01-01T00:00:00.000Z</published>
    <updated>2024-08-15T18:38:32.197Z</updated>
    
    <content type="html"><![CDATA[<p> 浩，约十岁，有矮。人有故事，如浩楼下溃，浩与虎交打，浩叛等。此皆已知，浩虽十年张浩无人知，楼坏知天下。浩有号“勇士总冠军”。自张浩反，至张浩，子轩执手机录之，口中念心“张浩勇士总冠军”，此号之所由来也。号已过李罢识之。盗张浩但以距年，李之罢也，如郑瑞与虎共无聊时，此欲出之。念后知其始盗浩但因，悟其手甚滑，至一步，盗往浩。后二瑞如郑瑞及王虎已察，始共盗浩但坐②。后略窃浩口，浩遂溃。浩归第，息犹不舍之，于楼下始简。浩楼下崩溃亦缘之所起。唯取此本，如窃此中只因。张浩戏太素②。如张浩近玩之漫威超英雄，闻李之停说，英女千有二百，直嘲电摇。更远者为之C，浩连最简坑而下，真一灰也。王统体而观浩者，人每欺也，使吾信之，猪皆能飞，“当豕飞”是也，而来非。且斯人甚鄙叛，易为而速于蜀，玩太灰，无筋力而始尽弃灰焉。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 浩，约十岁，有矮。人有故事，如浩楼下溃，浩与虎交打，浩叛等。此皆已知，浩虽十年张浩无人知，楼坏知天下。浩有号“勇士总冠军”。自张浩反，至张浩，子轩执手机录之，口中念心“张浩勇士总冠军”，此号之所由来也。号已过李罢识之。盗张浩但以距年，李之罢也，如郑瑞与虎共无聊时，此欲出之</summary>
      
    
    
    
    <category term="张浩" scheme="http://toad114514.github.io/categories/%E5%BC%A0%E6%B5%A9/"/>
    
    
    <category term="张浩" scheme="http://toad114514.github.io/tags/%E5%BC%A0%E6%B5%A9/"/>
    
  </entry>
  
</feed>
